{
  "version": 3,
  "sources": ["../../node_modules/@lit/reactive-element/src/css-tag.ts", "../../node_modules/@lit/reactive-element/src/reactive-element.ts", "../../node_modules/lit-html/src/lit-html.ts", "../../node_modules/lit-element/src/lit-element.ts", "../../node_modules/lit/index.js", "../../node_modules/@lit/reactive-element/src/decorators/custom-element.ts", "../../node_modules/@lit/reactive-element/src/decorators/property.ts", "../../node_modules/@lit/reactive-element/src/decorators/state.ts", "../../node_modules/@lit/reactive-element/src/decorators/base.ts", "../../node_modules/@lit/reactive-element/src/decorators/query.ts", "../../node_modules/lit/decorators.js", "../../frontend/src/components/auth-service.ts", "../../frontend/src/pages/login.ts", "../../frontend/src/domains/hidroponik/dashboard-hidoponik.ts", "../../frontend/src/domains/aquakultur/dashboard-aquakultur.ts", "../../frontend/src/domains/peternakan/dashboard-peternakan.ts", "../../frontend/src/pages/dashboard.ts", "../../frontend/src/pages/histori.ts", "../../frontend/src/pages/about.ts", "../../frontend/src/pages/not-found.ts", "../../frontend/src/components/app-shell.ts", "../../frontend/src/components/app-header.ts", "../../frontend/src/components/app-nav.ts", "../../frontend/src/components/user-info.ts", "../../frontend/src/components/app-footer.ts", "../../frontend/src/components/app-main.ts", "../../node_modules/path-to-regexp/src/index.ts", "../../node_modules/@vaadin/router/src/resolver/utils.ts", "../../node_modules/@vaadin/router/src/resolver/matchPath.ts", "../../node_modules/@vaadin/router/src/resolver/matchRoute.ts", "../../node_modules/@vaadin/router/src/resolver/resolveRoute.ts", "../../node_modules/@vaadin/router/src/resolver/resolver.ts", "../../node_modules/@vaadin/router/src/resolver/generateUrls.ts", "../../node_modules/@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js", "../../node_modules/@vaadin/vaadin-usage-statistics/vaadin-usage-statistics-collect.js", "../../node_modules/@vaadin/router/scripts/register.js", "../../node_modules/@vaadin/router/src/router-meta.ts", "../../node_modules/@vaadin/router/src/transitions/animate.ts", "../../node_modules/@vaadin/router/src/utils.ts", "../../node_modules/@vaadin/router/src/triggers/click.ts", "../../node_modules/@vaadin/router/src/triggers/popstate.ts", "../../node_modules/@vaadin/router/src/triggers/navigation.ts", "../../node_modules/@vaadin/router/src/router.ts", "../../frontend/src/pages/home.ts", "../../frontend/src/components/feature-card.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic the native feature](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/adoptedStyleSheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    for (const s of styles) {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    }\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n/**\n * Removes the `readonly` modifier from properties in the union K.\n *\n * This is a safer way to cast a value to a type with a mutable version of a\n * readonly field, than casting to an interface with the field re-declared\n * because it preserves the type of all the fields and warns on typos.\n */\ntype Mutable<T, K extends keyof T> = Omit<T, K> & {\n  -readonly [P in keyof Pick<T, K>]: P extends K ? T[P] : never;\n};\n\n// TODO (justinfagnani): Add `hasOwn` here when we ship ES2022\nconst {\n  is,\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getOwnPropertySymbols,\n  getPrototypeOf,\n} = Object;\n\nconst NODE_MODE = false;\n\n// Lets a minifier replace globalThis references with a minified name\nconst global = globalThis;\n\nif (NODE_MODE) {\n  global.customElements ??= customElements;\n}\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  global.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (\n      !global.litIssuedWarnings!.has(warning) &&\n      !global.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  queueMicrotask(() => {\n    issueWarning(\n      'dev-mode',\n      `Lit is in dev mode. Not recommended for production!`\n    );\n\n    // Issue polyfill support warning.\n    if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n      issueWarning(\n        'polyfill-support-missing',\n        `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n          `the \\`polyfill-support\\` module has not been loaded.`\n      );\n    }\n  });\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n\n  /**\n   * Whether this property is wrapping accessors. This is set by `@property`\n   * to control the initial value change and reflection logic.\n   *\n   * @internal\n   */\n  wrapped?: boolean;\n\n  /**\n   * When `true`, uses the initial value of the property as the default value,\n   * which changes how attributes are handled:\n   *  - The initial value does *not* reflect, even if the `reflect` option is `true`.\n   *    Subsequent changes to the property will reflect, even if they are equal to the\n   *     default value.\n   *  - When the attribute is removed, the property is set to the default value\n   *  - The initial value will not trigger an old value in the `changedProperties` map\n   *    argument to update lifecycle methods.\n   *\n   * When set, properties must be initialized, either with a field initializer, or an\n   * assignment in the constructor. Not initializing the property may lead to\n   * improper handling of subsequent property assignments.\n   *\n   * While this behavior is opt-in, most properties that reflect to attributes should\n   * use `useDefault: true` so that their initial values do not reflect.\n   */\n  useDefault?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K] | undefined;\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean =>\n  !is(value, old);\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  useDefault: false,\n  hasChanged: notEqual,\n};\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind =\n  | 'change-in-update'\n  | 'migration'\n  | 'async-perform-update';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n// Temporary, until google3 is on TypeScript 5.2\ndeclare global {\n  interface SymbolConstructor {\n    readonly metadata: unique symbol;\n  }\n}\n\n// Ensure metadata is enabled. TypeScript does not polyfill\n// Symbol.metadata, so we must ensure that it exists.\n(Symbol as {metadata: symbol}).metadata ??= Symbol('metadata');\n\ndeclare global {\n  // This is public global API, do not change!\n  // eslint-disable-next-line no-var\n  var litPropertyMetadata: WeakMap<\n    object,\n    Map<PropertyKey, PropertyDeclaration>\n  >;\n}\n\n// Map from a class's metadata object to property options\n// Note that we must use nullish-coalescing assignment so that we only use one\n// map even if we load multiple version of this module.\nglobal.litPropertyMetadata ??= new WeakMap<\n  object,\n  Map<PropertyKey, PropertyDeclaration>\n>();\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclasses to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  // In the Node build, this `extends` clause will be substituted with\n  // `(globalThis.HTMLElement ?? HTMLElement)`.\n  //\n  // This way, we will first prefer any global `HTMLElement` polyfill that the\n  // user has assigned, and then fall back to the `HTMLElement` shim which has\n  // been imported (see note at the top of this file about how this import is\n  // generated by Rollup). Note that the `HTMLElement` variable has been\n  // shadowed by this import, so it no longer refers to the global.\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this.__prepare();\n    (this._initializers ??= []).push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having been finalized, which includes creating properties\n   * from `static properties`, but does *not* include all properties created\n   * from decorators.\n   * @nocollapse\n   */\n  protected static finalized: true | undefined;\n\n  /**\n   * Memoized list of all element properties, including any superclass\n   * properties. Created lazily on user subclasses when finalizing the class.\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * `nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated `<style>` elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // Ensure we've created all properties\n    this.finalize();\n    // this.__attributeToPropertyMap is only undefined after finalize() in\n    // ReactiveElement itself. ReactiveElement.observedAttributes is only\n    // accessed with ReactiveElement as the receiver when a subclass or mixin\n    // calls super.observedAttributes\n    return (\n      this.__attributeToPropertyMap && [...this.__attributeToPropertyMap.keys()]\n    );\n  }\n\n  private __instanceProperties?: PropertyValues = undefined;\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // If this is a state property, force the attribute to false.\n    if (options.state) {\n      (options as Mutable<PropertyDeclaration, 'attribute'>).attribute = false;\n    }\n    this.__prepare();\n    // Whether this property is wrapping accessors.\n    // Helps control the initial value change and reflection logic.\n    if (this.prototype.hasOwnProperty(name)) {\n      options = Object.create(options);\n      options.wrapped = true;\n    }\n    this.elementProperties.set(name, options);\n    if (!options.noAccessor) {\n      const key = DEV_MODE\n        ? // Use Symbol.for in dev mode to make it easier to maintain state\n          // when doing HMR.\n          Symbol.for(`${String(name)} (@property() cache)`)\n        : Symbol();\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        defineProperty(this.prototype, name, descriptor);\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    const {get, set} = getOwnPropertyDescriptor(this.prototype, name) ?? {\n      get(this: ReactiveElement) {\n        return this[key as keyof typeof this];\n      },\n      set(this: ReactiveElement, v: unknown) {\n        (this as unknown as Record<string | symbol, unknown>)[key] = v;\n      },\n    };\n    if (DEV_MODE && get == null) {\n      if ('value' in (getOwnPropertyDescriptor(this.prototype, name) ?? {})) {\n        throw new Error(\n          `Field ${JSON.stringify(String(name))} on ` +\n            `${this.name} was declared as a reactive property ` +\n            `but it's actually declared as a value on the prototype. ` +\n            `Usually this is due to using @property or @state on a method.`\n        );\n      }\n      issueWarning(\n        'reactive-property-without-getter',\n        `Field ${JSON.stringify(String(name))} on ` +\n          `${this.name} was declared as a reactive property ` +\n          `but it does not have a getter. This will be an error in a ` +\n          `future version of Lit.`\n      );\n    }\n    return {\n      get,\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = get?.call(this);\n        set?.call(this, value);\n        this.requestUpdate(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) ?? defaultPropertyDeclaration;\n  }\n\n  // Temporary, until google3 is on TypeScript 5.2\n  declare static [Symbol.metadata]: object & Record<PropertyKey, unknown>;\n\n  /**\n   * Initializes static own properties of the class used in bookkeeping\n   * for element properties, initializers, etc.\n   *\n   * Can be called multiple times by code that needs to ensure these\n   * properties exist before using them.\n   *\n   * This method ensures the superclass is finalized so that inherited\n   * property metadata can be copied down.\n   * @nocollapse\n   */\n  private static __prepare() {\n    if (\n      this.hasOwnProperty(JSCompiler_renameProperty('elementProperties', this))\n    ) {\n      // Already prepared\n      return;\n    }\n    // Finalize any superclasses\n    const superCtor = getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    // Initialize elementProperties from the superclass\n    this.elementProperties = new Map(superCtor.elementProperties);\n  }\n\n  /**\n   * Finishes setting up the class so that it's ready to be registered\n   * as a custom element and instantiated.\n   *\n   * This method is called by the ReactiveElement.observedAttributes getter.\n   * If you override the observedAttributes getter, you must either call\n   * super.observedAttributes to trigger finalization, or call finalize()\n   * yourself.\n   *\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this))) {\n      return;\n    }\n    this.finalized = true;\n    this.__prepare();\n\n    // Create properties from the static properties block:\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      const propKeys = [\n        ...getOwnPropertyNames(props),\n        ...getOwnPropertySymbols(props),\n      ] as Array<keyof typeof props>;\n      for (const p of propKeys) {\n        this.createProperty(p, props[p]);\n      }\n    }\n\n    // Create properties from standard decorator metadata:\n    const metadata = this[Symbol.metadata];\n    if (metadata !== null) {\n      const properties = litPropertyMetadata.get(metadata);\n      if (properties !== undefined) {\n        for (const [p, options] of properties) {\n          this.elementProperties.set(p, options);\n        }\n      }\n    }\n\n    // Create the attribute-to-property map\n    this.__attributeToPropertyMap = new Map();\n    for (const [p, options] of this.elementProperties) {\n      const attr = this.__attributeNameForProperty(p, options);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n      }\n    }\n\n    this.elementStyles = this.finalizeStyles(this.styles);\n\n    if (DEV_MODE) {\n      if (this.hasOwnProperty('createProperty')) {\n        issueWarning(\n          'no-override-create-property',\n          'Overriding ReactiveElement.createProperty() is deprecated. ' +\n            'The override will not be called with standard decorators'\n        );\n      }\n      if (this.hasOwnProperty('getPropertyDescriptor')) {\n        issueWarning(\n          'no-override-get-property-descriptor',\n          'Overriding ReactiveElement.getPropertyDescriptor() is deprecated. ' +\n            'The override will not be called with standard decorators'\n        );\n      }\n    }\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | DocumentFragment;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n        ? attribute\n        : typeof name === 'string'\n          ? name.toLowerCase()\n          : undefined;\n  }\n\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Records property default values when the\n   * `useDefault` option is used.\n   */\n  private __defaultValues?: Map<PropertyKey, unknown>;\n\n  /**\n   * Properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Set<PropertyKey>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: Set<ReactiveController>;\n\n  constructor() {\n    super();\n    this.__initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   */\n  private __initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    // This enqueues a microtask that must run before the first update, so it\n    // must be called before requestUpdate()\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= new Set()).add(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    this.__controllers?.delete(controller);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs.\n   */\n  private __saveInstanceProperties() {\n    const instanceProperties = new Map<PropertyKey, unknown>();\n    const elementProperties = (this.constructor as typeof ReactiveElement)\n      .elementProperties;\n    for (const p of elementProperties.keys() as IterableIterator<keyof this>) {\n      if (this.hasOwnProperty(p)) {\n        instanceProperties.set(p, this[p]);\n        delete this[p];\n      }\n    }\n    if (instanceProperties.size > 0) {\n      this.__instanceProperties = instanceProperties;\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // Create renderRoot before controllers `hostConnected`\n    (this as Mutable<typeof this, 'renderRoot'>).renderRoot ??=\n      this.createRenderRoot();\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [responding to attribute changes](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements#responding_to_attribute_changes)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(name: PropertyKey, value: unknown) {\n    const elemProperties: PropertyDeclarationMap = (\n      this.constructor as typeof ReactiveElement\n    ).elementProperties;\n    const options = elemProperties.get(name)!;\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n          'migration'\n        ) &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n            ? options.converter\n            : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      const convertedValue = converter.fromAttribute!(value, options.type);\n      this[propName as keyof this] =\n        convertedValue ??\n        this.__defaultValues?.get(propName) ??\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (convertedValue as any);\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      if (DEV_MODE && (name as unknown) instanceof Event) {\n        issueWarning(\n          ``,\n          `The requestUpdate() method was called with an Event as the property name. This is probably a mistake caused by binding this.requestUpdate as an event listener. Instead bind a function that will call it with no arguments: () => this.requestUpdate()`\n        );\n      }\n      const ctor = this.constructor as typeof ReactiveElement;\n      const newValue = this[name as keyof this];\n      options ??= ctor.getPropertyOptions(name);\n      const changed =\n        (options.hasChanged ?? notEqual)(newValue, oldValue) ||\n        // When there is no change, check a corner case that can occur when\n        // 1. there's a initial value which was not reflected\n        // 2. the property is subsequently set to this value.\n        // For example, `prop: {useDefault: true, reflect: true}`\n        // and el.prop = 'foo'. This should be considered a change if the\n        // attribute is not set because we will now reflect the property to the attribute.\n        (options.useDefault &&\n          options.reflect &&\n          newValue === this.__defaultValues?.get(name) &&\n          !this.hasAttribute(ctor.__attributeNameForProperty(name, options)!));\n      if (changed) {\n        this._$changeProperty(name, oldValue, options);\n      } else {\n        // Abort the request if the property should not be considered changed.\n        return;\n      }\n    }\n    if (this.isUpdatePending === false) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _$changeProperty(\n    name: PropertyKey,\n    oldValue: unknown,\n    {useDefault, reflect, wrapped}: PropertyDeclaration,\n    initializeValue?: unknown\n  ) {\n    // Record default value when useDefault is used. This allows us to\n    // restore this value when the attribute is removed.\n    if (useDefault && !(this.__defaultValues ??= new Map()).has(name)) {\n      this.__defaultValues.set(\n        name,\n        initializeValue ?? oldValue ?? this[name as keyof this]\n      );\n      // if this is not wrapping an accessor, it must be an initial setting\n      // and in this case we do not want to record the change or reflect.\n      if (wrapped !== true || initializeValue !== undefined) {\n        return;\n      }\n    }\n    // TODO (justinfagnani): Create a benchmark of Map.has() + Map.set(\n    // vs just Map.set()\n    if (!this._$changedProperties.has(name)) {\n      // On the initial change, the old value should be `undefined`, except\n      // with `useDefault`\n      if (!this.hasUpdated && !useDefault) {\n        oldValue = undefined;\n      }\n      this._$changedProperties.set(name, oldValue);\n    }\n    // Add to reflecting properties set.\n    // Note, it's important that every change has a chance to add the\n    // property to `__reflectingProperties`. This ensures setting\n    // attribute + property reflects correctly.\n    if (reflect === true && this.__reflectingProperty !== name) {\n      (this.__reflectingProperties ??= new Set<PropertyKey>()).add(name);\n    }\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    const result = this.performUpdate();\n    if (\n      DEV_MODE &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n        'async-perform-update'\n      ) &&\n      typeof (result as unknown as Promise<unknown> | undefined)?.then ===\n        'function'\n    ) {\n      issueWarning(\n        'async-perform-update',\n        `Element ${this.localName} returned a Promise from performUpdate(). ` +\n          `This behavior is deprecated and will be removed in a future ` +\n          `version of ReactiveElement.`\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    if (!this.hasUpdated) {\n      // Create renderRoot before first update. This occurs in `connectedCallback`\n      // but is done here to support out of tree calls to `enableUpdating`/`performUpdate`.\n      (this as Mutable<typeof this, 'renderRoot'>).renderRoot ??=\n        this.createRenderRoot();\n      if (DEV_MODE) {\n        // Produce warning if any reactive properties on the prototype are\n        // shadowed by class fields. Instance fields set before upgrade are\n        // deleted by this point, so any own property is caused by class field\n        // initialization in the constructor.\n        const ctor = this.constructor as typeof ReactiveElement;\n        const shadowedProperties = [...ctor.elementProperties.keys()].filter(\n          (p) => this.hasOwnProperty(p) && p in getPrototypeOf(this)\n        );\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n      // Mixin instance properties once, if they exist.\n      if (this.__instanceProperties) {\n        // TODO (justinfagnani): should we use the stored value? Could a new value\n        // have been set since we stored the own property value?\n        for (const [p, value] of this.__instanceProperties) {\n          this[p as keyof this] = value as this[keyof this];\n        }\n        this.__instanceProperties = undefined;\n      }\n      // Trigger initial value reflection and populate the initial\n      // `changedProperties` map, but only for the case of properties created\n      // via `createProperty` on accessors, which will not have already\n      // populated the `changedProperties` map since they are not set.\n      // We can't know if these accessors had initializers, so we just set\n      // them anyway - a difference from experimental decorators on fields and\n      // standard decorators on auto-accessors.\n      // For context see:\n      // https://github.com/lit/lit/pull/4183#issuecomment-1711959635\n      const elementProperties = (this.constructor as typeof ReactiveElement)\n        .elementProperties;\n      if (elementProperties.size > 0) {\n        for (const [p, options] of elementProperties) {\n          const {wrapped} = options;\n          const value = this[p as keyof this];\n          if (\n            wrapped === true &&\n            !this._$changedProperties.has(p) &&\n            value !== undefined\n          ) {\n            this._$changeProperty(p, undefined, options, value);\n          }\n        }\n      }\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n        'change-in-update'\n      )\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    // The forEach() expression will only run when __reflectingProperties is\n    // defined, and it returns undefined, setting __reflectingProperties to\n    // undefined\n    this.__reflectingProperties &&= this.__reflectingProperties.forEach((p) =>\n      this.__propertyToAttribute(p, this[p as keyof this])\n    ) as undefined;\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n// Assigned here to work around a jscompiler bug with static fields\n// when compiling to ES5.\n// https://github.com/google/closure-compiler/issues/3177\n(ReactiveElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('elementProperties', ReactiveElement)\n] = new Map();\n(ReactiveElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('finalized', ReactiveElement)\n] = new Map();\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = [\n    'change-in-update',\n    'async-perform-update',\n  ];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (!this.enabledWarnings!.includes(warning)) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('2.1.1');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  queueMicrotask(() => {\n    issueWarning!(\n      'multiple-versions',\n      `Multiple versions of Lit loaded. Loading multiple versions ` +\n        `is not recommended.`\n    );\n  });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\nimport type {TrustedHTML, TrustedTypesWindow} from 'trusted-types/lib/index.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (\n      !global.litIssuedWarnings!.has(warning) &&\n      !global.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  queueMicrotask(() => {\n    issueWarning(\n      'dev-mode',\n      `Lit is in dev mode. Not recommended for production!`\n    );\n  });\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? (global.ShadyDOM!.wrap as <T extends Node>(node: T) => T)\n    : <T extends Node>(node: T) => node;\n\nconst trustedTypes = (global as unknown as TrustedTypesWindow).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${Math.random().toFixed(9).slice(2)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\nconst MATHML_RESULT = 3;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT | typeof MATHML_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg} when it hasn't been compiled by @lit-labs/compiler.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type UncompiledTemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\n/**\n * This is a template result that may be either uncompiled or compiled.\n *\n * In the future, TemplateResult will be this type. If you want to explicitly\n * note that a template result is potentially compiled, you can reference this\n * type and it will continue to behave the same through the next major version\n * of Lit. This can be useful for code that wants to prepare for the next\n * major version of Lit.\n */\nexport type MaybeCompiledTemplateResult<T extends ResultType = ResultType> =\n  | UncompiledTemplateResult<T>\n  | CompiledTemplateResult;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n * In Lit 4, this type will be an alias of\n * MaybeCompiledTemplateResult, so that code will get type errors if it assumes\n * that Lit templates are not compiled. When deliberately working with only\n * one, use either {@linkcode CompiledTemplateResult} or\n * {@linkcode UncompiledTemplateResult} explicitly.\n */\nexport type TemplateResult<T extends ResultType = ResultType> =\n  UncompiledTemplateResult<T>;\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport type MathMLTemplateResult = TemplateResult<typeof MATHML_RESULT>;\n\n/**\n * A TemplateResult that has been compiled by @lit-labs/compiler, skipping the\n * prepare step.\n */\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  // The type is a TemplateStringsArray to guarantee that the value came from\n  // source code, preventing a JSON injection attack.\n  h: TemplateStringsArray;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    if (DEV_MODE) {\n      // Import static-html.js results in a circular dependency which g3 doesn't\n      // handle. Instead we know that static values must have the field\n      // `_$litStatic$`.\n      if (\n        values.some((val) => (val as {_$litStatic$: unknown})?.['_$litStatic$'])\n      ) {\n        issueWarning(\n          '',\n          `Static values 'literal' or 'unsafeStatic' cannot be used as values to non-static templates.\\n` +\n            `Please use the static 'html' tag function. See https://lit.dev/docs/templates/expressions/#static-expressions`\n        );\n      }\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently render\n * to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus not be properly contained within an `<svg>` HTML\n * element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * Interprets a template literal as MathML fragment that can efficiently render\n * to and update a container.\n *\n * ```ts\n * const num = mathml`<mn>1</mn>`;\n *\n * const eq = html`\n *   <math>\n *     ${num}\n *   </math>`;\n * ```\n *\n * The `mathml` *tag function* should only be used for MathML fragments, or\n * elements that would be contained **inside** a `<math>` HTML element. A common\n * error is placing a `<math>` *element* in a template tagged with the `mathml`\n * tag function. The `<math>` element is an HTML element and should be used\n * within a template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an MathML fragment from the\n * `render()` method, as the MathML fragment will be contained within the\n * element's shadow root and thus not be properly contained within a `<math>`\n * HTML element.\n */\nexport const mathml = tag(MATHML_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - they must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\nfunction trustFromTemplateString(\n  tsa: TemplateStringsArray,\n  stringFromTSA: string\n): TrustedHTML {\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  return policy !== undefined\n    ? policy.createHTML(stringFromTSA)\n    : (stringFromTSA as unknown as TrustedHTML);\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string> = [];\n  let html =\n    type === SVG_RESULT ? '<svg>' : type === MATHML_RESULT ? '<math>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n                ? doubleQuoteAttrEndRegex\n                : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n          ? (attrNames.push(attrName!),\n            s.slice(0, attrNameEndIndex) +\n              boundAttributeSuffix +\n              s.slice(attrNameEndIndex)) +\n            marker +\n            end\n          : s + marker + (attrNameEndIndex === -2 ? i : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html +\n    (strings[l] || '<?>') +\n    (type === SVG_RESULT ? '</svg>' : type === MATHML_RESULT ? '</math>' : '');\n\n  // Returned as an array for terseness\n  return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: UncompiledTemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Re-parent SVG or MathML nodes into template root\n    if (type === SVG_RESULT || type === MATHML_RESULT) {\n      const wrapper = this.el.content.firstChild!;\n      wrapper.replaceWith(...wrapper.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          for (const name of (node as Element).getAttributeNames()) {\n            if (name.endsWith(boundAttributeSuffix)) {\n              const realName = attrNames[attrNameIndex++];\n              const value = (node as Element).getAttribute(name)!;\n              const statics = value.split(marker);\n              const m = /([.?@])?(.*)/.exec(realName)!;\n              parts.push({\n                type: ATTRIBUTE_PART,\n                index: nodeIndex,\n                name: m[2],\n                strings: statics,\n                ctor:\n                  m[1] === '.'\n                    ? PropertyPart\n                    : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                        ? EventPart\n                        : AttributePart,\n              });\n              (node as Element).removeAttribute(name);\n            } else if (name.startsWith(marker)) {\n              parts.push({\n                type: ELEMENT_PART,\n                index: nodeIndex,\n              });\n              (node as Element).removeAttribute(name);\n            }\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for child parts\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n\n    if (DEV_MODE) {\n      // If there was a duplicate attribute on a tag, then when the tag is\n      // parsed into an element the attribute gets de-duplicated. We can detect\n      // this mismatch if we haven't precisely consumed every attribute name\n      // when preparing the template. This works because `attrNames` is built\n      // from the template string and `attrNameIndex` comes from processing the\n      // resulting DOM.\n      if (attrNames.length !== attrNameIndex) {\n        throw new Error(\n          `Detected duplicate attribute bindings. This occurs if your template ` +\n            `has duplicate attributes on an element tag. For example ` +\n            `\"<input ?disabled=\\${true} ?disabled=\\${false}>\" contains a ` +\n            `duplicate \"disabled\" attribute. The error was detected in ` +\n            `the following template: \\n` +\n            '`' +\n            strings.join('${...}') +\n            '`'\n        );\n      }\n    }\n\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'template prep',\n        template: this,\n        clonableTemplate: this.el,\n        parts: this.parts,\n        strings,\n      });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\nexport type {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'set part',\n            part,\n            value: values[i],\n            valueIndex: i,\n            values,\n            templateInstance: this,\n          });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype ChildTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | ChildTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unused otherwise. The\n   * intention would be clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent &&\n            debugLogEvent({\n              kind: 'commit nothing to child',\n              start: this._$startNode,\n              end: this._$endNode,\n              parent: this._$parent,\n              options: this.options,\n            });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit node',\n          start: this._$startNode,\n          parent: this._$parent,\n          value: value,\n          options: this.options,\n        });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit text',\n          node,\n          value,\n          options: this.options,\n        });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: textNode,\n            value,\n            options: this.options,\n          });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: wrap(this._$startNode).nextSibling as Text,\n            value,\n            options: this.options,\n          });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as UncompiledTemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(\n              trustFromTemplateString(type.h, type.h[0]),\n              this.options\n            )),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template updating',\n          template,\n          instance: this._$committedValue as TemplateInstance,\n          parts: (this._$committedValue as TemplateInstance)._$parts,\n          options: this.options,\n          values,\n        });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      instance._update(values);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated and updated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: UncompiledTemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives\n   *     in those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start !== this._$endNode) {\n      // The non-null assertion is safe because if _$startNode.nextSibling is\n      // null, then _$endNode is also null, and we would not have entered this\n      // loop.\n      const n = wrap(start!).nextSibling;\n      wrap(start!).remove();\n      start = n;\n    }\n  }\n\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this method\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type:\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART = ATTRIBUTE_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit attribute',\n          element: this.element,\n          name: this.name,\n          value,\n          options: this.options,\n        });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit property',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit boolean attribute',\n        element: this.element,\n        name: this.name,\n        value: !!(value && value !== nothing),\n        options: this.options,\n      });\n    (wrap(this.element) as Element).toggleAttribute(\n      this.name,\n      !!value && value !== nothing\n    );\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit event listener',\n        element: this.element,\n        name: this.name,\n        value: newListener,\n        options: this.options,\n        removeListener: shouldRemoveListener,\n        addListener: shouldAddListener,\n        oldListener,\n      });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit to element binding',\n        element: this.element,\n        value,\n        options: this.options,\n      });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('3.3.1');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  queueMicrotask(() => {\n    issueWarning!(\n      'multiple-versions',\n      `Multiple versions of Lit loaded. ` +\n        `Loading multiple versions is not recommended.`\n    );\n  });\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'begin render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'end render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n * LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n * Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\nconst DEV_MODE = true;\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  global.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (\n      !global.litIssuedWarnings!.has(warning) &&\n      !global.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See @lit/reactive-element for more information.\n */\n(LitElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('finalized', LitElement)\n] = true;\n\n// Install hydration if available\nglobal.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litElementPolyfillSupportDevMode\n  : global.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(global.litElementVersions ??= []).push('4.2.1');\nif (DEV_MODE && global.litElementVersions.length > 1) {\n  queueMicrotask(() => {\n    issueWarning!(\n      'multiple-versions',\n      `Multiple versions of Lit loaded. Loading multiple versions ` +\n        `is not recommended.`\n    );\n  });\n}\n", "import\"@lit/reactive-element\";import\"lit-html\";export*from\"lit-element/lit-element.js\";export*from\"lit-html/is-server.js\";\n//# sourceMappingURL=index.js.map\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport type {Constructor} from './base.js';\n\n/**\n * Allow for custom element classes with private constructors\n */\ntype CustomElementClass = Omit<typeof HTMLElement, 'new'>;\n\nexport type CustomElementDecorator = {\n  // legacy\n  (cls: CustomElementClass): void;\n\n  // standard\n  (\n    target: CustomElementClass,\n    context: ClassDecoratorContext<Constructor<HTMLElement>>\n  ): void;\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement =\n  (tagName: string): CustomElementDecorator =>\n  (\n    classOrTarget: CustomElementClass | Constructor<HTMLElement>,\n    context?: ClassDecoratorContext<Constructor<HTMLElement>>\n  ) => {\n    if (context !== undefined) {\n      context.addInitializer(() => {\n        customElements.define(\n          tagName,\n          classOrTarget as CustomElementConstructor\n        );\n      });\n    } else {\n      customElements.define(tagName, classOrTarget as CustomElementConstructor);\n    }\n  };\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {\n  type PropertyDeclaration,\n  type ReactiveElement,\n  defaultConverter,\n  notEqual,\n} from '../reactive-element.js';\nimport type {Interface} from './base.js';\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  globalThis.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (\n      !globalThis.litIssuedWarnings!.has(warning) &&\n      !globalThis.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      globalThis.litIssuedWarnings!.add(warning);\n    }\n  };\n}\n\n// Overloads for property decorator so that TypeScript can infer the correct\n// return type when a decorator is used as an accessor decorator or a setter\n// decorator.\nexport type PropertyDecorator = {\n  // accessor decorator signature\n  <C extends Interface<ReactiveElement>, V>(\n    target: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n\n  // setter decorator signature\n  <C extends Interface<ReactiveElement>, V>(\n    target: (value: V) => void,\n    context: ClassSetterDecoratorContext<C, V>\n  ): (this: C, value: V) => void;\n\n  // legacy decorator signature\n  (\n    protoOrDescriptor: Object,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any;\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration | undefined,\n  proto: Object,\n  name: PropertyKey\n) => {\n  const hasOwnProperty = proto.hasOwnProperty(name);\n  (proto.constructor as typeof ReactiveElement).createProperty(name, options);\n  // For accessors (which have a descriptor on the prototype) we need to\n  // return a descriptor, otherwise TypeScript overwrites the descriptor we\n  // define in createProperty() with the original descriptor. We don't do this\n  // for fields, which don't have a descriptor, because this could overwrite\n  // descriptor defined by other decorators.\n  return hasOwnProperty\n    ? Object.getOwnPropertyDescriptor(proto, name)\n    : undefined;\n};\n\n// This is duplicated from a similar variable in reactive-element.ts, but\n// actually makes sense to have this default defined with the decorator, so\n// that different decorators could have different defaults.\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n// Temporary type, until google3 is on TypeScript 5.2\ntype StandardPropertyContext<C, V> = (\n  | ClassAccessorDecoratorContext<C, V>\n  | ClassSetterDecoratorContext<C, V>\n) & {metadata: object};\n\n/**\n * Wraps a class accessor or setter so that `requestUpdate()` is called with the\n * property name and old value when the accessor is set.\n */\nexport const standardProperty = <C extends Interface<ReactiveElement>, V>(\n  options: PropertyDeclaration = defaultPropertyDeclaration,\n  target: ClassAccessorDecoratorTarget<C, V> | ((value: V) => void),\n  context: StandardPropertyContext<C, V>\n): ClassAccessorDecoratorResult<C, V> | ((this: C, value: V) => void) => {\n  const {kind, metadata} = context;\n\n  if (DEV_MODE && metadata == null) {\n    issueWarning(\n      'missing-class-metadata',\n      `The class ${target} is missing decorator metadata. This ` +\n        `could mean that you're using a compiler that supports decorators ` +\n        `but doesn't support decorator metadata, such as TypeScript 5.1. ` +\n        `Please update your compiler.`\n    );\n  }\n\n  // Store the property options\n  let properties = globalThis.litPropertyMetadata.get(metadata);\n  if (properties === undefined) {\n    globalThis.litPropertyMetadata.set(metadata, (properties = new Map()));\n  }\n  if (kind === 'setter') {\n    options = Object.create(options);\n    options.wrapped = true;\n  }\n  properties.set(context.name, options);\n\n  if (kind === 'accessor') {\n    // Standard decorators cannot dynamically modify the class, so we can't\n    // replace a field with accessors. The user must use the new `accessor`\n    // keyword instead.\n    const {name} = context;\n    return {\n      set(this: ReactiveElement, v: V) {\n        const oldValue = (\n          target as ClassAccessorDecoratorTarget<C, V>\n        ).get.call(this as unknown as C);\n        (target as ClassAccessorDecoratorTarget<C, V>).set.call(\n          this as unknown as C,\n          v\n        );\n        this.requestUpdate(name, oldValue, options);\n      },\n      init(this: ReactiveElement, v: V): V {\n        if (v !== undefined) {\n          this._$changeProperty(name, undefined, options, v);\n        }\n        return v;\n      },\n    } as unknown as ClassAccessorDecoratorResult<C, V>;\n  } else if (kind === 'setter') {\n    const {name} = context;\n    return function (this: ReactiveElement, value: V) {\n      const oldValue = this[name as keyof ReactiveElement];\n      (target as (value: V) => void).call(this, value);\n      this.requestUpdate(name, oldValue, options);\n    } as unknown as (this: C, value: V) => void;\n  }\n  throw new Error(`Unsupported decorator location: ${kind}`);\n};\n\n/**\n * A class field or accessor decorator which creates a reactive property that\n * reflects a corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration): PropertyDecorator {\n  return <C extends Interface<ReactiveElement>, V>(\n    protoOrTarget:\n      | object\n      | ClassAccessorDecoratorTarget<C, V>\n      | ((value: V) => void),\n    nameOrContext:\n      | PropertyKey\n      | ClassAccessorDecoratorContext<C, V>\n      | ClassSetterDecoratorContext<C, V>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any => {\n    return (\n      typeof nameOrContext === 'object'\n        ? standardProperty<C, V>(\n            options,\n            protoOrTarget as\n              | ClassAccessorDecoratorTarget<C, V>\n              | ((value: V) => void),\n            nameOrContext as StandardPropertyContext<C, V>\n          )\n        : legacyProperty(\n            options,\n            protoOrTarget as Object,\n            nameOrContext as PropertyKey\n          )\n    ) as PropertyDecorator;\n  };\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface StateDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * @deprecated use StateDeclaration\n */\nexport type InternalPropertyDeclaration<Type = unknown> =\n  StateDeclaration<Type>;\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: StateDeclaration) {\n  return property({\n    ...options,\n    // Add both `state` and `attribute` because we found a third party\n    // controller that is keying off of PropertyOptions.state to determine\n    // whether a field is a private internal property or not.\n    state: true,\n    attribute: false,\n  });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Generates a public interface type that removes private and protected fields.\n * This allows accepting otherwise incompatible versions of the type (e.g. from\n * multiple copies of the same package in `node_modules`).\n */\nexport type Interface<T> = {\n  [K in keyof T]: T[K];\n};\n\nexport type Constructor<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n};\n\n/**\n * Wraps up a few best practices when returning a property descriptor from a\n * decorator.\n *\n * Marks the defined property as configurable, and enumerable, and handles\n * the case where we have a busted Reflect.decorate zombiefill (e.g. in Angular\n * apps).\n *\n * @internal\n */\nexport const desc = (\n  obj: object,\n  name: PropertyKey | ClassAccessorDecoratorContext<unknown, unknown>,\n  descriptor: PropertyDescriptor\n) => {\n  // For backwards compatibility, we keep them configurable and enumerable.\n  descriptor.configurable = true;\n  descriptor.enumerable = true;\n  if (\n    // We check for Reflect.decorate each time, in case the zombiefill\n    // is applied via lazy loading some Angular code.\n    (Reflect as typeof Reflect & {decorate?: unknown}).decorate &&\n    typeof name !== 'object'\n  ) {\n    // If we're called as a legacy decorator, and Reflect.decorate is present\n    // then we have no guarantees that the returned descriptor will be\n    // defined on the class, so we must apply it directly ourselves.\n\n    Object.defineProperty(obj, name, descriptor);\n  }\n  return descriptor;\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport type {ReactiveElement} from '../reactive-element.js';\nimport {desc, type Interface} from './base.js';\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  globalThis.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (\n      !globalThis.litIssuedWarnings!.has(warning) &&\n      !globalThis.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      globalThis.litIssuedWarnings!.add(warning);\n    }\n  };\n}\n\nexport type QueryDecorator = {\n  // legacy\n  (\n    proto: Interface<ReactiveElement>,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any;\n\n  // standard\n  <C extends Interface<ReactiveElement>, V extends Element | null>(\n    value: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n};\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean): QueryDecorator {\n  return (<C extends Interface<ReactiveElement>, V extends Element | null>(\n    protoOrTarget: ClassAccessorDecoratorTarget<C, V>,\n    nameOrContext: PropertyKey | ClassAccessorDecoratorContext<C, V>,\n    descriptor?: PropertyDescriptor\n  ) => {\n    const doQuery = (el: Interface<ReactiveElement>): V => {\n      const result = (el.renderRoot?.querySelector(selector) ?? null) as V;\n      if (DEV_MODE && result === null && cache && !el.hasUpdated) {\n        const name =\n          typeof nameOrContext === 'object'\n            ? nameOrContext.name\n            : nameOrContext;\n        issueWarning(\n          '',\n          `@query'd field ${JSON.stringify(String(name))} with the 'cache' ` +\n            `flag set for selector '${selector}' has been accessed before ` +\n            `the first update and returned null. This is expected if the ` +\n            `renderRoot tree has not been provided beforehand (e.g. via ` +\n            `Declarative Shadow DOM). Therefore the value hasn't been cached.`\n        );\n      }\n      // TODO: if we want to allow users to assert that the query will never\n      // return null, we need a new option and to throw here if the result\n      // is null.\n      return result;\n    };\n    if (cache) {\n      // Accessors to wrap from either:\n      //   1. The decorator target, in the case of standard decorators\n      //   2. The property descriptor, in the case of experimental decorators\n      //      on auto-accessors.\n      //   3. Functions that access our own cache-key property on the instance,\n      //      in the case of experimental decorators on fields.\n      const {get, set} =\n        typeof nameOrContext === 'object'\n          ? protoOrTarget\n          : descriptor ??\n            (() => {\n              const key = DEV_MODE\n                ? Symbol(`${String(nameOrContext)} (@query() cache)`)\n                : Symbol();\n              type WithCache = ReactiveElement & {\n                [key: symbol]: Element | null;\n              };\n              return {\n                get() {\n                  return (this as WithCache)[key];\n                },\n                set(v) {\n                  (this as WithCache)[key] = v;\n                },\n              };\n            })();\n      return desc(protoOrTarget, nameOrContext, {\n        get(this: ReactiveElement): V {\n          let result: V = get!.call(this);\n          if (result === undefined) {\n            result = doQuery(this);\n            if (result !== null || this.hasUpdated) {\n              set!.call(this, result);\n            }\n          }\n          return result;\n        },\n      });\n    } else {\n      // This object works as the return type for both standard and\n      // experimental decorators.\n      return desc(protoOrTarget, nameOrContext, {\n        get(this: ReactiveElement) {\n          return doQuery(this);\n        },\n      });\n    }\n  }) as QueryDecorator;\n}\n", "export*from\"@lit/reactive-element/decorators/custom-element.js\";export*from\"@lit/reactive-element/decorators/property.js\";export*from\"@lit/reactive-element/decorators/state.js\";export*from\"@lit/reactive-element/decorators/event-options.js\";export*from\"@lit/reactive-element/decorators/query.js\";export*from\"@lit/reactive-element/decorators/query-all.js\";export*from\"@lit/reactive-element/decorators/query-async.js\";export*from\"@lit/reactive-element/decorators/query-assigned-elements.js\";export*from\"@lit/reactive-element/decorators/query-assigned-nodes.js\";\n//# sourceMappingURL=decorators.js.map\n", "// frontend/src/components/auth-service.ts\r\nexport type AuthUser = { username: string; avatarUrl?: string; token: string };\r\n\r\n/**\r\n * Set true untuk testing tanpa backend (pakai JSON statis).\r\n * Nanti saat backend siap, ubah ke false agar pakai /api/login.\r\n */\r\nconst USE_MOCK = true;\r\n\r\n// Sesuaikan base path agar fetch ke assets tetap benar di GitHub Pages.\r\nconst BASE_PATH = location.hostname === '127.0.0.1' ? '/' : '/taniverse/';\r\n\r\nexport class AuthService {\r\n  private static KEY = 'auth_token_v1';\r\n  private static USER = 'auth_user_v1';\r\n\r\n  static async login(username: string, password: string): Promise<AuthUser> {\r\n    if (USE_MOCK) {\r\n      // --- MODE MOCK: baca JSON statis ---\r\n      const list = await this._readMockUsers();\r\n      const found = list.find(\r\n        (u) =>\r\n          u.username?.toLowerCase() === username.toLowerCase() &&\r\n          String(u.password) === String(password)\r\n      );\r\n      // Simulasikan latency\r\n      await new Promise((r) => setTimeout(r, 400));\r\n\r\n      if (!found) {\r\n        throw new Error('Login gagal (MOCK): username/password salah.');\r\n      }\r\n\r\n      const token = `mock-${found.username}-${Date.now()}`;\r\n      const user = {\r\n        username: found.username,\r\n        avatarUrl: found.avatarUrl ?? '',\r\n      };\r\n\r\n      localStorage.setItem(this.KEY, token);\r\n      localStorage.setItem(this.USER, JSON.stringify(user));\r\n      return { ...user, token };\r\n    } else {\r\n      // --- MODE LIVE: call endpoint backend ---\r\n      const res = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        let msg = 'Login gagal. Periksa kredensial Anda.';\r\n        try {\r\n          const j = await res.json();\r\n          if (j?.message) msg = j.message;\r\n        } catch {}\r\n        throw new Error(msg);\r\n      }\r\n\r\n      const data = (await res.json()) as {\r\n        token: string;\r\n        username: string;\r\n        avatarUrl?: string;\r\n      };\r\n\r\n      localStorage.setItem(this.KEY, data.token);\r\n      localStorage.setItem(\r\n        this.USER,\r\n        JSON.stringify({\r\n          username: data.username,\r\n          avatarUrl: data.avatarUrl ?? '',\r\n        })\r\n      );\r\n\r\n      return {\r\n        username: data.username,\r\n        avatarUrl: data.avatarUrl ?? '',\r\n        token: data.token,\r\n      };\r\n    }\r\n  }\r\n\r\n  static logout() {\r\n    localStorage.removeItem(this.KEY);\r\n    localStorage.removeItem(this.USER);\r\n  }\r\n\r\n  static getToken(): string | null {\r\n    return localStorage.getItem(this.KEY);\r\n  }\r\n\r\n  static getUser(): { username: string; avatarUrl: string } | null {\r\n    const raw = localStorage.getItem(this.USER);\r\n    if (!raw) return null;\r\n    try {\r\n      const j = JSON.parse(raw);\r\n      return { username: j.username ?? 'Guest', avatarUrl: j.avatarUrl ?? '' };\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static isLoggedIn(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  // ===== helpers =====\r\n  private static async _readMockUsers(): Promise<\r\n    Array<{ username: string; password: string; avatarUrl?: string }>\r\n  > {\r\n    // publicPath dari esbuild (di-define ke string literal oleh bundler)\r\n    const ENV = (process.env.NODE_ENV as string) || 'development';\r\n\r\n    // Sesuaikan base untuk GitHub Pages saat pre-release\r\n    const BASE =\r\n      ENV === 'pre-release' ? '/taniverse/' : ENV === 'production' ? '' : '/';\r\n\r\n    // Kita coba 2 lokasi:\r\n    // - build/serve:   <BASE>assets/mock/users.json\r\n    // - dev (src langsung via live-server): <BASE>src/assets/mock/users.json\r\n    const candidates = [\r\n      `${BASE}assets/mock/users.json`,\r\n      `${BASE}src/assets/mock/users.json`,\r\n    ];\r\n\r\n    let lastErr: any = null;\r\n    for (const url of candidates) {\r\n      console.log(`Mencoba membaca ${url}...`);\r\n      try {\r\n        const res = await fetch(url, { cache: 'no-cache' });\r\n        if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n        const data = (await res.json()) as { users?: any[] };\r\n        return Array.isArray(data.users) ? (data.users as any[]) : [];\r\n      } catch (e) {\r\n        lastErr = e;\r\n      }\r\n    }\r\n    throw new Error(\r\n      `Gagal memuat users.json (MOCK). ${lastErr?.message ?? ''}`\r\n    );\r\n  }\r\n}\r\n", "// frontend/src/pages/login.ts\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, state } from 'lit/decorators.js';\r\nimport { AuthService } from '../components/auth-service';\r\n\r\n@customElement('page-login')\r\nexport class PageLogin extends LitElement {\r\n  @state() private username = '';\r\n  @state() private password = '';\r\n  @state() private loading = false;\r\n  @state() private error = '';\r\n\r\n  static styles = css`\r\n    :host {\r\n      display: block;\r\n    }\r\n  `;\r\n  firstUpdated() {\r\n    this.username = 'admin';\r\n    this.password = 'admin123';\r\n  }\r\n  createRenderRoot() {\r\n    return this;\r\n  } // gunakan Tailwind global\r\n\r\n  private async onSubmit(e: Event) {\r\n    e.preventDefault();\r\n    this.error = '';\r\n    this.loading = true;\r\n    try {\r\n      console.log('login', this.username, this.password);\r\n      const user = await AuthService.login(this.username.trim(), this.password);\r\n      // beri tahu app bahwa login sukses\r\n      this.dispatchEvent(\r\n        new CustomEvent('auth-changed', {\r\n          detail: { user },\r\n          bubbles: true,\r\n          composed: true,\r\n        })\r\n      );\r\n      // minta router kembali ke beranda\r\n      this.dispatchEvent(\r\n        new CustomEvent('navigate-to', {\r\n          detail: { path: '/' },\r\n          bubbles: true,\r\n          composed: true,\r\n        })\r\n      );\r\n    } catch (err: any) {\r\n      this.error = err?.message ?? 'Login gagal.';\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"min-h-[60vh] flex items-center justify-center\">\r\n        <form\r\n          class=\"w-full max-w-sm p-6 rounded-2xl border shadow-sm bg-white\"\r\n          @submit=${this.onSubmit}\r\n        >\r\n          <h1 class=\"text-xl font-semibold mb-4\">Masuk</h1>\r\n\r\n          ${this.error\r\n            ? html` <div\r\n                class=\"mb-3 text-sm text-red-700 bg-red-50 border border-red-200 rounded-md p-2\"\r\n              >\r\n                ${this.error}\r\n              </div>`\r\n            : null}\r\n\r\n          <label class=\"block mb-2 text-sm font-medium\">Username</label>\r\n          <input\r\n            class=\"w-full mb-4 px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-400\"\r\n            autocomplete=\"username\"\r\n            .value=${this.username}\r\n            @input=${(e: any) => (this.username = e.target.value)}\r\n          />\r\n\r\n          <label class=\"block mb-2 text-sm font-medium\">Password</label>\r\n          <input\r\n            class=\"w-full mb-4 px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-400\"\r\n            type=\"password\"\r\n            autocomplete=\"current-password\"\r\n            .value=${this.password}\r\n            @input=${(e: any) => (this.password = e.target.value)}\r\n          />\r\n\r\n          <button\r\n            class=\"w-full py-2 rounded-xl bg-emerald-600 text-white hover:bg-emerald-700 disabled:opacity-50\"\r\n            ?disabled=${this.loading || !this.username || !this.password}\r\n            type=\"submit\"\r\n          >\r\n            ${this.loading ? 'Memproses\u2026' : 'Login'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n", "import { LitElement, html } from 'lit';\r\nimport { customElement, state } from 'lit/decorators.js';\r\n\r\n@customElement('dashboard-hidroponik')\r\nexport class DashboardHidroponik extends LitElement {\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  @state() private pompaAktif: boolean = false;\r\n\r\n  togglePompa() {\r\n    this.pompaAktif = !this.pompaAktif;\r\n    // TODO: publish ke MQTT: \"taniverse/hidroponik/pompa\" \u2192 true/false\r\n  }\r\n\r\n  render() {\r\n    const pompaStatus = this.pompaAktif ? 'Aktif' : 'Mati';\r\n    const pompaColor = this.pompaAktif\r\n      ? 'bg-green-100 text-green-700'\r\n      : 'bg-red-100 text-red-700';\r\n\r\n    return html`\r\n      <section class=\"bg-white rounded shadow p-4\">\r\n        <h2 class=\"text-xl font-semibold text-green-800 mb-4\">\uD83C\uDF31 Hidroponik</h2>\r\n\r\n        <div class=\"grid grid-cols-2 gap-4 mb-4\">\r\n          <div class=\"p-3 border rounded bg-gray-50\">\r\n            <div class=\"text-sm text-gray-500\">Nutrisi</div>\r\n            <div class=\"text-lg font-bold text-green-700\">950 ppm</div>\r\n          </div>\r\n          <div class=\"p-3 border rounded bg-gray-50\">\r\n            <div class=\"text-sm text-gray-500\">pH</div>\r\n            <div class=\"text-lg font-bold text-blue-700\">6.2</div>\r\n          </div>\r\n          <div class=\"p-3 border rounded bg-gray-50\">\r\n            <div class=\"text-sm text-gray-500\">Suhu Air</div>\r\n            <div class=\"text-lg font-bold text-orange-600\">25.4 \u00B0C</div>\r\n          </div>\r\n          <div class=\"p-3 border rounded bg-gray-50\">\r\n            <div class=\"text-sm text-gray-500\">Ketinggian Air</div>\r\n            <div class=\"text-lg font-bold text-cyan-700\">75%</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex items-center justify-between\">\r\n          <div class=\"text-sm font-medium\">Pompa Nutrisi:</div>\r\n          <div class=\"flex items-center gap-2\">\r\n            <span class=\"text-sm px-2 py-1 rounded ${pompaColor}\"\r\n              >${pompaStatus}</span\r\n            >\r\n            <button\r\n              class=\"text-sm bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700 transition\"\r\n              @click=${this.togglePompa}\r\n            >\r\n              ${this.pompaAktif ? 'Matikan' : 'Nyalakan'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    `;\r\n  }\r\n}\r\n", "import { LitElement, html } from 'lit';\r\nimport { customElement } from 'lit/decorators.js';\r\n\r\n@customElement('dashboard-aquakultur')\r\nexport class DashboardAquakultur extends LitElement {\r\n  createRenderRoot() {\r\n    return this; // Render ke light DOM agar Tailwind aktif\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <section\r\n        class=\"bg-white rounded-xl shadow p-6 space-y-4 border border-blue-100\"\r\n      >\r\n        <header class=\"flex items-center justify-between\">\r\n          <h2 class=\"text-xl font-bold text-blue-800 flex items-center gap-2\">\r\n            \uD83D\uDC1F Akuakultur\r\n          </h2>\r\n          <span class=\"text-sm text-gray-500\">Zona 2</span>\r\n        </header>\r\n\r\n        <div class=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <p class=\"text-sm text-gray-500 mb-1\">\uD83D\uDCA7 Suhu Air</p>\r\n            <div class=\"text-lg font-semibold text-blue-700\">28\u00B0C</div>\r\n          </div>\r\n          <div>\r\n            <p class=\"text-sm text-gray-500 mb-1\">\u26A1 Aerator</p>\r\n            <div class=\"text-lg font-semibold text-green-600\">Aktif</div>\r\n          </div>\r\n\r\n          <div>\r\n            <p class=\"text-sm text-gray-500 mb-1\">\uD83C\uDF3F pH Air</p>\r\n            <div class=\"text-lg font-semibold text-blue-600\">7.2</div>\r\n          </div>\r\n          <div>\r\n            <p class=\"text-sm text-gray-500 mb-1\">\uD83E\uDDEA Oksigen Terlarut</p>\r\n            <div class=\"text-lg font-semibold text-blue-600\">6.8 mg/L</div>\r\n          </div>\r\n        </div>\r\n\r\n        <footer class=\"text-xs text-gray-400 text-right\">\r\n          Terakhir diperbarui: 07:34 WIB\r\n        </footer>\r\n      </section>\r\n    `;\r\n  }\r\n}\r\n", "import { LitElement, html } from 'lit';\r\nimport { customElement } from 'lit/decorators.js';\r\n\r\n@customElement('dashboard-peternakan')\r\nexport class DashboardPeternakan extends LitElement {\r\n  createRenderRoot() {\r\n    return this; // Light DOM agar Tailwind aktif\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <section\r\n        class=\"bg-white rounded-xl shadow p-6 space-y-4 border border-yellow-100\"\r\n      >\r\n        <header class=\"flex items-center justify-between\">\r\n          <h2 class=\"text-xl font-bold text-yellow-800 flex items-center gap-2\">\r\n            \uD83D\uDC14 Peternakan\r\n          </h2>\r\n          <span class=\"text-sm text-gray-500\">Kandang A</span>\r\n        </header>\r\n\r\n        <div class=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <p class=\"text-sm text-gray-500 mb-1\">\uD83C\uDF21\uFE0F Suhu Kandang</p>\r\n            <div class=\"text-lg font-semibold text-yellow-700\">32\u00B0C</div>\r\n          </div>\r\n          <div>\r\n            <p class=\"text-sm text-gray-500 mb-1\">\uD83C\uDF00 Ventilasi</p>\r\n            <div class=\"text-lg font-semibold text-green-600\">Aktif</div>\r\n          </div>\r\n\r\n          <div>\r\n            <p class=\"text-sm text-gray-500 mb-1\">\uD83D\uDCA1 Penerangan</p>\r\n            <div class=\"text-lg font-semibold text-yellow-600\">On</div>\r\n          </div>\r\n          <div>\r\n            <p class=\"text-sm text-gray-500 mb-1\">\uD83E\uDD5A Produksi Telur</p>\r\n            <div class=\"text-lg font-semibold text-gray-700\">82 butir/hari</div>\r\n          </div>\r\n        </div>\r\n\r\n        <footer class=\"text-xs text-gray-400 text-right\">\r\n          Terakhir diperbarui: 07:34 WIB\r\n        </footer>\r\n      </section>\r\n    `;\r\n  }\r\n}\r\n", "import { LitElement, html } from 'lit';\r\nimport { customElement } from 'lit/decorators.js';\r\n\r\n// Import semua komponen domain\r\nimport '../domains/hidroponik/dashboard-hidoponik.ts';\r\nimport '../domains/aquakultur/dashboard-aquakultur.ts';\r\nimport '../domains/peternakan/dashboard-peternakan.ts';\r\n\r\n@customElement('page-dashboard')\r\nexport class PageDashboard extends LitElement {\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <section class=\"space-y-6\">\r\n        <dashboard-hidroponik></dashboard-hidroponik>\r\n        <dashboard-aquakultur></dashboard-aquakultur>\r\n        <dashboard-peternakan></dashboard-peternakan>\r\n      </section>\r\n    `;\r\n  }\r\n}\r\n", "import { LitElement, html } from 'lit';\r\nimport { customElement } from 'lit/decorators.js';\r\n\r\n@customElement('page-histori')\r\nexport class PageHistori extends LitElement {\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <section class=\"bg-white shadow rounded p-6\">\r\n        <div class=\"mb-4\">\r\n          <h2 class=\"text-2xl font-bold text-green-800\">\uD83D\uDCDC Riwayat Sensor</h2>\r\n          <p class=\"text-gray-500 text-sm\">\r\n            Histori pembacaan data sensor hidroponik\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"flex justify-between items-center mb-3\">\r\n          <label class=\"text-sm text-gray-600 font-medium\"\r\n            >Filter tanggal:\r\n            <input\r\n              type=\"date\"\r\n              class=\"ml-2 border border-gray-300 rounded px-2 py-1 text-sm\"\r\n            />\r\n          </label>\r\n          <button\r\n            class=\"bg-green-600 text-white text-sm px-4 py-1 rounded hover:bg-green-700 transition\"\r\n          >\r\n            \uD83D\uDD04 Refresh\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"min-w-full text-sm text-left border\">\r\n            <thead class=\"bg-gray-100 text-gray-700 font-semibold border-b\">\r\n              <tr>\r\n                <th class=\"px-4 py-2\">\u23F1 Waktu</th>\r\n                <th class=\"px-4 py-2\">\uD83C\uDF21 Suhu</th>\r\n                <th class=\"px-4 py-2\">\uD83D\uDCA7 pH</th>\r\n                <th class=\"px-4 py-2\">\uD83C\uDF3F Nutrisi</th>\r\n                <th class=\"px-4 py-2\">\uD83D\uDCF6 Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"text-gray-700\">\r\n              ${this.renderRow(\r\n                '2025-07-29 09:12',\r\n                '25.3\u00B0C',\r\n                '6.1',\r\n                '890 ppm',\r\n                'Normal'\r\n              )}\r\n              ${this.renderRow(\r\n                '2025-07-29 08:45',\r\n                '26.0\u00B0C',\r\n                '6.5',\r\n                '870 ppm',\r\n                'Normal'\r\n              )}\r\n              ${this.renderRow(\r\n                '2025-07-29 08:15',\r\n                '28.4\u00B0C',\r\n                '6.9',\r\n                '1020 ppm',\r\n                '\u26A0\uFE0F Tinggi'\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    `;\r\n  }\r\n\r\n  renderRow(\r\n    waktu: string,\r\n    suhu: string,\r\n    ph: string,\r\n    nutrisi: string,\r\n    status: string\r\n  ) {\r\n    const statusColor = status.includes('Tinggi')\r\n      ? 'text-red-600'\r\n      : 'text-green-700';\r\n    return html`\r\n      <tr class=\"border-b\">\r\n        <td class=\"px-4 py-2\">${waktu}</td>\r\n        <td class=\"px-4 py-2\">${suhu}</td>\r\n        <td class=\"px-4 py-2\">${ph}</td>\r\n        <td class=\"px-4 py-2\">${nutrisi}</td>\r\n        <td class=\"px-4 py-2 font-medium ${statusColor}\">${status}</td>\r\n      </tr>\r\n    `;\r\n  }\r\n}\r\n", "import { LitElement, html } from 'lit';\r\nimport { customElement } from 'lit/decorators.js';\r\n\r\n@customElement('page-about')\r\nexport class AboutPage extends LitElement {\r\n  createRenderRoot() {\r\n    return this; // gunakan light DOM agar Tailwind CSS global bekerja\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <section class=\"p-6 md:p-10 max-w-5xl mx-auto\">\r\n        <h1 class=\"text-3xl font-bold text-center text-green-700 mb-6\">\r\n          Tentang TaniVerse\r\n        </h1>\r\n\r\n        <p class=\"text-base text-gray-700 leading-relaxed mb-4\">\r\n          <span class=\"font-semibold text-green-600\">TaniVerse</span> adalah\r\n          sistem pertanian presisi berbasis IoT yang dirancang untuk membantu\r\n          petani dan pengelola lahan dalam memantau dan mengontrol kondisi\r\n          lingkungan secara real-time. Dengan teknologi edge-computing dan\r\n          komunikasi dua arah, sistem ini mendukung keberlanjutan dan efisiensi\r\n          di sektor pertanian.\r\n        </p>\r\n\r\n        <p class=\"text-base text-gray-700 leading-relaxed mb-4\">\r\n          Kami berkomitmen untuk menghadirkan solusi yang dapat diandalkan,\r\n          transparan, dan berbasis teknologi terbuka. Setiap bagian sistem ini\r\n          dikembangkan melalui pendekatan modular dan riset teknologi terbaru.\r\n        </p>\r\n\r\n        <h2 class=\"text-xl font-semibold text-green-700 mt-8 mb-4\">\r\n          Sumber Daya & Teknologi\r\n        </h2>\r\n\r\n        <p class=\"text-base text-gray-700 leading-relaxed mb-2\">\r\n          Seluruh stack\r\n          <span class=\"font-semibold text-green-600\">TaniVerse</span> dibangun\r\n          menggunakan teknologi open-source berbasis\r\n          <span class=\"font-semibold\">TypeScript</span> dan\r\n          <span class=\"font-semibold\">JavaScript</span> dari sisi frontend\r\n          hingga backend.\r\n        </p>\r\n\r\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-4\">\r\n          <div>\r\n            <h3 class=\"text-lg font-semibold text-green-600 mb-2\">Frontend</h3>\r\n            <ul class=\"list-disc list-inside text-gray-700\">\r\n              <li>Framework: <span class=\"font-medium\">LitElement</span></li>\r\n              <li>\r\n                Styling: <span class=\"font-medium\">Tailwind CSS (inline)</span>\r\n              </li>\r\n              <li>Build Tool: <span class=\"font-medium\">esbuild</span></li>\r\n              <li>\r\n                Component Style:\r\n                <span class=\"font-medium\"\r\n                  >Component-Driven Development (CDD)</span\r\n                >\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h3 class=\"text-lg font-semibold text-green-600 mb-2\">Backend</h3>\r\n            <ul class=\"list-disc list-inside text-gray-700\">\r\n              <li>\r\n                Platform: <span class=\"font-medium\">Node.js + TypeScript</span>\r\n              </li>\r\n              <li>Framework: <span class=\"font-medium\">Fastify</span></li>\r\n              <li>\r\n                API: <span class=\"font-medium\">RESTful</span> &\r\n                <span class=\"font-medium\">MQTT bridge</span>\r\n              </li>\r\n              <li>\r\n                Database: <span class=\"font-medium\">SQLite</span> (local,\r\n                embedded)\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h3 class=\"text-lg font-semibold text-green-600 mb-2\">IoT Node</h3>\r\n            <ul class=\"list-disc list-inside text-gray-700\">\r\n              <li>Device: <span class=\"font-medium\">ESP32</span></li>\r\n              <li>Firmware: <span class=\"font-medium\">Arduino C++</span></li>\r\n              <li>\r\n                Protocol:\r\n                <span class=\"font-medium\">MQTT</span> (Publish/Subscribe)\r\n              </li>\r\n              <li>Transport: <span class=\"font-medium\">WiFi</span></li>\r\n            </ul>\r\n          </div>\r\n          <div>\r\n            <h3 class=\"text-lg font-semibold text-green-600 mb-2\">\r\n              Tools & DevOps\r\n            </h3>\r\n            <ul class=\"list-disc list-inside text-gray-700\">\r\n              <li>Hosting: <span class=\"font-medium\">Raspberry Pi 4</span></li>\r\n              <li>MQTT Broker: <span class=\"font-medium\">Mosquitto</span></li>\r\n              <li>Repository: <span class=\"font-medium\">GitHub</span></li>\r\n              <li>\r\n                IDE: <span class=\"font-medium\">Visual Studio Code</span> +\r\n                Arduino CE\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <h2 class=\"text-xl font-semibold text-green-700 mt-10 mb-4\">Penutup</h2>\r\n\r\n        <p class=\"text-base text-gray-700 leading-relaxed mb-2\">\r\n          Terima kasih telah bergabung dengan kami dalam perjalanan menuju\r\n          pertanian masa depan yang lebih cerdas, efisien, dan berkelanjutan.\r\n          Mari bersama-sama membangun ekosistem teknologi pertanian Indonesia\r\n          yang tangguh dan adaptif.\r\n        </p>\r\n      </section>\r\n    `;\r\n  }\r\n}\r\n", "import { LitElement, html } from 'lit';\r\nimport { customElement } from 'lit/decorators.js';\r\n\r\n@customElement('page-not-found')\r\nexport class PageNotFound extends LitElement {\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  render() {\r\n    return html`<div class=\"text-red-600\">404 - Halaman tidak ditemukan</div>`;\r\n  }\r\n}\r\n", "// frontend/src/components/app-shell.ts\r\nimport { LitElement, html } from 'lit';\r\nimport { customElement, state, query } from 'lit/decorators.js';\r\n\r\nimport './app-header.ts';\r\nimport './app-footer.ts';\r\nimport './app-main.ts';\r\nimport { AuthService } from './auth-service';\r\n\r\n@customElement('app-shell')\r\nexport class AppShell extends LitElement {\r\n  // gunakan light DOM agar Tailwind global tetap berlaku\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  // Tentukan basePath untuk local dan GitHub Pages\r\n  private readonly basePath =\r\n    window.location.hostname === '127.0.0.1' ? '/' : '/taniverse/';\r\n\r\n  @state() private currentPath = window.location.pathname;\r\n\r\n  @query('app-main') private appMainEl!: HTMLElement & {\r\n    navigate: (path: string) => void;\r\n  };\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    // sinkronkan state saat user tekan tombol back/forward\r\n    window.addEventListener('popstate', this._onPopState);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.removeEventListener('popstate', this._onPopState);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  private _onPopState = () => {\r\n    this.currentPath = window.location.pathname;\r\n  };\r\n\r\n  // Dari app-header: { detail: { path: '/dashboard' } }\r\n  private _onNavChanged = (e: CustomEvent<{ path: string }>) => {\r\n    const rawPath = e.detail.path.replace(/^\\/+/, '');\r\n    const target = `/${rawPath}`;\r\n    // delegasikan ke app-main agar router yang handle (lebih bersih daripada pushState manual)\r\n    this.appMainEl?.navigate(target);\r\n  };\r\n\r\n  // Event dari user-info (dikirim lewat app-header)\r\n  private _onLoginClick = () => this.appMainEl?.navigate('/login');\r\n  private _onLogoutClick = () => {\r\n    AuthService.logout();\r\n    this.appMainEl?.navigate('/');\r\n    this.requestUpdate(); // refresh header props\r\n  };\r\n  private _onProfileClick = () => this.appMainEl?.navigate('/dashboard');\r\n\r\n  // Event dari page-login\r\n  private _onNavigateTo = (e: CustomEvent<{ path: string }>) =>\r\n    this.appMainEl?.navigate(e.detail.path);\r\n  private _onAuthChanged = () => this.requestUpdate();\r\n\r\n  render() {\r\n    return html`\r\n      <app-header\r\n        .currentPath=${this.currentPath}\r\n        .username=${AuthService.getUser()?.username ?? 'Guest'}\r\n        .avatarUrl=${AuthService.getUser()?.avatarUrl ?? ''}\r\n        .isLoggedIn=${AuthService.isLoggedIn()}\r\n        @nav-changed=${this._onNavChanged}\r\n        @login-click=${this._onLoginClick}\r\n        @logout-click=${this._onLogoutClick}\r\n        @profile-click=${this._onProfileClick}\r\n      >\r\n      </app-header>\r\n\r\n      <app-main\r\n        .basePath=${this.basePath}\r\n        @route-changed=${(ev: CustomEvent<{ path: string }>) => {\r\n          this.currentPath = ev.detail.path;\r\n        }}\r\n        @navigate-to=${this._onNavigateTo}\r\n        @auth-changed=${this._onAuthChanged}\r\n      >\r\n      </app-main>\r\n\r\n      <app-footer></app-footer>\r\n    `;\r\n  }\r\n}\r\n", "// frontend/src/components/app-header.ts\r\nimport { LitElement, html } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport './app-nav';\r\nimport './user-info';\r\n\r\n@customElement('app-header')\r\nexport class AppHeader extends LitElement {\r\n  @property({ type: String }) currentPath: string = window.location.pathname;\r\n\r\n  // state user dikirim dari app-shell\r\n  @property({ type: String }) username = 'Guest';\r\n  @property({ type: String }) avatarUrl = '';\r\n  @property({ type: Boolean }) isLoggedIn = false;\r\n\r\n  // pakai light DOM agar Tailwind/Global CSS tetap nempel\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  private _onNavChanged(e: CustomEvent) {\r\n    // teruskan event ke parent (app-shell)\r\n    this.dispatchEvent(\r\n      new CustomEvent('nav-changed', {\r\n        detail: e.detail,\r\n        bubbles: true,\r\n        composed: true,\r\n      })\r\n    );\r\n  }\r\n\r\n  private _forward(type: 'login-click' | 'logout-click' | 'profile-click') {\r\n    this.dispatchEvent(\r\n      new CustomEvent(type, { bubbles: true, composed: true })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <header\r\n        class=\"w-full sticky top-0 z-50 bg-green-100 shadow-sm backdrop-blur border-b\"\r\n      >\r\n        <div class=\"mx-auto px-4 flex items-center justify-between\">\r\n          <!-- Kiri: Navigation -->\r\n          <app-nav\r\n            class=\"flex-grow\"\r\n            .currentPath=${this.currentPath}\r\n            @nav-changed=${this._onNavChanged}\r\n          ></app-nav>\r\n\r\n          <!-- Kanan: User Login Info -->\r\n          <user-info\r\n            .username=${this.username}\r\n            .avatarUrl=${this.avatarUrl}\r\n            .isLoggedIn=${this.isLoggedIn}\r\n            @login-click=${() => this._forward('login-click')}\r\n            @logout-click=${() => this._forward('logout-click')}\r\n            @profile-click=${() => this._forward('profile-click')}\r\n          ></user-info>\r\n        </div>\r\n      </header>\r\n    `;\r\n  }\r\n}\r\n", "import { LitElement, html } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators.js';\r\n\r\n@customElement('app-nav')\r\nexport class AppNav extends LitElement {\r\n  @property({ type: String }) currentPath = '/';\r\n  @state() private menuOpen = false;\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  private isActive(path: string): string {\r\n    return this.currentPath.endsWith(path)\r\n      ? 'bg-green-300 text-green-900 rounded px-2 py-1'\r\n      : 'hover:bg-green-200 rounded px-2 py-1';\r\n  }\r\n\r\n  private _navigate(e: Event) {\r\n    e.preventDefault();\r\n    const target = e.currentTarget as HTMLAnchorElement;\r\n    const path = target.getAttribute('href');\r\n    this.menuOpen = false; // close menu after click\r\n    if (path && path !== this.currentPath) {\r\n      this.dispatchEvent(\r\n        new CustomEvent('nav-changed', {\r\n          detail: { path },\r\n          bubbles: true,\r\n          composed: true,\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  private toggleMenu() {\r\n    this.menuOpen = !this.menuOpen;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <header class=\" text-green-900 font-medium\">\r\n        <div\r\n          class=\"max-w-screen-xl mx-auto px-4 py-2 flex justify-between items-center\"\r\n        >\r\n          <a href=\"/\" @click=${this._navigate} class=${this.isActive('')}>\r\n            <img\r\n              src=\"./assets/logo-88x45.png\"\r\n              alt=\"Logo\"\r\n              class=\"rounded-xl h-[30px]\"\r\n            />\r\n          </a>\r\n          <!-- Hamburger for small screens -->\r\n          <button\r\n            @click=${this.toggleMenu}\r\n            class=\"md:hidden text-2xl focus:outline-none\"\r\n          >\r\n            \u2630\r\n          </button>\r\n          <!-- Desktop Nav -->\r\n          <nav class=\"hidden md:flex gap-4\">${this.renderLinks()}</nav>\r\n        </div>\r\n        <!-- Mobile Nav -->\r\n        ${this.menuOpen\r\n          ? html`\r\n              <nav class=\"flex flex-col md:hidden gap-2 px-4 pb-4\">\r\n                ${this.renderLinks()}\r\n              </nav>\r\n            `\r\n          : ''}\r\n      </header>\r\n    `;\r\n  }\r\n\r\n  private renderLinks() {\r\n    return html`\r\n      <a\r\n        href=\"/dashboard\"\r\n        @click=${this._navigate}\r\n        class=${this.isActive('dashboard')}\r\n        >\uD83D\uDCCA Dashboard</a\r\n      >\r\n      <a\r\n        href=\"/histori\"\r\n        @click=${this._navigate}\r\n        class=${this.isActive('histori')}\r\n        >\uD83D\uDCC8 Histori</a\r\n      >\r\n      <a href=\"/about\" @click=${this._navigate} class=${this.isActive('about')}\r\n        >\u2139\uFE0F About</a\r\n      >\r\n    `;\r\n  }\r\n}\r\n", "import { LitElement, html, nothing } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators.js';\r\n\r\n@customElement('user-info')\r\nexport class UserInfo extends LitElement {\r\n  @property({ type: String }) username = 'Guest';\r\n  @property({ type: String }) avatarUrl = '';\r\n  @property({ type: Boolean, reflect: true }) isLoggedIn = false;\r\n\r\n  @state() private open = false;\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  connectedCallback(): void {\r\n    super.connectedCallback();\r\n    window.addEventListener('click', this._onOutsideClick, true);\r\n    window.addEventListener('keydown', this._onKeydown, true);\r\n  }\r\n\r\n  disconnectedCallback(): void {\r\n    window.removeEventListener('click', this._onOutsideClick, true);\r\n    window.removeEventListener('keydown', this._onKeydown, true);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  private _toggle = (e?: Event) => {\r\n    e?.stopPropagation();\r\n    this.open = !this.open;\r\n  };\r\n\r\n  private _onOutsideClick = (e: Event) => {\r\n    if (!this.open) return;\r\n    const path = e.composedPath();\r\n    if (!path.includes(this)) this.open = false;\r\n  };\r\n\r\n  private _onKeydown = (e: KeyboardEvent) => {\r\n    if (!this.open) return;\r\n    if (e.key === 'Escape') this.open = false;\r\n  };\r\n\r\n  private _onProfile = () => {\r\n    this.open = false;\r\n    this.dispatchEvent(\r\n      new CustomEvent('profile-click', { bubbles: true, composed: true })\r\n    );\r\n  };\r\n\r\n  private _onLogout = () => {\r\n    this.open = false;\r\n    this.dispatchEvent(\r\n      new CustomEvent('logout-click', { bubbles: true, composed: true })\r\n    );\r\n  };\r\n\r\n  private _onLogin = () => {\r\n    this.open = false;\r\n    this.dispatchEvent(\r\n      new CustomEvent('login-click', { bubbles: true, composed: true })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const avatar = this.avatarUrl\r\n      ? html`<img\r\n          src=\"${this.avatarUrl}\"\r\n          alt=\"Avatar\"\r\n          class=\"w-8 h-8 rounded-full border\"\r\n        />`\r\n      : html`<div\r\n          class=\"w-8 h-8 rounded-full bg-gray-300 flex items-center justify-center text-sm\"\r\n        >\r\n          ?\r\n        </div>`;\r\n\r\n    return html`\r\n      <div class=\"relative\">\r\n        <!-- Trigger -->\r\n        <button\r\n          class=\"flex items-center gap-2 px-2 py-1 rounded hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-emerald-400\"\r\n          @click=${this._toggle}\r\n          aria-haspopup=\"menu\"\r\n          aria-expanded=${this.open ? 'true' : 'false'}\r\n        >\r\n          ${avatar}\r\n          <span class=\"text-sm font-medium truncate max-w-[10rem]\"\r\n            >${this.username}</span\r\n          >\r\n          <svg\r\n            class=\"w-4 h-4 text-gray-500\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <path\r\n              fill-rule=\"evenodd\"\r\n              d=\"M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 011.08 1.04l-4.25 4.25a.75.75 0 01-1.08 0L5.21 8.27a.75.75 0 01.02-1.06z\"\r\n              clip-rule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        </button>\r\n\r\n        <!-- Dropdown -->\r\n        ${this.open\r\n          ? html`\r\n              <div\r\n                class=\"absolute right-0 mt-2 w-44 rounded-lg border bg-white shadow-lg overflow-hidden z-[100]\"\r\n                role=\"menu\"\r\n              >\r\n                ${this.isLoggedIn\r\n                  ? html`\r\n                      <button\r\n                        class=\"w-full text-left px-3 py-2 text-sm hover:bg-gray-50 flex items-center gap-2\"\r\n                        @click=${this._onProfile}\r\n                        role=\"menuitem\"\r\n                      >\r\n                        <span>Detail Profil</span>\r\n                      </button>\r\n                      <button\r\n                        class=\"w-full text-left px-3 py-2 text-sm text-red-600 hover:bg-red-50 flex items-center gap-2\"\r\n                        @click=${this._onLogout}\r\n                        role=\"menuitem\"\r\n                      >\r\n                        <span>Logout</span>\r\n                      </button>\r\n                    `\r\n                  : html`\r\n                      <button\r\n                        class=\"w-full text-left px-3 py-2 text-sm hover:bg-gray-50 flex items-center gap-2\"\r\n                        @click=${this._onLogin}\r\n                        role=\"menuitem\"\r\n                      >\r\n                        <span>Login</span>\r\n                      </button>\r\n                    `}\r\n              </div>\r\n            `\r\n          : nothing}\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n", "import { LitElement, html } from 'lit';\r\nimport { customElement } from 'lit/decorators.js';\r\n\r\n@customElement('app-footer')\r\nexport class AppFooter extends LitElement {\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <footer\r\n        class=\"fixed bottom-0 left-0 w-full border-t border-slate-200 bg-white z-50\"\r\n      >\r\n        <div\r\n          class=\"max-w-6xl mx-auto px-4 py-6 flex items-center justify-between text-sm text-slate-600\"\r\n        >\r\n          <div>\r\n            \u00A9 ${new Date().getFullYear()} Taniverse. All rights reserved.\r\n          </div>\r\n          <div class=\"flex items-center gap-4\">\r\n            <a\r\n              class=\"hover:underline\"\r\n              href=\"https://github.com/slametsampon/taniverse\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              >GitHub</a\r\n            >\r\n            <a class=\"hover:underline\" href=\"/about\">About</a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    `;\r\n  }\r\n}\r\n", "// frontend/src/components/app-main.ts\r\nimport { LitElement, html } from 'lit';\r\nimport { customElement, property, state, query } from 'lit/decorators.js';\r\nimport { Router } from '@vaadin/router';\r\n\r\nimport '../pages/home.ts'; // pre-load halaman home (opsional)\r\n\r\n@customElement('app-main')\r\nexport class AppMain extends LitElement {\r\n  // light DOM agar styling global (Tailwind) tetap nempel\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  @property({ type: String }) basePath: string = '/';\r\n  @state() private currentPath = window.location.pathname;\r\n\r\n  @query('#outlet') private outletEl!: HTMLElement;\r\n  private router!: Router;\r\n\r\n  firstUpdated() {\r\n    this.router = new Router(this.outletEl, { baseUrl: this.basePath });\r\n\r\n    this.router.setRoutes([\r\n      {\r\n        path: '/login',\r\n        action: async () => {\r\n          await import('../pages/login');\r\n        },\r\n        component: 'page-login',\r\n      },\r\n      {\r\n        path: '/dashboard',\r\n        action: async () => {\r\n          await import('../pages/dashboard');\r\n        },\r\n        component: 'page-dashboard',\r\n      },\r\n      {\r\n        path: '/histori',\r\n        action: async () => {\r\n          await import('../pages/histori');\r\n        },\r\n        component: 'page-histori',\r\n      },\r\n      {\r\n        path: '/about',\r\n        action: async () => {\r\n          await import('../pages/about');\r\n        },\r\n        component: 'page-about',\r\n      },\r\n      { path: '/', component: 'page-home' },\r\n      {\r\n        path: '(.*)',\r\n        action: async () => {\r\n          await import('../pages/not-found');\r\n        },\r\n        component: 'page-not-found',\r\n      },\r\n    ]);\r\n\r\n    window.addEventListener('popstate', this._onPopState);\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.removeEventListener('popstate', this._onPopState);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  private _onPopState = () => {\r\n    this.currentPath = window.location.pathname;\r\n    this.dispatchEvent(\r\n      new CustomEvent('route-changed', {\r\n        detail: { path: this.currentPath },\r\n        bubbles: true,\r\n        composed: true,\r\n      })\r\n    );\r\n  };\r\n\r\n  // Dipanggil oleh app-shell saat nav berubah\r\n  public navigate = (path: string) => {\r\n    // Router.go akan mengurus pushState + matching\r\n    const full =\r\n      this.basePath === '/'\r\n        ? path\r\n        : `${this.basePath}${path.replace(/^\\/+/, '')}`;\r\n    Router.go(full);\r\n  };\r\n\r\n  render() {\r\n    return html`\r\n      <main class=\"max-w-7xl mx-auto px-4 py-6 pb-16\">\r\n        <div id=\"outlet\" class=\"p-4\"></div>\r\n      </main>\r\n    `;\r\n  }\r\n}\r\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import type { AnyObject, ChildrenCallback, Route, RouteContext } from './types.js';\r\n\r\nexport function isObject(o: unknown): o is object {\r\n  // guard against null passing the typeof check\r\n  return typeof o === 'object' && !!o;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nexport function isFunction(f: unknown): f is Function {\r\n  return typeof f === 'function';\r\n}\r\n\r\nexport function isString(s: unknown): s is string {\r\n  return typeof s === 'string';\r\n}\r\n\r\nexport function toArray<T>(value: T | readonly T[] = []): readonly T[] {\r\n  return Array.isArray(value) ? value : [value];\r\n}\r\n\r\nexport function log(msg: string): string {\r\n  return `[Vaadin.Router] ${msg}`;\r\n}\r\n\r\nexport class NotFoundError<T, R extends AnyObject, C extends AnyObject> extends Error {\r\n  readonly code: number;\r\n  readonly context: RouteContext<T, R, C>;\r\n\r\n  constructor(context: RouteContext<T, R, C>) {\r\n    super(log(`Page not found (${context.pathname})`));\r\n    this.context = context;\r\n    this.code = 404;\r\n  }\r\n}\r\n\r\nexport const notFoundResult = Symbol('NotFoundResult');\r\nexport type NotFoundResult = typeof notFoundResult;\r\n\r\nexport function getNotFoundError<T, R extends AnyObject, C extends AnyObject>(\r\n  context: RouteContext<T, R, C>,\r\n): NotFoundError<T, R, C> {\r\n  return new NotFoundError(context);\r\n}\r\n\r\nexport function resolvePath(path?: string | readonly string[]): string {\r\n  return (Array.isArray(path) ? path[0] : path) ?? '';\r\n}\r\n\r\nexport function getRoutePath<T, R extends AnyObject, C extends AnyObject>(route: Route<T, R, C> | undefined): string {\r\n  return resolvePath(route?.path);\r\n}\r\n\r\nexport function unwrapChildren<T, R extends AnyObject, C extends AnyObject>(\r\n  children: ChildrenCallback<T, R, C> | ReadonlyArray<Route<T, R, C>> | undefined,\r\n): ReadonlyArray<Route<T, R, C>> | undefined {\r\n  return Array.isArray<ReadonlyArray<Route<T, R, C>>>(children) && children.length > 0 ? children : undefined;\r\n}\r\n", "/**\r\n * Universal Router (https://www.kriasoft.com/universal-router/)\r\n *\r\n * Copyright (c) 2015-present Kriasoft.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.txt file in the root directory of this source tree.\r\n */\r\n\r\nimport { type Key, pathToRegexp } from 'path-to-regexp';\r\nimport type { Writable } from 'type-fest';\r\nimport type { IndexedParams } from '../types.js';\r\nimport { resolvePath } from './utils.js';\r\n\r\nexport interface RegExpExecOptArray extends ReadonlyArray<string | undefined> {\r\n  0: string;\r\n  index: number;\r\n  input: string;\r\n}\r\n\r\ntype Matcher = Readonly<{\r\n  keys: readonly Key[];\r\n  pattern: RegExp;\r\n}>;\r\n\r\nexport type Match = Readonly<{\r\n  keys: readonly Key[];\r\n  params: IndexedParams;\r\n  path: string;\r\n}>;\r\n\r\nconst cache = new Map<string, Matcher>();\r\n// see https://github.com/pillarjs/path-to-regexp/issues/148\r\ncache.set('|false', {\r\n  keys: [],\r\n  pattern: /(?:)/u,\r\n});\r\n\r\nfunction decodeParam(val: string): string {\r\n  try {\r\n    return decodeURIComponent(val);\r\n  } catch {\r\n    return val;\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/max-params\r\nfunction matchPath(\r\n  routePath: string,\r\n  path?: string[] | string,\r\n  exact: boolean = false,\r\n  parentKeys: readonly Key[] = [],\r\n  parentParams?: IndexedParams,\r\n): Match | null {\r\n  const cacheKey = `${routePath}|${String(exact)}`;\r\n  const _path = resolvePath(path);\r\n  let regexp = cache.get(cacheKey);\r\n\r\n  if (!regexp) {\r\n    const keys: Key[] = [];\r\n    regexp = {\r\n      keys,\r\n      pattern: pathToRegexp(routePath, keys, {\r\n        end: exact,\r\n        strict: routePath === '',\r\n      }),\r\n    };\r\n    cache.set(cacheKey, regexp);\r\n  }\r\n\r\n  const m: RegExpExecOptArray | null = regexp.pattern.exec(_path);\r\n  if (!m) {\r\n    return null;\r\n  }\r\n\r\n  const params: Writable<IndexedParams> = { ...parentParams };\r\n\r\n  for (let i = 1; i < m.length; i++) {\r\n    const key = regexp.keys[i - 1];\r\n    const prop = key.name;\r\n    const value = m[i];\r\n    if (value !== undefined || !Object.hasOwn(params, prop)) {\r\n      if (key.modifier === '+' || key.modifier === '*') {\r\n        // by default, as of path-to-regexp 6.0.0, the default delimiters\r\n        // are `/`, `#` and `?`.\r\n        params[prop] = value ? value.split(/[/?#]/u).map(decodeParam) : [];\r\n      } else {\r\n        params[prop] = value ? decodeParam(value) : value!;\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    keys: [...parentKeys, ...regexp.keys],\r\n    params,\r\n    path: m[0],\r\n  };\r\n}\r\n\r\nexport default matchPath;\r\n", "/**\r\n * Universal Router (https://www.kriasoft.com/universal-router/)\r\n *\r\n * Copyright (c) 2015-present Kriasoft.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.txt file in the root directory of this source tree.\r\n */\r\n\r\nimport type { Key } from 'path-to-regexp';\r\nimport matchPath, { type Match } from './matchPath.js';\r\nimport type { AnyObject, IndexedParams, Route } from './types.js';\r\nimport { getRoutePath, unwrapChildren } from './utils.js';\r\n\r\nexport type MatchWithRoute<T, R extends AnyObject, C extends AnyObject> = Match &\r\n  Readonly<{\r\n    route: Route<T, R, C>;\r\n  }>;\r\n\r\ntype RouteMatchIterator<T, R extends AnyObject, C extends AnyObject> = Iterator<\r\n  MatchWithRoute<T, R, C>,\r\n  undefined,\r\n  Route<T, R, C> | undefined\r\n>;\r\n\r\n/**\r\n * Traverses the routes tree and matches its nodes to the given pathname from\r\n * the root down to the leaves. Each match consumes a part of the pathname and\r\n * the matching process continues for as long as there is a matching child\r\n * route for the remaining part of the pathname.\r\n *\r\n * The returned value is a lazily evaluated iterator.\r\n *\r\n * The leading \"/\" in a route path matters only for the root of the routes\r\n * tree (or if all parent routes are \"\"). In all other cases a leading \"/\" in\r\n * a child route path has no significance.\r\n *\r\n * The trailing \"/\" in a _route path_ matters only for the leaves of the\r\n * routes tree. A leaf route with a trailing \"/\" matches only a pathname that\r\n * also has a trailing \"/\".\r\n *\r\n * The trailing \"/\" in a route path does not affect matching of child routes\r\n * in any way.\r\n *\r\n * The trailing \"/\" in a _pathname_ generally does not matter (except for\r\n * the case of leaf nodes described above).\r\n *\r\n * The \"\" and \"/\" routes have special treatment:\r\n *  1. as a single route\r\n *     the \"\" and \"/\" routes match only the \"\" and \"/\" pathnames respectively\r\n *  2. as a parent in the routes tree\r\n *     the \"\" route matches any pathname without consuming any part of it\r\n *     the \"/\" route matches any absolute pathname consuming its leading \"/\"\r\n *  3. as a leaf in the routes tree\r\n *     the \"\" and \"/\" routes match only if the entire pathname is consumed by\r\n *         the parent routes chain. In this case \"\" and \"/\" are equivalent.\r\n *  4. several directly nested \"\" or \"/\" routes\r\n *     - directly nested \"\" or \"/\" routes are 'squashed' (i.e. nesting two\r\n *       \"/\" routes does not require a double \"/\" in the pathname to match)\r\n *     - if there are only \"\" in the parent routes chain, no part of the\r\n *       pathname is consumed, and the leading \"/\" in the child routes' paths\r\n *       remains significant\r\n *\r\n * Side effect:\r\n *   - the routes tree `{ path: '' }` matches only the '' pathname\r\n *   - the routes tree `{ path: '', children: [ { path: '' } ] }` matches any\r\n *     pathname (for the tree root)\r\n *\r\n * Prefix matching can be enabled also by `children: true`.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/max-params\r\nfunction matchRoute<T, R extends AnyObject, C extends AnyObject>(\r\n  route: Route<T, R, C>,\r\n  pathname: string,\r\n  ignoreLeadingSlash?: boolean,\r\n  parentKeys?: readonly Key[],\r\n  parentParams?: IndexedParams,\r\n): Iterator<MatchWithRoute<T, R, C>, undefined, Route<T, R, C> | undefined> {\r\n  let match: Match | null;\r\n  let childMatches: RouteMatchIterator<T, R, C> | null;\r\n  let childIndex = 0;\r\n  let routepath = getRoutePath(route);\r\n  if (routepath.startsWith('/')) {\r\n    if (ignoreLeadingSlash) {\r\n      routepath = routepath.substring(1);\r\n    }\r\n    // eslint-disable-next-line no-param-reassign\r\n    ignoreLeadingSlash = true;\r\n  }\r\n\r\n  return {\r\n    next(routeToSkip?: Route<T, R, C>): IteratorResult<MatchWithRoute<T, R, C>, undefined> {\r\n      if (route === routeToSkip) {\r\n        return { done: true, value: undefined };\r\n      }\r\n\r\n      route.__children ??= unwrapChildren(route.children);\r\n      const children = route.__children ?? [];\r\n      const exact = !route.__children && !route.children;\r\n\r\n      if (!match) {\r\n        match = matchPath(routepath, pathname, exact, parentKeys, parentParams);\r\n\r\n        if (match) {\r\n          return {\r\n            value: {\r\n              keys: match.keys,\r\n              params: match.params,\r\n              path: match.path,\r\n              route,\r\n            },\r\n          };\r\n        }\r\n      }\r\n\r\n      if (match && children.length > 0) {\r\n        while (childIndex < children.length) {\r\n          if (!childMatches) {\r\n            const childRoute = children[childIndex];\r\n            childRoute.parent = route;\r\n\r\n            let matchedLength = match.path.length;\r\n            if (matchedLength > 0 && pathname.charAt(matchedLength) === '/') {\r\n              matchedLength += 1;\r\n            }\r\n\r\n            childMatches = matchRoute(\r\n              childRoute,\r\n              pathname.substring(matchedLength),\r\n              ignoreLeadingSlash,\r\n              match.keys,\r\n              match.params,\r\n            );\r\n          }\r\n\r\n          const childMatch = childMatches.next(routeToSkip);\r\n          if (!childMatch.done) {\r\n            return {\r\n              done: false,\r\n              value: childMatch.value,\r\n            };\r\n          }\r\n\r\n          childMatches = null;\r\n          childIndex += 1;\r\n        }\r\n      }\r\n\r\n      return { done: true, value: undefined };\r\n    },\r\n  };\r\n}\r\n\r\nexport default matchRoute;\r\n", "/**\r\n * Universal Router (https://www.kriasoft.com/universal-router/)\r\n *\r\n * Copyright (c) 2015-present Kriasoft.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.txt file in the root directory of this source tree.\r\n */\r\nimport type { ActionResult, AnyObject, MaybePromise, RouteContext } from './types.js';\r\nimport { isFunction } from './utils.js';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-invalid-void-type\r\nexport default function resolveRoute<T, R extends AnyObject, C extends AnyObject>(\r\n  context: RouteContext<T, R, C>,\r\n): MaybePromise<ActionResult<T | RouteContext<T, R, C>>> {\r\n  if (isFunction(context.route.action)) {\r\n    // @ts-expect-error: ignore \"never\" type here\r\n    return context.route.action(context);\r\n  }\r\n  return undefined;\r\n}\r\n", "/**\r\n * Universal Router (https://www.kriasoft.com/universal-router/)\r\n *\r\n * Copyright (c) 2015-present Kriasoft.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.txt file in the root directory of this source tree.\r\n */\r\nimport type { EmptyObject } from 'type-fest';\r\nimport matchRoute, { type MatchWithRoute } from './matchRoute.js';\r\nimport defaultResolveRoute from './resolveRoute.js';\r\nimport type {\r\n  ActionResult,\r\n  AnyObject,\r\n  BasicRoutePart,\r\n  Match,\r\n  MaybePromise,\r\n  ResolveContext,\r\n  Route,\r\n  RouteContext,\r\n} from './types.js';\r\nimport { getNotFoundError, getRoutePath, isString, NotFoundError, notFoundResult, toArray } from './utils.js';\r\n\r\nfunction isDescendantRoute<T, R extends AnyObject, C extends AnyObject>(\r\n  route?: Route<T, R, C>,\r\n  maybeParent?: Route<T, R, C>,\r\n) {\r\n  let _route = route;\r\n  while (_route) {\r\n    _route = _route.parent;\r\n    if (_route === maybeParent) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isRouteContext<T, R extends AnyObject, C extends AnyObject>(value: unknown): value is RouteContext<T, R, C> {\r\n  return (\r\n    !!value &&\r\n    typeof value === 'object' &&\r\n    'next' in value &&\r\n    'params' in value &&\r\n    'result' in value &&\r\n    'route' in value\r\n  );\r\n}\r\n\r\nexport interface ResolutionErrorOptions extends ErrorOptions {\r\n  code?: number;\r\n}\r\n\r\nexport class ResolutionError<T, R extends AnyObject = EmptyObject, C extends AnyObject = EmptyObject> extends Error {\r\n  readonly code?: number;\r\n  readonly context: RouteContext<T, R, C>;\r\n\r\n  constructor(context: RouteContext<T, R, C>, options?: ResolutionErrorOptions) {\r\n    let errorMessage = `Path '${context.pathname}' is not properly resolved due to an error.`;\r\n    const routePath = getRoutePath(context.route);\r\n    if (routePath) {\r\n      errorMessage += ` Resolution had failed on route: '${routePath}'`;\r\n    }\r\n    super(errorMessage, options);\r\n    this.code = options?.code;\r\n    this.context = context;\r\n  }\r\n\r\n  warn(): void {\r\n    console.warn(this.message);\r\n  }\r\n}\r\n\r\nfunction updateChainForRoute<T, R extends AnyObject, C extends AnyObject>(\r\n  context: RouteContext<T, R, C>,\r\n  match: Match<T, R, C>,\r\n) {\r\n  const { path, route } = match;\r\n\r\n  if (route && !route.__synthetic) {\r\n    const item = { path, route };\r\n    if (route.parent && context.chain) {\r\n      for (let i = context.chain.length - 1; i >= 0; i--) {\r\n        if (context.chain[i].route === route.parent) {\r\n          break;\r\n        }\r\n\r\n        context.chain.pop();\r\n      }\r\n    }\r\n    context.chain?.push(item);\r\n  }\r\n}\r\n\r\nexport type ErrorHandlerCallback<T> = (error: unknown) => T;\r\n\r\nexport type ResolveRouteCallback<T, R extends AnyObject, C extends AnyObject> = (\r\n  context: RouteContext<T, R, C>,\r\n) => MaybePromise<ActionResult<T | RouteContext<T, R, C>>>;\r\n\r\nexport type ResolverOptions<T, R extends AnyObject, C extends AnyObject> = Readonly<{\r\n  baseUrl?: string;\r\n  context?: RouteContext<T, R, C>;\r\n  errorHandler?: ErrorHandlerCallback<T>;\r\n  resolveRoute?: ResolveRouteCallback<T, R, C>;\r\n}>;\r\n\r\nexport default class Resolver<T = unknown, R extends AnyObject = EmptyObject, C extends AnyObject = EmptyObject> {\r\n  /**\r\n   * The base URL for all routes in the router instance. By default,\r\n   * if the base element exists in the `<head>`, vaadin-router\r\n   * takes the `<base href>` attribute value, resolved against the current\r\n   * `document.URL`.\r\n   */\r\n  readonly baseUrl: string;\r\n  #context: RouteContext<T, R, C>;\r\n  readonly errorHandler?: ErrorHandlerCallback<T>;\r\n  readonly resolveRoute: ResolveRouteCallback<T, R, C>;\r\n  readonly #root: BasicRoutePart<T, R, C>;\r\n\r\n  constructor(routes: ReadonlyArray<Route<T, R, C>> | Route<T, R, C>, options?: ResolverOptions<T, R, C>);\r\n  constructor(\r\n    routes: ReadonlyArray<Route<T, R, C>> | Route<T, R, C>,\r\n    { baseUrl = '', context, errorHandler, resolveRoute = defaultResolveRoute }: ResolverOptions<T, R, C> = {},\r\n  ) {\r\n    if (Object(routes) !== routes) {\r\n      throw new TypeError('Invalid routes');\r\n    }\r\n\r\n    this.baseUrl = baseUrl;\r\n    this.errorHandler = errorHandler;\r\n    this.resolveRoute = resolveRoute;\r\n\r\n    if (Array.isArray(routes)) {\r\n      // @FIXME: We should have a route array instead of a single route object\r\n      // to avoid type clash because of a missing `R` part of a route.\r\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\r\n      this.#root = {\r\n        __children: routes,\r\n        __synthetic: true,\r\n        action: () => undefined,\r\n        path: '',\r\n      };\r\n    } else {\r\n      this.#root = { ...routes, parent: undefined };\r\n    }\r\n\r\n    this.#context = {\r\n      ...context!,\r\n      hash: '',\r\n      // eslint-disable-next-line @typescript-eslint/require-await\r\n      async next() {\r\n        return notFoundResult;\r\n      },\r\n      params: {},\r\n      pathname: '',\r\n      resolver: this,\r\n      route: this.#root as Route<T, R, C>,\r\n      search: '',\r\n      chain: [],\r\n    };\r\n  }\r\n\r\n  get root(): Route<T, R, C> {\r\n    return this.#root as Route<T, R, C>;\r\n  }\r\n\r\n  get context(): RouteContext<T, R, C> {\r\n    return this.#context;\r\n  }\r\n\r\n  /**\r\n   * If the baseUrl property is set, transforms the baseUrl and returns the full\r\n   * actual `base` string for using in the `new URL(path, base);` and for\r\n   * prepernding the paths with. The returned base ends with a trailing slash.\r\n   *\r\n   * Otherwise, returns empty string.\r\n   */\r\n  protected get __effectiveBaseUrl(): string {\r\n    return this.baseUrl ? new URL(this.baseUrl, document.baseURI || document.URL).href.replace(/[^/]*$/u, '') : '';\r\n  }\r\n\r\n  /**\r\n   * Returns the current list of routes (as a shallow copy). Adding / removing\r\n   * routes to / from the returned array does not affect the routing config,\r\n   * but modifying the route objects does.\r\n   *\r\n   * @public\r\n   */\r\n  getRoutes(): ReadonlyArray<Route<T, R, C>> {\r\n    return [...(this.#root.__children ?? [])];\r\n  }\r\n\r\n  /**\r\n   * Removes all existing routes from the routing config.\r\n   *\r\n   * @public\r\n   */\r\n  removeRoutes(): void {\r\n    this.#root.__children = [];\r\n  }\r\n\r\n  /**\r\n   * Asynchronously resolves the given pathname, i.e. finds all routes matching\r\n   * the pathname and tries resolving them one after another in the order they\r\n   * are listed in the routes config until the first non-null result.\r\n   *\r\n   * Returns a promise that is fulfilled with the return value of an object that consists of the first\r\n   * route handler result that returns something other than `null` or `undefined` and context used to get this result.\r\n   *\r\n   * If no route handlers return a non-null result, or if no route matches the\r\n   * given pathname the returned promise is rejected with a 'page not found'\r\n   * `Error`.\r\n   *\r\n   * @param pathnameOrContext - the pathname to\r\n   *    resolve or a context object with a `pathname` property and other\r\n   *    properties to pass to the route resolver functions.\r\n   */\r\n  async resolve(pathnameOrContext: ResolveContext<C> | string): Promise<ActionResult<RouteContext<T, R, C>>> {\r\n    const self = this;\r\n    const context: RouteContext<T, R, C> = {\r\n      ...this.#context,\r\n      ...(isString(pathnameOrContext) ? { pathname: pathnameOrContext } : pathnameOrContext),\r\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n      next,\r\n    };\r\n    const match = matchRoute(\r\n      this.#root as Route<T, R, C>,\r\n      this.__normalizePathname(context.pathname) ?? context.pathname,\r\n      !!this.baseUrl,\r\n    );\r\n    const resolve = this.resolveRoute;\r\n    let matches: IteratorResult<MatchWithRoute<T, R, C>, undefined> | null = null;\r\n    let nextMatches: IteratorResult<MatchWithRoute<T, R, C>, undefined> | null = null;\r\n    let currentContext = context;\r\n\r\n    async function next(\r\n      resume: boolean = false,\r\n      parent: Route<T, R, C> | undefined = matches?.value?.route,\r\n      prevResult?: ActionResult<T | RouteContext<T, R, C>>,\r\n    ): Promise<ActionResult<RouteContext<T, R, C>>> {\r\n      const routeToSkip = prevResult === null ? matches?.value?.route : undefined;\r\n      matches = nextMatches ?? match.next(routeToSkip);\r\n      nextMatches = null;\r\n\r\n      if (!resume) {\r\n        if (!!matches.done || !isDescendantRoute(matches.value.route, parent)) {\r\n          nextMatches = matches;\r\n          return notFoundResult;\r\n        }\r\n      }\r\n\r\n      if (matches.done) {\r\n        throw getNotFoundError(context);\r\n      }\r\n\r\n      currentContext = {\r\n        ...context,\r\n        params: matches.value.params,\r\n        route: matches.value.route,\r\n        chain: currentContext.chain?.slice(),\r\n      };\r\n      updateChainForRoute(currentContext, matches.value);\r\n\r\n      const resolution = await resolve(currentContext);\r\n\r\n      if (resolution !== null && resolution !== undefined && resolution !== notFoundResult) {\r\n        currentContext.result = isRouteContext<T, R, C>(resolution) ? resolution.result : resolution;\r\n        self.#context = currentContext;\r\n        return currentContext;\r\n      }\r\n      return await next(resume, parent, resolution);\r\n    }\r\n\r\n    try {\r\n      return await next(true, this.#root as Route<T, R, C>);\r\n    } catch (error: unknown) {\r\n      const _error =\r\n        error instanceof NotFoundError\r\n          ? error\r\n          : new ResolutionError(currentContext as RouteContext<R>, { code: 500, cause: error });\r\n\r\n      if (this.errorHandler) {\r\n        currentContext.result = this.errorHandler(_error);\r\n        return currentContext;\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the routing config (replacing the existing one).\r\n   *\r\n   * @param routes - a single route or an array of those\r\n   *    (the array is shallow copied)\r\n   */\r\n  setRoutes(routes: ReadonlyArray<Route<T, R, C>> | Route<T, R, C>): void {\r\n    this.#root.__children = [...toArray(routes)];\r\n  }\r\n\r\n  /**\r\n   * If the baseUrl is set, matches the pathname with the router\u2019s baseUrl,\r\n   * and returns the local pathname with the baseUrl stripped out.\r\n   *\r\n   * If the pathname does not match the baseUrl, returns undefined.\r\n   *\r\n   * If the `baseUrl` is not set, returns the unmodified pathname argument.\r\n   */\r\n  protected __normalizePathname(pathname: string): string | undefined {\r\n    if (!this.baseUrl) {\r\n      // No base URL, no need to transform the pathname.\r\n      return pathname;\r\n    }\r\n\r\n    const base = this.__effectiveBaseUrl;\r\n    // Convert pathname to a valid URL constructor argument\r\n    const url = pathname.startsWith('/') ? new URL(base).origin + pathname : `./${pathname}`;\r\n    const normalizedUrl = new URL(url, base).href;\r\n    if (normalizedUrl.startsWith(base)) {\r\n      return normalizedUrl.slice(base.length);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Appends one or several routes to the routing config and returns the\r\n   * effective routing config after the operation.\r\n   *\r\n   * @param routes - a single route or an array of those\r\n   *    (the array is shallow copied)\r\n   */\r\n  protected addRoutes(routes: ReadonlyArray<Route<T, R, C>> | Route<T, R, C>): ReadonlyArray<Route<T, R, C>> {\r\n    this.#root.__children = [...(this.#root.__children ?? []), ...toArray(routes)];\r\n    return this.getRoutes();\r\n  }\r\n}\r\n", "/**\r\n * Universal Router (https://www.kriasoft.com/universal-router/)\r\n *\r\n * Copyright (c) 2015-present Kriasoft.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.txt file in the root directory of this source tree.\r\n */\r\n\r\nimport { parse, type ParseOptions, type Token, tokensToFunction, type TokensToFunctionOptions } from 'path-to-regexp';\r\nimport type { EmptyObject, Writable } from 'type-fest';\r\nimport Resolver from './resolver.js';\r\nimport type { AnyObject, ChildrenCallback, IndexedParams, Params, Route } from './types.js';\r\nimport { getRoutePath, isString } from './utils.js';\r\n\r\nexport type UrlParams = Readonly<Record<string, ReadonlyArray<number | string> | number | string>>;\r\n\r\nfunction cacheRoutes<T, R extends AnyObject, C extends AnyObject>(\r\n  routesByName: Map<string, Array<Route<T, R, C>>>,\r\n  route: Route<T, R, C>,\r\n  routes?: ReadonlyArray<Route<T, R, C>> | ChildrenCallback<T, R, C>,\r\n  cacheKeyProvider?: (route: Route<T, R, C>) => string | undefined,\r\n): void {\r\n  const name = route.name ?? cacheKeyProvider?.(route);\r\n  if (name) {\r\n    if (routesByName.has(name)) {\r\n      routesByName.get(name)?.push(route);\r\n    } else {\r\n      routesByName.set(name, [route]);\r\n    }\r\n  }\r\n\r\n  if (Array.isArray(routes)) {\r\n    for (const childRoute of routes) {\r\n      childRoute.parent = route;\r\n      cacheRoutes(routesByName, childRoute, childRoute.__children ?? childRoute.children, cacheKeyProvider);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getRouteByName<T, R extends AnyObject, C extends AnyObject>(\r\n  routesByName: Map<string, Array<Route<T, R, C>>>,\r\n  routeName: string,\r\n): Route<T, R, C> | undefined {\r\n  const routes = routesByName.get(routeName);\r\n\r\n  if (routes) {\r\n    if (routes.length > 1) {\r\n      throw new Error(`Duplicate route with name \"${routeName}\".` + ` Try seting unique 'name' route properties.`);\r\n    }\r\n\r\n    return routes[0];\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport type StringifyQueryParams = (params: UrlParams) => string;\r\n\r\nexport type GenerateUrlOptions<T, R extends AnyObject, C extends AnyObject> = ParseOptions &\r\n  Readonly<{\r\n    /**\r\n     * Add a query string to generated url based on unknown route params.\r\n     */\r\n    stringifyQueryParams?: StringifyQueryParams;\r\n    /**\r\n     * Generates a unique route name based on all parent routes with the specified separator.\r\n     */\r\n    uniqueRouteNameSep?: string;\r\n    cacheKeyProvider?(route: Route<T, R, C>): string | undefined;\r\n  }> &\r\n  TokensToFunctionOptions;\r\n\r\ntype RouteCacheRecord = Readonly<{\r\n  keys: Record<string, true>;\r\n  tokens: Token[];\r\n}>;\r\n\r\nexport type UrlGenerator = (routeName: string, params?: Params) => string;\r\n\r\nfunction generateUrls<T = unknown, R extends AnyObject = EmptyObject, C extends AnyObject = EmptyObject>(\r\n  resolver: Resolver<T, R, C>,\r\n  options: GenerateUrlOptions<T, R, C> = {},\r\n): UrlGenerator {\r\n  if (!(resolver instanceof Resolver)) {\r\n    throw new TypeError('An instance of Resolver is expected');\r\n  }\r\n\r\n  const cache = new Map<string, RouteCacheRecord>();\r\n  const routesByName = new Map<string, Array<Route<T, R, C>>>();\r\n\r\n  return (routeName, params) => {\r\n    let route = getRouteByName(routesByName, routeName);\r\n    if (!route) {\r\n      routesByName.clear(); // clear cache\r\n      cacheRoutes(routesByName, resolver.root, resolver.root.__children, options.cacheKeyProvider);\r\n\r\n      route = getRouteByName(routesByName, routeName);\r\n      if (!route) {\r\n        throw new Error(`Route \"${routeName}\" not found`);\r\n      }\r\n    }\r\n\r\n    let cached: RouteCacheRecord | undefined = route.fullPath ? cache.get(route.fullPath) : undefined;\r\n    if (!cached) {\r\n      let fullPath = getRoutePath(route);\r\n      let rt = route.parent;\r\n      while (rt) {\r\n        const path = getRoutePath(rt);\r\n        if (path) {\r\n          fullPath = `${path.replace(/\\/$/u, '')}/${fullPath.replace(/^\\//u, '')}`;\r\n        }\r\n        rt = rt.parent;\r\n      }\r\n      const tokens = parse(fullPath);\r\n      const keys: Record<string, true> = Object.create(null);\r\n      for (const item of tokens) {\r\n        if (!isString(item)) {\r\n          keys[item.name] = true;\r\n        }\r\n      }\r\n      cached = { keys, tokens };\r\n      cache.set(fullPath, cached);\r\n      route.fullPath = fullPath;\r\n    }\r\n\r\n    const toPath = tokensToFunction(cached.tokens, { encode: encodeURIComponent, ...options });\r\n    let url = toPath(params) || '/';\r\n\r\n    if (options.stringifyQueryParams && params) {\r\n      const queryParams: Writable<IndexedParams> = {};\r\n      for (const [key, value] of Object.entries(params)) {\r\n        if (!(key in cached.keys) && value) {\r\n          queryParams[key] = value;\r\n        }\r\n      }\r\n      const query = options.stringifyQueryParams(queryParams as UrlParams);\r\n      if (query) {\r\n        url += query.startsWith('?') ? query : `?${query}`;\r\n      }\r\n    }\r\n\r\n    return url;\r\n  };\r\n}\r\n\r\nexport default generateUrls;\r\n", "const DEV_MODE_CODE_REGEXP =\n  /\\/\\*[\\*!]\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\n\nconst FlowClients = window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    if (isForcedDevelopmentMode()) {\n      return true;\n    }\n\n    if (!isLocalhost()) {\n      return false;\n    }\n\n    if (FlowClients) {\n      return !isFlowProductionMode();\n    }\n\n    return !isMinified();\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return ([\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname) >= 0);\n}\n\nfunction isFlowProductionMode() {\n  if (FlowClients) {\n    const productionModeApps = Object.keys(FlowClients)\n      .map(key => FlowClients[key])\n      .filter(client => client.productionMode);\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e)\n    }\n  }\n\n  return callback(args);\n}\n\n// A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\nwindow['Vaadin'] = window['Vaadin'] || {};\n\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\nexport const runIfDevelopmentMode = function(callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n", "/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n/*\n\nThis script gathers usage statistics from the application running in development mode.\n\nStatistics gathering is automatically disabled and excluded from production builds.\n\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport { runIfDevelopmentMode } from '@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js';\n\nfunction maybeGatherAndSendStats() {\n  /*! vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n};\n\nvar StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n\n    this.now = new Date().getTime();\n    this.logger = logger;\n  }\n\n  createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n\n          jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n\n          return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'LitElement': function LitElement() {\n          var version = window.litElementVersions && window.litElementVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'LitHtml': function LitHtml() {\n          var version = window.litHtmlVersions && window.litHtmlVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.\n      // Check all locations calling the method getEntries() in\n      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106\n      // Currently it is only used by BootstrapHandler.\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { version: version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n\n      types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n\n      var previousStats = JSON.stringify(storedStats);\n\n      this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n\n      var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { firstUsed: now };\n          }\n          // Discards any previously logged version number\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n\n      var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n}();\n\nvar StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n\n    this.key = key;\n  }\n\n  createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n\n      return empty;\n    }\n  }]);\n  return StatisticsStorage;\n}();\n\nvar StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n\n    this.url = url;\n    this.logger = logger;\n  }\n\n  createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n\n      if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n}();\n\nvar StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n\n    this.id = id;\n  }\n\n  createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n}();\n\nvar UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n\n    this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n\n    this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n\n  createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n\n      if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return true;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n\n      if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n\n      if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n\n      this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n\n      // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.1.2';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n}();\n\ntry {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();\n  window.Vaadin.usageStatsChecker.maybeGatherAndSend();\n} catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n}\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nexport const usageStatistics = function() {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n", "export function __REGISTER__(feature, vaadinObj = (window.Vaadin ??= {})) {\r\n  vaadinObj.registrations ??= [];\r\n  vaadinObj.registrations.push({\r\n    is: feature ? `${__NAME__}/${feature}` : __NAME__,\r\n    version: __VERSION__,\r\n  });\r\n}\r\n", "import { usageStatistics } from '@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js';\r\n\r\n// @ts-expect-error: Generated function\r\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call\r\n__REGISTER__();\r\n\r\nusageStatistics();\r\n", "const willAnimate = (elem: Element) => {\r\n  const name = getComputedStyle(elem).getPropertyValue('animation-name');\r\n  return name && name !== 'none';\r\n};\r\n\r\nconst waitForAnimation = (elem: Element, cb: () => void) => {\r\n  const listener = () => {\r\n    elem.removeEventListener('animationend', listener);\r\n    cb();\r\n  };\r\n  elem.addEventListener('animationend', listener);\r\n};\r\n\r\nasync function animate(elem: Element, className: string): Promise<void> {\r\n  elem.classList.add(className);\r\n\r\n  return await new Promise((resolve: () => void) => {\r\n    if (willAnimate(elem)) {\r\n      const rect = elem.getBoundingClientRect();\r\n      const size = `height: ${rect.bottom - rect.top}px; width: ${rect.right - rect.left}px`;\r\n      elem.setAttribute('style', `position: absolute; ${size}`);\r\n      waitForAnimation(elem, () => {\r\n        elem.classList.remove(className);\r\n        elem.removeAttribute('style');\r\n        resolve();\r\n      });\r\n    } else {\r\n      elem.classList.remove(className);\r\n      resolve();\r\n    }\r\n  });\r\n}\r\n\r\nexport default animate;\r\n", "import { compile } from 'path-to-regexp';\r\nimport type Resolver from './resolver/resolver.js';\r\nimport { isFunction, isObject, isString, log, toArray } from './resolver/utils.js';\r\nimport type { Router } from './router.js';\r\nimport type {\r\n  ActionResult,\r\n  AnyObject,\r\n  ChainItem,\r\n  IndexedParams,\r\n  RedirectResult,\r\n  Route,\r\n  RouteContext,\r\n  RouterLocation,\r\n  WebComponentInterface,\r\n} from './types.js';\r\n\r\nexport function ensureRoute<R extends AnyObject, C extends AnyObject>(route?: Route<R, C>): void {\r\n  if (!route || !isString(route.path)) {\r\n    throw new Error(\r\n      log(`Expected route config to be an object with a \"path\" string property, or an array of such objects`),\r\n    );\r\n  }\r\n\r\n  if (\r\n    !isFunction(route.action) &&\r\n    !Array.isArray(route.children) &&\r\n    !isFunction(route.children) &&\r\n    !isString(route.component) &&\r\n    !isString(route.redirect)\r\n  ) {\r\n    throw new Error(\r\n      log(\r\n        `Expected route config \"${route.path}\" to include either \"component, redirect\" ` +\r\n          `or \"action\" function but none found.`,\r\n      ),\r\n    );\r\n  }\r\n\r\n  if (route.redirect) {\r\n    ['bundle', 'component'].forEach((overriddenProp) => {\r\n      if (overriddenProp in route) {\r\n        console.warn(\r\n          log(\r\n            `Route config \"${String(route.path)}\" has both \"redirect\" and \"${overriddenProp}\" properties, ` +\r\n              `and \"redirect\" will always override the latter. Did you mean to only use \"${overriddenProp}\"?`,\r\n          ),\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function ensureRoutes<R extends AnyObject, C extends AnyObject>(\r\n  routes: Route<R, C> | ReadonlyArray<Route<R, C>>,\r\n): void {\r\n  toArray(routes).forEach((route) => ensureRoute(route));\r\n}\r\n\r\nexport function copyContextWithoutNext<R extends AnyObject, C extends AnyObject>({\r\n  next: _,\r\n  ...context\r\n}: RouteContext<R, C>): Omit<RouteContext<R, C>, 'next'> {\r\n  return context;\r\n}\r\n\r\nexport function getPathnameForRouter<T, R extends AnyObject, C extends AnyObject>(\r\n  pathname: string,\r\n  router: Resolver<T, R, C>,\r\n): string {\r\n  // @ts-expect-error: __effectiveBaseUrl is a private property\r\n  const base = router.__effectiveBaseUrl;\r\n  return base ? new URL(pathname.replace(/^\\//u, ''), base).pathname : pathname;\r\n}\r\n\r\nexport function getMatchedPath(pathItems: ReadonlyArray<Readonly<{ path: string }>>): string {\r\n  return pathItems\r\n    .map((pathItem) => pathItem.path)\r\n    .reduce((a, b) => {\r\n      if (b.length) {\r\n        return `${a.replace(/\\/$/u, '')}/${b.replace(/^\\//u, '')}`;\r\n      }\r\n      return a;\r\n    }, '');\r\n}\r\n\r\nexport function getRoutePath<R extends AnyObject, C extends AnyObject>(chain: ReadonlyArray<ChainItem<R, C>>): string {\r\n  return getMatchedPath(chain.map((chainItem) => chainItem.route));\r\n}\r\n\r\nexport type ResolverOnlyContext<R extends AnyObject, C extends AnyObject> = Readonly<{ resolver: Router<R, C> }>;\r\n\r\ntype PartialRouteContext<R extends AnyObject, C extends AnyObject> = Readonly<{\r\n  chain?: ReadonlyArray<ChainItem<R, C>>;\r\n  hash?: string;\r\n  params?: IndexedParams;\r\n  pathname?: string;\r\n  resolver?: Router<R, C>;\r\n  redirectFrom?: string;\r\n  search?: string;\r\n}>;\r\n\r\nexport function createLocation<R extends AnyObject, C extends AnyObject>({\r\n  resolver,\r\n}: ResolverOnlyContext<R, C>): RouterLocation<R, C>;\r\nexport function createLocation<R extends AnyObject, C extends AnyObject>(\r\n  context: RouteContext<R, C>,\r\n  route?: Route<R, C>,\r\n): RouterLocation<R, C>;\r\nexport function createLocation<R extends AnyObject, C extends AnyObject>(\r\n  { chain = [], hash = '', params = {}, pathname = '', redirectFrom, resolver, search = '' }: PartialRouteContext<R, C>,\r\n  route?: Route<R, C>,\r\n): RouterLocation<R, C> {\r\n  const routes = chain.map((item) => item.route);\r\n  return {\r\n    baseUrl: resolver?.baseUrl ?? '',\r\n    getUrl: (userParams = {}) =>\r\n      resolver ? getPathnameForRouter(compile(getRoutePath(chain))({ ...params, ...userParams } as Partial<Record<string, string[]>>), resolver) : '',\r\n    hash,\r\n    params,\r\n    pathname,\r\n    redirectFrom,\r\n    route: route ?? (Array.isArray(routes) ? routes.at(-1) : undefined) ?? null,\r\n    routes,\r\n    search,\r\n    searchParams: new URLSearchParams(search),\r\n  };\r\n}\r\n\r\nexport function createRedirect<R extends AnyObject, C extends AnyObject>(\r\n  context: RouteContext<R, C>,\r\n  pathname: string,\r\n): RedirectResult {\r\n  const params = { ...context.params };\r\n  return {\r\n    redirect: {\r\n      from: context.pathname,\r\n      params,\r\n      pathname,\r\n    },\r\n  };\r\n}\r\n\r\nexport function renderElement<R extends AnyObject, C extends AnyObject, E extends WebComponentInterface<R, C>>(\r\n  context: RouteContext<R, C>,\r\n  element: E,\r\n): E {\r\n  element.location = createLocation(context);\r\n\r\n  if (context.chain) {\r\n    const index = context.chain.map((item) => item.route).indexOf(context.route);\r\n    context.chain[index].element = element;\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nexport function maybeCall<R, A extends unknown[], O extends object>(\r\n  callback: ((this: O, ...args: A) => R) | undefined,\r\n  thisArg: O,\r\n  ...args: A\r\n): R | undefined {\r\n  if (typeof callback === 'function') {\r\n    return callback.apply(thisArg, args);\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport function amend<\r\n  A extends readonly unknown[],\r\n  N extends keyof O,\r\n  O extends AnyObject & { [key in N]: (this: O, ...args: A) => ActionResult | undefined },\r\n>(fn: keyof O, obj: O | undefined, ...args: A): (result: ActionResult) => ActionResult | undefined {\r\n  return (result: ActionResult) => {\r\n    if (result && isObject(result) && ('cancel' in result || 'redirect' in result)) {\r\n      return result;\r\n    }\r\n\r\n    return maybeCall(obj?.[fn], obj!, ...args);\r\n  };\r\n}\r\n\r\nexport function processNewChildren<R extends AnyObject, C extends AnyObject>(\r\n  newChildren: Route<R, C> | ReadonlyArray<Route<R, C>> | undefined | void,\r\n  route: Route<R, C>,\r\n): void {\r\n  if (!Array.isArray(newChildren) && !isObject(newChildren)) {\r\n    throw new Error(\r\n      log(\r\n        `Incorrect \"children\" value for the route ${String(route.path)}: expected array or object, but got ${String(\r\n          newChildren,\r\n        )}`,\r\n      ),\r\n    );\r\n  }\r\n\r\n  const children = toArray(newChildren);\r\n  children.forEach((child) => ensureRoute(child));\r\n  route.__children = children;\r\n}\r\n\r\nexport function fireRouterEvent(type: string, detail: unknown): boolean {\r\n  return !window.dispatchEvent(new CustomEvent(`vaadin-router-${type}`, { cancelable: type === 'go', detail }));\r\n}\r\n\r\nexport function logValue(value: unknown): string {\r\n  if (typeof value !== 'object') {\r\n    return String(value);\r\n  }\r\n\r\n  const [stringType = 'Unknown'] = / (.*)\\]$/u.exec(String(value)) ?? [];\r\n  if (stringType === 'Object' || stringType === 'Array') {\r\n    return `${stringType} ${JSON.stringify(value)}`;\r\n  }\r\n  return stringType;\r\n}\r\n", "import type { NavigationTrigger } from '../types.js';\r\nimport { fireRouterEvent } from '../utils.js';\r\n\r\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\r\nfunction getAnchorOrigin(anchor: HTMLAnchorElement) {\r\n  // IE11: on HTTP and HTTPS the default port is not included into\r\n  // window.location.origin, so won't include it here either.\r\n  const { port, protocol } = anchor;\r\n  const defaultHttp = protocol === 'http:' && port === '80';\r\n  const defaultHttps = protocol === 'https:' && port === '443';\r\n  const host =\r\n    defaultHttp || defaultHttps\r\n      ? anchor.hostname // does not include the port number (e.g. www.example.org)\r\n      : anchor.host; // does include the port number (e.g. www.example.org:80)\r\n  return `${protocol}//${host}`;\r\n}\r\n\r\nfunction getNormalizedNodeName(e: EventTarget): string | undefined {\r\n  if (!(e instanceof Element)) {\r\n    return undefined;\r\n  }\r\n\r\n  return e.nodeName.toLowerCase();\r\n}\r\n\r\n// TODO: Name correctly when the type purpose is known\r\ntype __Pathable = Readonly<{\r\n  path?: readonly EventTarget[];\r\n}>;\r\n\r\n// The list of checks is not complete:\r\n//  - SVG support is missing\r\n//  - the 'rel' attribute is not considered\r\nfunction vaadinRouterGlobalClickHandler(event: MouseEvent & __Pathable) {\r\n  // ignore the click if the default action is prevented\r\n  if (event.defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  // ignore the click if not with the primary mouse button\r\n  if (event.button !== 0) {\r\n    return;\r\n  }\r\n\r\n  // ignore the click if a modifier key is pressed\r\n  if (event.shiftKey || event.ctrlKey || event.altKey || event.metaKey) {\r\n    return;\r\n  }\r\n\r\n  // find the <a> element that the click is at (or within)\r\n  let anchorCandidate = event.target;\r\n  const path = event instanceof MouseEvent ? event.composedPath() : ((event as __Pathable).path ?? []);\r\n\r\n  // FIXME(web-padawan): `Symbol.iterator` used by webcomponentsjs is broken for arrays\r\n  // example to check: `for...of` loop here throws the \"Not yet implemented\" error\r\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\r\n  for (let i = 0; i < path.length; i++) {\r\n    const target = path[i];\r\n    if ('nodeName' in target && (target as Element).nodeName.toLowerCase() === 'a') {\r\n      anchorCandidate = target;\r\n      break;\r\n    }\r\n  }\r\n\r\n  while (anchorCandidate && anchorCandidate instanceof Node && getNormalizedNodeName(anchorCandidate) !== 'a') {\r\n    anchorCandidate = anchorCandidate.parentNode;\r\n  }\r\n\r\n  // ignore the click if not at an <a> element\r\n  if (!anchorCandidate || getNormalizedNodeName(anchorCandidate) !== 'a') {\r\n    return;\r\n  }\r\n\r\n  const anchor = anchorCandidate as HTMLAnchorElement;\r\n\r\n  // ignore the click if the <a> element has a non-default target\r\n  if (anchor.target && anchor.target.toLowerCase() !== '_self') {\r\n    return;\r\n  }\r\n\r\n  // ignore the click if the <a> element has the 'download' attribute\r\n  if (anchor.hasAttribute('download')) {\r\n    return;\r\n  }\r\n\r\n  // ignore the click if the <a> element has the 'router-ignore' attribute\r\n  if (anchor.hasAttribute('router-ignore')) {\r\n    return;\r\n  }\r\n\r\n  // ignore the click if the target URL is a fragment on the current page\r\n  if (anchor.pathname === window.location.pathname && anchor.hash !== '') {\r\n    return;\r\n  }\r\n\r\n  // ignore the click if the target is external to the app\r\n  // In IE11 HTMLAnchorElement does not have the `origin` property\r\n  const origin = anchor.origin || getAnchorOrigin(anchor);\r\n  if (origin !== window.location.origin) {\r\n    return;\r\n  }\r\n\r\n  // if none of the above, convert the click into a navigation event\r\n  const { hash, pathname, search } = anchor;\r\n  if (fireRouterEvent('go', { hash, pathname, search }) && event instanceof MouseEvent) {\r\n    event.preventDefault();\r\n    // for a click event, the scroll is reset to the top position.\r\n    // FIXME: undefined here?\r\n    if (event.type === 'click') {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * A navigation trigger for Vaadin Router that translated clicks on `<a>` links\r\n * into Vaadin Router navigation events.\r\n *\r\n * Only regular clicks on in-app links are translated (primary mouse button, no\r\n * modifier keys, the target href is within the app's URL space).\r\n */\r\nconst CLICK: NavigationTrigger = {\r\n  activate() {\r\n    window.document.addEventListener('click', vaadinRouterGlobalClickHandler);\r\n  },\r\n\r\n  inactivate() {\r\n    window.document.removeEventListener('click', vaadinRouterGlobalClickHandler);\r\n  },\r\n};\r\n\r\nexport default CLICK;\r\n", "import type { NavigationTrigger } from '../types.js';\r\nimport { fireRouterEvent } from '../utils.js';\r\n\r\nfunction vaadinRouterGlobalPopstateHandler(event: PopStateEvent) {\r\n  if (event.state === 'vaadin-router-ignore') {\r\n    return;\r\n  }\r\n  const { hash, pathname, search } = window.location;\r\n  fireRouterEvent('go', { hash, pathname, search });\r\n}\r\n\r\n/**\r\n * A navigation trigger for Vaadin Router that translates popstate events into\r\n * Vaadin Router navigation events.\r\n */\r\nconst POPSTATE: NavigationTrigger = {\r\n  activate() {\r\n    window.addEventListener('popstate', vaadinRouterGlobalPopstateHandler);\r\n  },\r\n\r\n  inactivate() {\r\n    window.removeEventListener('popstate', vaadinRouterGlobalPopstateHandler);\r\n  },\r\n};\r\n\r\nexport default POPSTATE;\r\n", "import type { NavigationTrigger } from '../types.js';\r\nimport CLICK from './click.js';\r\nimport POPSTATE from './popstate.js';\r\n\r\nlet triggers: readonly NavigationTrigger[] = [];\r\n\r\nconst DEFAULT_TRIGGERS = {\r\n  CLICK,\r\n  POPSTATE,\r\n} as const;\r\n\r\nexport { DEFAULT_TRIGGERS };\r\n\r\nexport function setNavigationTriggers(newTriggers: readonly NavigationTrigger[] = []): void {\r\n  triggers.forEach((trigger) => trigger.inactivate());\r\n\r\n  newTriggers.forEach((trigger) => trigger.activate());\r\n\r\n  triggers = newTriggers;\r\n}\r\n", "/* eslint-disable @typescript-eslint/consistent-return */\r\nimport { compile } from 'path-to-regexp';\r\nimport type { EmptyObject, Writable } from 'type-fest';\r\nimport generateUrls from './resolver/generateUrls.js';\r\nimport Resolver from './resolver/resolver.js';\r\nimport './router-config.js';\r\nimport { getNotFoundError, isFunction, isObject, isString, log, notFoundResult } from './resolver/utils.js';\r\nimport animate from './transitions/animate.js';\r\nimport { DEFAULT_TRIGGERS, setNavigationTriggers } from './triggers/navigation.js';\r\nimport type {\r\n  ActionResult,\r\n  AnyObject,\r\n  Commands,\r\n  ChainItem,\r\n  ContextExtension,\r\n  EmptyCommands,\r\n  NavigationTrigger,\r\n  Params,\r\n  PreventAndRedirectCommands,\r\n  PreventCommands,\r\n  PreventResult,\r\n  RedirectContextInfo,\r\n  RedirectResult,\r\n  ResolveContext,\r\n  Route,\r\n  RouteContext,\r\n  RouteExtension,\r\n  RouterLocation,\r\n  WebComponentInterface,\r\n  RouterOptions,\r\n  ActionValue,\r\n  NextResult,\r\n} from './types.js';\r\nimport {\r\n  amend,\r\n  copyContextWithoutNext,\r\n  createLocation,\r\n  createRedirect,\r\n  ensureRoutes,\r\n  fireRouterEvent,\r\n  getMatchedPath,\r\n  getPathnameForRouter,\r\n  logValue,\r\n  maybeCall,\r\n  processNewChildren,\r\n  renderElement,\r\n} from './utils.js';\r\n\r\nconst MAX_REDIRECT_COUNT = 256;\r\n\r\nfunction prevent(): PreventResult {\r\n  return { cancel: true };\r\n}\r\n\r\nconst rootContext: RouteContext = {\r\n  __renderId: -1,\r\n  params: {},\r\n  route: {\r\n    __synthetic: true,\r\n    children: [],\r\n    path: '',\r\n    action() {\r\n      return undefined;\r\n    },\r\n  },\r\n  pathname: '',\r\n  // eslint-disable-next-line @typescript-eslint/require-await\r\n  async next() {\r\n    return notFoundResult;\r\n  },\r\n};\r\n\r\n/**\r\n * A simple client-side router for single-page applications. It uses\r\n * express-style middleware and has a first-class support for Web Components and\r\n * lazy-loading. Works great in Polymer and non-Polymer apps.\r\n *\r\n * Use `new Router(outlet, options)` to create a new Router instance.\r\n *\r\n * * The `outlet` parameter is a reference to the DOM node to render\r\n *   the content into.\r\n *\r\n * * The `options` parameter is an optional object with options. The following\r\n *   keys are supported:\r\n *   * `baseUrl` \u2014 the initial value for [\r\n *     the `baseUrl` property\r\n *   ](#/classes/Router#property-baseUrl)\r\n *\r\n * The Router instance is automatically subscribed to navigation events\r\n * on `window`.\r\n *\r\n * See [Live Examples](#/classes/Router/demos/demo/index.html) for the detailed usage demo and code snippets.\r\n *\r\n * See also detailed API docs for the following methods, for the advanced usage:\r\n *\r\n * * [setOutlet](#/classes/Router#method-setOutlet) \u2013 should be used to configure the outlet.\r\n * * [setTriggers](#/classes/Router#method-setTriggers) \u2013 should be used to configure the navigation events.\r\n * * [setRoutes](#/classes/Router#method-setRoutes) \u2013 should be used to configure the routes.\r\n *\r\n * Only `setRoutes` has to be called manually, others are automatically invoked when creating a new instance.\r\n */\r\nexport class Router<R extends AnyObject = EmptyObject, C extends AnyObject = EmptyObject> extends Resolver<\r\n  ActionValue,\r\n  RouteExtension<R, C>,\r\n  ContextExtension<R, C>\r\n> {\r\n  /**\r\n   * Contains read-only information about the current router location:\r\n   * pathname, active routes, parameters. See the\r\n   * [Location type declaration](#/classes/RouterLocation)\r\n   * for more details.\r\n   */\r\n  location = createLocation({ resolver: this });\r\n\r\n  /**\r\n   * A promise that is settled after the current render cycle completes. If\r\n   * there is no render cycle in progress the promise is immediately settled\r\n   * with the last render cycle result.\r\n   */\r\n  ready: Promise<RouterLocation<R, C>> = Promise.resolve(this.location);\r\n\r\n  readonly #addedByRouter = new WeakSet<Element>();\r\n  readonly #createdByRouter = new WeakSet<Element>();\r\n  readonly #navigationEventHandler = this.#onNavigationEvent.bind(this);\r\n\r\n  #lastStartedRenderId = 0;\r\n  #outlet: Element | DocumentFragment | null | undefined;\r\n  private __previousContext?: RouteContext<R, C>;\r\n\r\n  #urlForName?: ReturnType<typeof generateUrls>;\r\n\r\n  #appearingContent: Element[] | null = null;\r\n  #disappearingContent: Element[] | null = null;\r\n\r\n  /**\r\n   * Creates a new Router instance with a given outlet, and\r\n   * automatically subscribes it to navigation events on the `window`.\r\n   * Using a constructor argument or a setter for outlet is equivalent:\r\n   *\r\n   * ```\r\n   * const router = new Router();\r\n   * router.setOutlet(outlet);\r\n   * ```\r\n   * @param outlet - a container to render the resolved route\r\n   * @param options - an optional object with options\r\n   */\r\n  constructor(outlet?: Element | DocumentFragment | null, options?: RouterOptions<R, C>) {\r\n    const baseElement = document.head.querySelector('base');\r\n    const baseHref = baseElement?.getAttribute('href');\r\n    super([], {\r\n      baseUrl: baseHref ? new URL(baseHref, document.URL).href.replace(/[^/]*$/u, '') : undefined,\r\n      ...options,\r\n      resolveRoute: async (context) => await this.#resolveRoute(context),\r\n    });\r\n\r\n    setNavigationTriggers(Object.values(DEFAULT_TRIGGERS));\r\n\r\n    this.setOutlet(outlet);\r\n    this.subscribe();\r\n  }\r\n\r\n  async #resolveRoute(context: RouteContext<R, C>): Promise<ActionResult | RouteContext<R, C>> {\r\n    const { route } = context;\r\n\r\n    if (isFunction(route.children)) {\r\n      let children = await route.children(copyContextWithoutNext(context));\r\n\r\n      // The route.children() callback might have re-written the\r\n      // route.children property instead of returning a value\r\n      if (!isFunction(route.children)) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        ({ children } = route);\r\n      }\r\n      processNewChildren(children, route);\r\n    }\r\n\r\n    const commands: Commands = {\r\n      component: (component: string) => {\r\n        const element = document.createElement(component);\r\n        this.#createdByRouter.add(element);\r\n        return element;\r\n      },\r\n      prevent,\r\n      redirect: (path) => createRedirect(context, path),\r\n    };\r\n\r\n    return await Promise.resolve()\r\n      .then(async () => {\r\n        if (this.#isLatestRender(context)) {\r\n          // eslint-disable-next-line @typescript-eslint/unbound-method\r\n          return await maybeCall(route.action, route, context, commands);\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result != null && (typeof result === 'object' || typeof result === 'symbol')) {\r\n          // Actions like `() => import('my-view.js')` are not expected to\r\n          // end the resolution, despite the result is not empty. Checking\r\n          // the result with a whitelist of values that end the resolution.\r\n          if (\r\n            result instanceof HTMLElement ||\r\n            result === notFoundResult ||\r\n            (isObject(result) && 'redirect' in result)\r\n          ) {\r\n            return result;\r\n          }\r\n        }\r\n\r\n        if (isString(route.redirect)) {\r\n          return commands.redirect(route.redirect);\r\n        }\r\n      })\r\n      .then((result) => {\r\n        if (result != null) {\r\n          return result;\r\n        }\r\n        if (isString(route.component)) {\r\n          return commands.component(route.component);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Sets the router outlet (the DOM node where the content for the current\r\n   * route is inserted). Any content pre-existing in the router outlet is\r\n   * removed at the end of each render pass.\r\n   *\r\n   * @remarks\r\n   * This method is automatically invoked first time when creating a new Router\r\n   * instance.\r\n   *\r\n   * @param outlet - the DOM node where the content for the current route is\r\n   * inserted.\r\n   */\r\n  setOutlet(outlet?: Element | DocumentFragment | null): void {\r\n    if (outlet) {\r\n      this.#ensureOutlet(outlet);\r\n    }\r\n    this.#outlet = outlet;\r\n  }\r\n\r\n  /**\r\n   * Returns the current router outlet. The initial value is `undefined`.\r\n   *\r\n   * @returns the current router outlet (or `undefined`)\r\n   */\r\n  getOutlet(): Element | DocumentFragment | null | undefined {\r\n    return this.#outlet;\r\n  }\r\n\r\n  /**\r\n   * Sets the routing config (replacing the existing one) and triggers a\r\n   * navigation event so that the router outlet is refreshed according to the\r\n   * current `window.location` and the new routing config.\r\n   *\r\n   * Each route object may have the following properties, listed here in the processing order:\r\n   * * `path` \u2013 the route path (relative to the parent route if any) in the\r\n   * [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths).\r\n   *\r\n   * * `children` \u2013 an array of nested routes or a function that provides this\r\n   * array at the render time. The function can be synchronous or asynchronous:\r\n   * in the latter case the render is delayed until the returned promise is\r\n   * resolved. The `children` function is executed every time when this route is\r\n   * being rendered. This allows for dynamic route structures (e.g. backend-defined),\r\n   * but it might have a performance impact as well. In order to avoid calling\r\n   * the function on subsequent renders, you can override the `children` property\r\n   * of the route object and save the calculated array there\r\n   * (via `context.route.children = [ route1, route2, ...];`).\r\n   * Parent routes are fully resolved before resolving the children. Children\r\n   * 'path' values are relative to the parent ones.\r\n   *\r\n   * * `action` \u2013 the action that is executed before the route is resolved.\r\n   * The value for this property should be a function, accepting `context`\r\n   * and `commands` parameters described below. If present, this function is\r\n   * always invoked first, disregarding of the other properties' presence.\r\n   * The action can return a result directly or within a `Promise`, which\r\n   * resolves to the result. If the action result is an `HTMLElement` instance,\r\n   * a `commands.component(name)` result, a `commands.redirect(path)` result,\r\n   * or a `context.next()` result, the current route resolution is finished,\r\n   * and other route config properties are ignored.\r\n   * See also **Route Actions** section in [Live Examples](#/classes/Router/demos/demo/index.html).\r\n   *\r\n   * * `redirect` \u2013 other route's path to redirect to. Passes all route parameters to the redirect target.\r\n   * The target route should also be defined.\r\n   * See also **Redirects** section in [Live Examples](#/classes/Router/demos/demo/index.html).\r\n   *\r\n   * * `component` \u2013 the tag name of the Web Component to resolve the route to.\r\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\r\n   * If route contains the `component` property (or an action that return a component)\r\n   * and its child route also contains the `component` property, child route's component\r\n   * will be rendered as a light dom child of a parent component.\r\n   *\r\n   * * `name` \u2013 the string name of the route to use in the\r\n   * [`router.urlForName(name, params)`](#/classes/Router#method-urlForName)\r\n   * navigation helper method.\r\n   *\r\n   * For any route function (`action`, `children`) defined, the corresponding `route` object is available inside the\r\n   * callback through the `this` reference. If you need to access it, make sure you define the callback as a non-arrow\r\n   * function because arrow functions do not have their own `this` reference.\r\n   *\r\n   * `context` object that is passed to `action` function holds the following properties:\r\n   * * `context.pathname` \u2013 string with the pathname being resolved\r\n   *\r\n   * * `context.search` \u2013 search query string\r\n   *\r\n   * * `context.hash` \u2013 hash string\r\n   *\r\n   * * `context.params` \u2013 object with route parameters\r\n   *\r\n   * * `context.route` \u2013 object that holds the route that is currently being rendered.\r\n   *\r\n   * * `context.next()` \u2013 function for asynchronously getting the next route\r\n   * contents from the resolution chain (if any)\r\n   *\r\n   * `commands` object that is passed to `action` function has\r\n   * the following methods:\r\n   *\r\n   * * `commands.redirect(path)` \u2013 function that creates a redirect data\r\n   * for the path specified.\r\n   *\r\n   * * `commands.component(component)` \u2013 function that creates a new HTMLElement\r\n   * with current context. Note: the component created by this function is reused if visiting the same path twice in\r\n   * row.\r\n   *\r\n   * @param routes - a single route or an array of those\r\n   * @param skipRender - configure the router but skip rendering the\r\n   *     route corresponding to the current `window.location` values\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\r\n  override async setRoutes(\r\n    routes: Route<R, C> | ReadonlyArray<Route<R, C>>,\r\n    skipRender = false,\r\n  ): Promise<RouterLocation<R, C>> {\r\n    this.__previousContext = undefined;\r\n    this.#urlForName = undefined;\r\n    ensureRoutes(routes);\r\n    super.setRoutes(routes);\r\n    if (!skipRender) {\r\n      this.#onNavigationEvent();\r\n    }\r\n    return await this.ready;\r\n  }\r\n\r\n  protected override addRoutes(routes: Route<R, C> | ReadonlyArray<Route<R, C>>): ReadonlyArray<Route<R, C>> {\r\n    ensureRoutes(routes);\r\n    return super.addRoutes(routes);\r\n  }\r\n\r\n  /**\r\n   * Asynchronously resolves the given pathname and renders the resolved route\r\n   * component into the router outlet. If no router outlet is set at the time of\r\n   * calling this method, or at the time when the route resolution is completed,\r\n   * a `TypeError` is thrown.\r\n   *\r\n   * Returns a promise that is fulfilled with the router outlet DOM Element | DocumentFragment after\r\n   * the route component is created and inserted into the router outlet, or\r\n   * rejected if no route matches the given path.\r\n   *\r\n   * If another render pass is started before the previous one is completed, the\r\n   * result of the previous render pass is ignored.\r\n   *\r\n   * @param pathnameOrContext - the pathname to render or a context object with\r\n   * a `pathname` property, optional `search` and `hash` properties, and other\r\n   * properties to pass to the resolver.\r\n   * @param shouldUpdateHistory - update browser history with the rendered\r\n   * location\r\n   */\r\n  async render(\r\n    pathnameOrContext: string | ResolveContext,\r\n    shouldUpdateHistory: boolean = false,\r\n  ): Promise<RouterLocation<R, C>> {\r\n    this.#lastStartedRenderId += 1;\r\n    const renderId = this.#lastStartedRenderId;\r\n    const context = {\r\n      ...(rootContext as RouteContext<R, C>),\r\n      ...(isString(pathnameOrContext) ? { hash: '', search: '', pathname: pathnameOrContext } : pathnameOrContext),\r\n      __renderId: renderId,\r\n    } satisfies RouteContext<R, C>;\r\n\r\n    this.ready = this.#doRender(context, shouldUpdateHistory);\r\n    return await this.ready;\r\n  }\r\n\r\n  async #doRender(context: RouteContext<R, C>, shouldUpdateHistory: boolean) {\r\n    const { __renderId: renderId } = context;\r\n    try {\r\n      // Find the first route that resolves to a non-empty result\r\n      const ctx = await this.resolve(context);\r\n\r\n      // Process the result of this.resolve() and handle all special commands:\r\n      // (redirect / prevent / component). If the result is a 'component',\r\n      // then go deeper and build the entire chain of nested components matching\r\n      // the pathname. Also call all 'on before' callbacks along the way.\r\n      const contextWithChain = await this.#fullyResolveChain(ctx);\r\n\r\n      if (!this.#isLatestRender(contextWithChain)) {\r\n        return this.location;\r\n      }\r\n\r\n      const previousContext = this.__previousContext;\r\n\r\n      // Check if the render was prevented and make an early return in that case\r\n      if (contextWithChain === previousContext) {\r\n        // Replace the history with the previous context\r\n        // to make sure the URL stays the same.\r\n        this.#updateBrowserHistory(previousContext, true);\r\n        return this.location;\r\n      }\r\n\r\n      this.location = createLocation(contextWithChain);\r\n\r\n      if (shouldUpdateHistory) {\r\n        // Replace only if first render redirects, so that we don\u2019t leave\r\n        // the redirecting record in the history\r\n        this.#updateBrowserHistory(contextWithChain, renderId === 1);\r\n      }\r\n\r\n      fireRouterEvent('location-changed', {\r\n        router: this,\r\n        location: this.location,\r\n      });\r\n\r\n      // Skip detaching/re-attaching there are no render changes\r\n      if (contextWithChain.__skipAttach) {\r\n        this.#copyUnchangedElements(contextWithChain, previousContext);\r\n        this.__previousContext = contextWithChain;\r\n        return this.location;\r\n      }\r\n\r\n      this.#addAppearingContent(contextWithChain, previousContext);\r\n      const animationDone = this.#animateIfNeeded(contextWithChain);\r\n\r\n      this.#runOnAfterEnterCallbacks(contextWithChain);\r\n      this.#runOnAfterLeaveCallbacks(contextWithChain, previousContext);\r\n\r\n      await animationDone;\r\n\r\n      if (this.#isLatestRender(contextWithChain)) {\r\n        // If there is another render pass started after this one,\r\n        // the 'disappearing content' would be removed when the other\r\n        // render pass calls `this.__addAppearingContent()`\r\n        this.#removeDisappearingContent();\r\n\r\n        this.__previousContext = contextWithChain;\r\n        return this.location;\r\n      }\r\n    } catch (error: unknown) {\r\n      if (renderId === this.#lastStartedRenderId) {\r\n        if (shouldUpdateHistory) {\r\n          this.#updateBrowserHistory(this.context);\r\n        }\r\n\r\n        for (const child of this.#outlet?.children ?? []) {\r\n          child.remove();\r\n        }\r\n\r\n        this.location = createLocation(Object.assign(context, { resolver: this }));\r\n        fireRouterEvent('error', {\r\n          router: this,\r\n          error,\r\n          ...context,\r\n        });\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    return this.location;\r\n  }\r\n\r\n  // `topOfTheChainContextBeforeRedirects` is a context coming from Resolver.resolve().\r\n  // It would contain a 'redirect' route or the first 'component' route that\r\n  // matched the pathname. There might be more child 'component' routes to be\r\n  // resolved and added into the chain. This method would find and add them.\r\n  // `contextBeforeRedirects` is the context containing such a child component\r\n  // route. It's only necessary when this method is called recursively (otherwise\r\n  // it's the same as the 'top of the chain' context).\r\n  //\r\n  // Apart from building the chain of child components, this method would also\r\n  // handle 'redirect' routes, call 'onBefore' callbacks and handle 'prevent'\r\n  // and 'redirect' callback results.\r\n  async #fullyResolveChain(\r\n    topOfTheChainContextBeforeRedirects: RouteContext<R, C>,\r\n    contextBeforeRedirects: RouteContext<R, C> = topOfTheChainContextBeforeRedirects,\r\n  ): Promise<RouteContext<R, C>> {\r\n    const contextAfterRedirects = await this.#findComponentContextAfterAllRedirects(contextBeforeRedirects);\r\n\r\n    const redirectsHappened = contextAfterRedirects !== contextBeforeRedirects;\r\n    const topOfTheChainContextAfterRedirects = redirectsHappened\r\n      ? contextAfterRedirects\r\n      : topOfTheChainContextBeforeRedirects;\r\n\r\n    const matchedPath = getPathnameForRouter(getMatchedPath(contextAfterRedirects.chain ?? []), this);\r\n    const isFound = matchedPath === contextAfterRedirects.pathname;\r\n\r\n    // Recursive method to try matching more child and sibling routes\r\n    const findNextContextIfAny = async (\r\n      context: RouteContext<R, C>,\r\n      parent: Route<R, C> | undefined = context.route,\r\n      prevResult?: NextResult<R, C> | null,\r\n    ): Promise<NextResult<R, C>> => {\r\n      const nextContext = await context.next(false, parent, prevResult);\r\n\r\n      if (nextContext === null || nextContext === notFoundResult) {\r\n        // Next context is not found in children, ...\r\n        if (isFound) {\r\n          // ...but original context is already fully matching - use it\r\n          return context;\r\n        } else if (parent.parent != null) {\r\n          // ...and there is no full match yet - step up to check siblings\r\n          return await findNextContextIfAny(context, parent.parent, nextContext);\r\n        }\r\n        return nextContext;\r\n      }\r\n\r\n      return nextContext;\r\n    };\r\n\r\n    const nextContext = await findNextContextIfAny(contextAfterRedirects);\r\n\r\n    if (nextContext == null || nextContext === notFoundResult) {\r\n      throw getNotFoundError<ActionValue, RouteExtension<R, C>, ContextExtension<R, C>>(\r\n        topOfTheChainContextAfterRedirects,\r\n      );\r\n    }\r\n\r\n    return nextContext !== contextAfterRedirects\r\n      ? await this.#fullyResolveChain(topOfTheChainContextAfterRedirects, nextContext)\r\n      : await this.#amendWithOnBeforeCallbacks(contextAfterRedirects);\r\n  }\r\n\r\n  async #findComponentContextAfterAllRedirects(context: RouteContext<R, C>): Promise<RouteContext<R, C>> {\r\n    const { result } = context;\r\n    if (result instanceof HTMLElement) {\r\n      renderElement(context, result as WebComponentInterface<R, C>);\r\n      return context;\r\n    } else if (result && 'redirect' in result) {\r\n      const ctx = await this.#redirect(result.redirect, context.__redirectCount, context.__renderId);\r\n      return await this.#findComponentContextAfterAllRedirects(ctx);\r\n    }\r\n\r\n    throw result instanceof Error\r\n      ? result\r\n      : new Error(\r\n          log(\r\n            `Invalid route resolution result for path \"${context.pathname}\". ` +\r\n              `Expected redirect object or HTML element, but got: \"${logValue(result)}\". ` +\r\n              `Double check the action return value for the route.`,\r\n          ),\r\n        );\r\n  }\r\n\r\n  async #amendWithOnBeforeCallbacks(contextWithFullChain: RouteContext<R, C>): Promise<RouteContext<R, C>> {\r\n    return await this.#runOnBeforeCallbacks(contextWithFullChain).then(async (amendedContext) => {\r\n      if (amendedContext === this.__previousContext || amendedContext === contextWithFullChain) {\r\n        return amendedContext;\r\n      }\r\n      return await this.#fullyResolveChain(amendedContext);\r\n    });\r\n  }\r\n\r\n  async #runOnBeforeCallbacks(newContext: RouteContext<R, C>): Promise<RouteContext<R, C>> {\r\n    const previousContext = (this.__previousContext ?? {}) as Partial<RouteContext<R, C>>;\r\n    const previousChain = previousContext.chain ?? [];\r\n    const newChain = newContext.chain ?? [];\r\n\r\n    let callbacks: Promise<ActionResult> = Promise.resolve(undefined);\r\n    const redirect = (pathname: string) => createRedirect(newContext, pathname) as unknown as RedirectResult;\r\n\r\n    newContext.__divergedChainIndex = 0;\r\n    newContext.__skipAttach = false;\r\n    if (previousChain.length) {\r\n      for (let i = 0; i < Math.min(previousChain.length, newChain.length); newContext.__divergedChainIndex++, i++) {\r\n        if (\r\n          previousChain[i].route !== newChain[i].route ||\r\n          (previousChain[i].path !== newChain[i].path && previousChain[i].element !== newChain[i].element) ||\r\n          !this.#isReusableElement(\r\n            previousChain[i].element as HTMLElement | undefined,\r\n            newChain[i].element as HTMLElement | undefined,\r\n          )\r\n        ) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Skip re-attaching and notifications if element and chain do not change\r\n      newContext.__skipAttach =\r\n        // Same route chain\r\n        newChain.length === previousChain.length &&\r\n        newContext.__divergedChainIndex === newChain.length &&\r\n        // Same element\r\n        this.#isReusableElement(newContext.result, previousContext.result);\r\n\r\n      if (newContext.__skipAttach) {\r\n        // execute onBeforeLeave for changed segment element when skipping attach\r\n        for (let i = newChain.length - 1; i >= 0; i--) {\r\n          callbacks = this.#runOnBeforeLeaveCallbacks(callbacks, newContext, { prevent }, previousChain[i]);\r\n        }\r\n        // execute onBeforeEnter for changed segment element when skipping attach\r\n        for (let i = 0; i < newChain.length; i++) {\r\n          callbacks = this.#runOnBeforeEnterCallbacks(\r\n            callbacks,\r\n            newContext,\r\n            {\r\n              prevent,\r\n              redirect,\r\n            },\r\n            newChain[i],\r\n          );\r\n          previousChain[i].element!.location = createLocation(newContext, previousChain[i].route);\r\n        }\r\n      } else {\r\n        // execute onBeforeLeave when NOT skipping attach\r\n        for (let i = previousChain.length - 1; i >= newContext.__divergedChainIndex; i--) {\r\n          callbacks = this.#runOnBeforeLeaveCallbacks(callbacks, newContext, { prevent }, previousChain[i]);\r\n        }\r\n      }\r\n    }\r\n    // execute onBeforeEnter when NOT skipping attach\r\n    if (!newContext.__skipAttach) {\r\n      for (let i = 0; i < newChain.length; i++) {\r\n        if (i < newContext.__divergedChainIndex) {\r\n          if (i < previousChain.length && previousChain[i].element) {\r\n            previousChain[i].element!.location = createLocation(newContext, previousChain[i].route);\r\n          }\r\n        } else {\r\n          callbacks = this.#runOnBeforeEnterCallbacks(\r\n            callbacks,\r\n            newContext,\r\n            {\r\n              prevent,\r\n              redirect,\r\n            },\r\n            newChain[i],\r\n          );\r\n          if (newChain[i].element) {\r\n            newChain[i].element!.location = createLocation(newContext, newChain[i].route);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return await callbacks.then(async (amendmentResult: ActionResult) => {\r\n      if (amendmentResult && isObject(amendmentResult)) {\r\n        if ('cancel' in amendmentResult && this.__previousContext) {\r\n          this.__previousContext.__renderId = newContext.__renderId;\r\n          return this.__previousContext;\r\n        }\r\n        if ('redirect' in amendmentResult) {\r\n          return await this.#redirect(amendmentResult.redirect, newContext.__redirectCount, newContext.__renderId);\r\n        }\r\n      }\r\n      return newContext;\r\n    });\r\n  }\r\n\r\n  async #runOnBeforeLeaveCallbacks(\r\n    callbacks: Promise<ActionResult>,\r\n    newContext: RouteContext<R, C>,\r\n    commands: PreventCommands,\r\n    chainElement: ChainItem<R, C>,\r\n  ): Promise<ActionResult> {\r\n    const location = createLocation(newContext);\r\n\r\n    let result: ActionResult = await callbacks;\r\n\r\n    if (this.#isLatestRender(newContext)) {\r\n      const beforeLeaveFunction = amend('onBeforeLeave', chainElement.element, location, commands, this);\r\n      result = beforeLeaveFunction(result);\r\n    }\r\n\r\n    if (!(isObject(result) && 'redirect' in result)) {\r\n      return result as ActionResult;\r\n    }\r\n  }\r\n\r\n  async #runOnBeforeEnterCallbacks(\r\n    callbacks: Promise<ActionResult>,\r\n    newContext: RouteContext<R, C>,\r\n    commands: PreventAndRedirectCommands,\r\n    chainElement: ChainItem<R, C>,\r\n  ): Promise<ActionResult> {\r\n    const location = createLocation(newContext, chainElement.route);\r\n    const result = await callbacks;\r\n\r\n    if (this.#isLatestRender(newContext)) {\r\n      const beforeEnterFunction = amend('onBeforeEnter', chainElement.element, location, commands, this);\r\n      return beforeEnterFunction(result);\r\n    }\r\n  }\r\n\r\n  #isReusableElement(element?: unknown, otherElement?: unknown): boolean {\r\n    if (element instanceof Element && otherElement instanceof Element) {\r\n      return this.#createdByRouter.has(element) && this.#createdByRouter.has(otherElement)\r\n        ? element.localName === otherElement.localName\r\n        : element === otherElement;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  #isLatestRender(context: Partial<RouteContext<R, C>>): boolean {\r\n    return context.__renderId === this.#lastStartedRenderId;\r\n  }\r\n\r\n  declare ['resolve']: (\r\n    contextOrPathname: RouteContext<R, C> | string,\r\n  ) => Promise<RouteContext<R, C> & RedirectContextInfo>;\r\n\r\n  async #redirect(\r\n    redirectData: RedirectContextInfo,\r\n    counter: number = 0,\r\n    renderId: number = 0,\r\n  ): Promise<RouteContext<R, C> & RedirectContextInfo> {\r\n    if (counter > MAX_REDIRECT_COUNT) {\r\n      throw new Error(log(`Too many redirects when rendering ${redirectData.from}`));\r\n    }\r\n\r\n    return await this.resolve({\r\n      ...(rootContext as RouteContext<R, C>),\r\n      pathname: this.urlForPath(redirectData.pathname, redirectData.params),\r\n      redirectFrom: redirectData.from,\r\n      __redirectCount: counter + 1,\r\n      __renderId: renderId,\r\n    });\r\n  }\r\n\r\n  #ensureOutlet(outlet: Element | DocumentFragment | undefined | null = this.#outlet): void {\r\n    if (!(outlet instanceof Element || outlet instanceof DocumentFragment)) {\r\n      throw new TypeError(\r\n        log(`Expected router outlet to be a valid DOM Element | DocumentFragment (but got ${outlet})`),\r\n      );\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/class-methods-use-this\r\n  #updateBrowserHistory({ pathname, search = '', hash = '' }: ResolveContext, replace?: boolean): void {\r\n    if (window.location.pathname !== pathname || window.location.search !== search || window.location.hash !== hash) {\r\n      const changeState = replace ? 'replaceState' : 'pushState';\r\n      window.history[changeState](null, document.title, pathname + search + hash);\r\n      window.dispatchEvent(new PopStateEvent('popstate', { state: 'vaadin-router-ignore' }));\r\n    }\r\n  }\r\n\r\n  #copyUnchangedElements(\r\n    context: RouteContext<R, C>,\r\n    previousContext?: RouteContext<R, C>,\r\n  ): Element | DocumentFragment | null | undefined {\r\n    // Find the deepest common parent between the last and the new component\r\n    // chains. Update references for the unchanged elements in the new chain\r\n    let deepestCommonParent = this.#outlet;\r\n    for (let i = 0; i < (context.__divergedChainIndex ?? 0); i++) {\r\n      const unchangedElement = previousContext?.chain?.[i].element;\r\n      if (unchangedElement) {\r\n        if (unchangedElement.parentNode === deepestCommonParent) {\r\n          (context.chain![i] as Writable<ChainItem<R, C>>).element = unchangedElement;\r\n          deepestCommonParent = unchangedElement;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return deepestCommonParent;\r\n  }\r\n\r\n  #addAppearingContent(context: RouteContext<R, C>, previousContext?: RouteContext<R, C>): void {\r\n    this.#ensureOutlet();\r\n\r\n    // If the previous 'entering' animation has not completed yet,\r\n    // stop it and remove that content from the DOM before adding new one.\r\n    this.#removeAppearingContent();\r\n\r\n    // Copy reusable elements from the previousContext to current\r\n    const deepestCommonParent = this.#copyUnchangedElements(context, previousContext);\r\n\r\n    // Keep two lists of DOM elements:\r\n    //  - those that should be removed once the transition animation is over\r\n    //  - and those that should remain\r\n    this.#appearingContent = [];\r\n    this.#disappearingContent = Array.from(deepestCommonParent?.children ?? []).filter(\r\n      // Only remove layout content that was added by router\r\n      (e) =>\r\n        this.#addedByRouter.has(e) &&\r\n        // Do not remove the result element to avoid flickering\r\n        e !== context.result,\r\n    );\r\n\r\n    // Add new elements (starting after the deepest common parent) to the DOM.\r\n    // That way only the components that are actually different between the two\r\n    // locations are added to the DOM (and those that are common remain in the\r\n    // DOM without first removing and then adding them again).\r\n    let parentElement = deepestCommonParent;\r\n    for (let i = context.__divergedChainIndex ?? 0; i < (context.chain?.length ?? 0); i++) {\r\n      const elementToAdd = context.chain![i].element;\r\n      if (elementToAdd) {\r\n        parentElement?.appendChild(elementToAdd);\r\n        this.#addedByRouter.add(elementToAdd);\r\n        if (parentElement === deepestCommonParent) {\r\n          this.#appearingContent.push(elementToAdd);\r\n        }\r\n        parentElement = elementToAdd;\r\n      }\r\n    }\r\n  }\r\n\r\n  #removeDisappearingContent(): void {\r\n    if (this.#disappearingContent) {\r\n      for (const element of this.#disappearingContent) {\r\n        element.remove();\r\n      }\r\n    }\r\n    this.#disappearingContent = null;\r\n    this.#appearingContent = null;\r\n  }\r\n\r\n  #removeAppearingContent(): void {\r\n    if (this.#disappearingContent && this.#appearingContent) {\r\n      for (const element of this.#appearingContent) {\r\n        element.remove();\r\n      }\r\n      this.#disappearingContent = null;\r\n      this.#appearingContent = null;\r\n    }\r\n  }\r\n\r\n  #runOnAfterLeaveCallbacks(currentContext: RouteContext<R, C>, targetContext?: RouteContext<R, C>): void {\r\n    if (!targetContext?.chain || currentContext.__divergedChainIndex == null) {\r\n      return;\r\n    }\r\n\r\n    // REVERSE iteration: from Z to A\r\n    for (let i = targetContext.chain.length - 1; i >= currentContext.__divergedChainIndex; i--) {\r\n      if (!this.#isLatestRender(currentContext)) {\r\n        break;\r\n      }\r\n      const currentComponent = targetContext.chain[i].element;\r\n      if (!currentComponent) {\r\n        continue;\r\n      }\r\n      try {\r\n        const location = createLocation(currentContext);\r\n        // eslint-disable-next-line @typescript-eslint/unbound-method\r\n        maybeCall(currentComponent.onAfterLeave, currentComponent, location, {} as EmptyCommands, this);\r\n      } finally {\r\n        if (this.#disappearingContent?.includes(currentComponent)) {\r\n          for (const child of currentComponent.children) {\r\n            child.remove();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  #runOnAfterEnterCallbacks(currentContext: RouteContext<R, C>): void {\r\n    if (!currentContext.chain || currentContext.__divergedChainIndex == null) {\r\n      return;\r\n    }\r\n\r\n    // forward iteration: from A to Z\r\n    for (let i = currentContext.__divergedChainIndex; i < currentContext.chain.length; i++) {\r\n      if (!this.#isLatestRender(currentContext)) {\r\n        break;\r\n      }\r\n      const currentComponent = currentContext.chain[i].element;\r\n      if (currentComponent) {\r\n        const location = createLocation(currentContext, currentContext.chain[i].route);\r\n        // eslint-disable-next-line @typescript-eslint/unbound-method\r\n        maybeCall(currentComponent.onAfterEnter, currentComponent, location, {}, this);\r\n      }\r\n    }\r\n  }\r\n\r\n  async #animateIfNeeded(context: RouteContext<R, C>): Promise<RouteContext<R, C>> {\r\n    const from = this.#disappearingContent?.[0];\r\n    const to = this.#appearingContent?.[0];\r\n    const promises = [];\r\n\r\n    const { chain = [] } = context;\r\n    let config;\r\n    for (let i = chain.length - 1; i >= 0; i--) {\r\n      if (chain[i].route.animate) {\r\n        config = chain[i].route.animate;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (from && to && config) {\r\n      const leave = isObject(config) && config.leave ? config.leave : 'leaving';\r\n      const enter = isObject(config) && config.enter ? config.enter : 'entering';\r\n      promises.push(animate(from, leave));\r\n      promises.push(animate(to, enter));\r\n    }\r\n\r\n    await Promise.all(promises);\r\n\r\n    return context;\r\n  }\r\n\r\n  /**\r\n   * Subscribes this instance to navigation events on the `window`.\r\n   *\r\n   * NOTE: beware of resource leaks. For as long as a router instance is\r\n   * subscribed to navigation events, it won't be garbage collected.\r\n   */\r\n  subscribe(): void {\r\n    window.addEventListener('vaadin-router-go', this.#navigationEventHandler);\r\n  }\r\n\r\n  /**\r\n   * Removes the subscription to navigation events created in the `subscribe()`\r\n   * method.\r\n   */\r\n  unsubscribe(): void {\r\n    window.removeEventListener('vaadin-router-go', this.#navigationEventHandler);\r\n  }\r\n\r\n  #onNavigationEvent(event?: Event): void {\r\n    const { pathname, search, hash } =\r\n      event instanceof CustomEvent ? (event.detail as ResolveContext) : window.location;\r\n\r\n    if (isString(this.__normalizePathname(pathname))) {\r\n      if (event?.preventDefault) {\r\n        event.preventDefault();\r\n      }\r\n      // eslint-disable-next-line no-void\r\n      void this.render({ pathname, search, hash }, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Configures what triggers Router navigation events:\r\n   *  - `POPSTATE`: popstate events on the current `window`\r\n   *  - `CLICK`: click events on `<a>` links leading to the current page\r\n   *\r\n   * This method is invoked with the pre-configured values when creating a new Router instance.\r\n   * By default, both `POPSTATE` and `CLICK` are enabled. This setup is expected to cover most of the use cases.\r\n   *\r\n   * See the `router-config.js` for the default navigation triggers config. Based on it, you can\r\n   * create the own one and only import the triggers you need, instead of pulling in all the code,\r\n   * e.g. if you want to handle `click` differently.\r\n   *\r\n   * See also **Navigation Triggers** section in [Live Examples](#/classes/Router/demos/demo/index.html).\r\n   *\r\n   * @param triggers - navigation triggers\r\n   */\r\n  static setTriggers(...triggers: readonly NavigationTrigger[]): void {\r\n    setNavigationTriggers(triggers);\r\n  }\r\n\r\n  /**\r\n   * Generates a URL for the route with the given name, optionally performing\r\n   * substitution of parameters.\r\n   *\r\n   * The route is searched in all the Router instances subscribed to\r\n   * navigation events.\r\n   *\r\n   * **Note:** For child route names, only array children are considered.\r\n   * It is not possible to generate URLs using a name for routes set with\r\n   * a children function.\r\n   *\r\n   * @param name - The route name or the route\u2019s `component` name.\r\n   * @param params - Optional object with route path parameters.\r\n   * Named parameters are passed by name (`params[name] = value`), unnamed\r\n   * parameters are passed by index (`params[index] = value`).\r\n   */\r\n  urlForName(name: string, params?: Params | null): string {\r\n    if (!this.#urlForName) {\r\n      this.#urlForName = generateUrls(this, {\r\n        cacheKeyProvider(route): string | undefined {\r\n          return 'component' in route && typeof route.component === 'string'\r\n            ? (route as Readonly<{ component: string }>).component\r\n            : undefined;\r\n        },\r\n      });\r\n    }\r\n    return getPathnameForRouter(this.#urlForName(name, params ?? undefined), this);\r\n  }\r\n\r\n  /**\r\n   * Generates a URL for the given route path, optionally performing\r\n   * substitution of parameters.\r\n   *\r\n   * @param path - String route path declared in [express.js\r\n   * syntax](https://expressjs.com/en/guide/routing.html#route-paths).\r\n   * @param params - Optional object with route path parameters.\r\n   * Named parameters are passed by name (`params[name] = value`), unnamed\r\n   * parameters are passed by index (`params[index] = value`).\r\n   */\r\n  urlForPath(path: string, params?: Params | null): string {\r\n    return getPathnameForRouter(\r\n      compile(path)((params as Partial<Record<string, string | string[]>> | null) ?? undefined),\r\n      this,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Triggers navigation to a new path. Returns a boolean without waiting until\r\n   * the navigation is complete. Returns `true` if at least one `Router`\r\n   * has handled the navigation (was subscribed and had `baseUrl` matching\r\n   * the `path` argument), otherwise returns `false`.\r\n   *\r\n   * @param path - A new in-app path string, or an URL-like object with\r\n   * `pathname` string property, and optional `search` and `hash` string\r\n   * properties.\r\n   */\r\n  static go(path: string | ResolveContext): boolean {\r\n    const { pathname, search, hash } = isString(path)\r\n      ? new URL(path, 'http://a') // some base to omit origin\r\n      : path;\r\n    return fireRouterEvent('go', { pathname, search, hash });\r\n  }\r\n}\r\n", "import { LitElement, html } from 'lit';\r\nimport { customElement } from 'lit/decorators.js';\r\n\r\nimport '../components/feature-card.ts';\r\n\r\n@customElement('page-home')\r\nexport class PageHome extends LitElement {\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <section class=\"p-6 space-y-6\">\r\n        <header>\r\n          <h1 class=\"text-2xl font-bold text-green-800 mb-2\">\r\n            \uD83C\uDF3F Selamat Datang di TaniVerse\r\n          </h1>\r\n          <p class=\"text-gray-700\">\r\n            TaniVerse adalah platform monitoring dan kontrol berbasis IoT untuk\r\n            sistem pertanian cerdas di berbagai sektor.\r\n          </p>\r\n        </header>\r\n\r\n        <div class=\"grid md:grid-cols-3 gap-4\">\r\n          <feature-card\r\n            title=\"Hidroponik\"\r\n            icon=\"\uD83C\uDF31\"\r\n            color=\"green\"\r\n            description=\"Pantau suhu, pH, dan nutrisi secara real-time untuk mendukung pertumbuhan tanaman optimal tanpa tanah.\"\r\n          ></feature-card>\r\n\r\n          <feature-card\r\n            title=\"Akuakultur\"\r\n            icon=\"\uD83D\uDC1F\"\r\n            color=\"blue\"\r\n            description=\"Monitor kualitas air, aerator, dan kondisi kolam untuk memastikan kesehatan ikan dan efisiensi budidaya.\"\r\n          ></feature-card>\r\n\r\n          <feature-card\r\n            title=\"Peternakan\"\r\n            icon=\"\uD83D\uDC14\"\r\n            color=\"yellow\"\r\n            description=\"Kendalikan suhu kandang, ventilasi, dan pencahayaan agar ternak tumbuh sehat dan produktif.\"\r\n          ></feature-card>\r\n        </div>\r\n\r\n        <footer class=\"text-sm text-gray-500 mt-6\">\r\n          Gunakan menu navigasi di atas untuk menjelajahi dashboard\r\n          masing-masing sektor.\r\n        </footer>\r\n      </section>\r\n    `;\r\n  }\r\n}\r\n", "import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\n\r\n@customElement('feature-card')\r\nexport class FeatureCard extends LitElement {\r\n  @property() title = '';\r\n  @property() icon = '';\r\n  @property() color = 'green';\r\n  @property() description = '';\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n\r\n  render() {\r\n    const bgMap: Record<string, string> = {\r\n      green: 'bg-green-50 border-green-200',\r\n      blue: 'bg-blue-50 border-blue-200',\r\n      yellow: 'bg-yellow-50 border-yellow-200',\r\n    };\r\n\r\n    const bgClass = bgMap[this.color] || bgMap.green;\r\n\r\n    return html`\r\n      <div class=\"rounded-xl p-4 border shadow ${bgClass}\">\r\n        <h3 class=\"text-lg font-semibold flex items-center gap-2 mb-2\">\r\n          <span>${this.icon}</span> ${this.title}\r\n        </h3>\r\n        <p class=\"text-sm text-gray-700\">${this.description}</p>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IASMA,GAKOC,GAsBPC,GAEAC,GASOC,GAgFAC,GAeAC,GA2BAC,GA8BAC;;;;AAjMb,IAGMR,IAASS;AAHf,IAQaR,IACXD,EAAOU,eAAAA,WACNV,EAAOW,YAA0BX,EAAOW,SAASC,iBAClD,wBAAwBC,SAASC,aACjC,aAAaC,cAAcD;AAZ7B,IA8BMZ,IAAoBc,OAAAA;AA9B1B,IAgCMb,IAAc,oBAAIc;AAAAA,IASXb,IATWa,MASXb;MAOX,YACEc,IACAC,IACAC,IAAAA;AAEA,YAVFC,KAAe,eAAA,MAUTD,OAAclB,EAChB,OAAUoB,MACR,mEAAA;AAGJD,aAAKH,UAAUA,IACfG,KAAKE,IAAWJ;MACjB;MAID,IAAA,aAAIK;AAGF,YAAIA,KAAaH,KAAKI;AACtB,cAAMN,KAAUE,KAAKE;AACrB,YAAItB,KAAAA,WAA+BuB,IAA0B;AAC3D,gBAAME,KAAAA,WAAYP,MAA4C,MAAnBA,GAAQQ;AAC/CD,UAAAA,OACFF,KAAarB,EAAYyB,IAAIT,EAAAA,IAAAA,WAE3BK,QACDH,KAAKI,IAAcD,KAAa,IAAIT,iBAAiBc,YACpDR,KAAKH,OAAAA,GAEHQ,MACFvB,EAAY2B,IAAIX,IAASK,EAAAA;QAG9B;AACD,eAAOA;MACR;MAED,WAAAO;AACE,eAAOV,KAAKH;MACb;IAAA;AAWH,IAsBab,IAAa2B,CAAAA,OACxB,IAAK5B,EACc,YAAA,OAAV4B,KAAqBA,KAAeA,KAAPC,IAAAA,QAEpC/B,CAAAA;AA1BJ,IAqCaI,IAAM,CACjBa,OACGe,OAAAA;AAEH,YAAMhB,KACe,MAAnBC,GAAQQ,SACJR,GAAQ,CAAA,IACRe,GAAOC,OACL,CAACC,IAAKC,IAAGC,OAAQF,MA7CAJ,CAAAA,OAAAA;AAEzB,YAAA,SAAKA,GAAkC,aACrC,QAAQA,GAAoBd;AACvB,YAAqB,YAAA,OAAVc,GAChB,QAAOA;AAEP,cAAUV,MACR,qEACKU,KADL,sFAAA;MAIH,GAiCgDK,EAAAA,IAAKlB,GAAQmB,KAAM,CAAA,GAC5DnB,GAAQ,CAAA,CAAA;AAEhB,aAAO,IAAKf,EACVc,IACAC,IACAjB,CAAAA;IACD;AApDH,IAgEaK,IAAc,CACzBgC,IACAC,OAAAA;AAEA,UAAIvC,EACDsC,CAAAA,GAA0BE,qBAAqBD,GAAOE,IAAKC,CAAAA,OAC1DA,cAAa5B,gBAAgB4B,KAAIA,GAAEnB,UAAAA;UAGrC,YAAWmB,MAAKH,IAAQ;AACtB,cAAMI,KAAQC,SAASC,cAAc,OAAA,GAE/BC,KAAS/C,EAAyB;AAAA,mBACpC+C,MACFH,GAAMI,aAAa,SAASD,EAAAA,GAE9BH,GAAMK,cAAeN,GAAgBzB,SACrCqB,GAAWW,YAAYN,EAAAA;MACxB;IACF;AAnFH,IA8FapC,IACXP,IAEK0C,CAAAA,OAAyBA,KACzBA,CAAAA,OACCA,cAAa5B,iBAbYoC,CAAAA,OAAAA;AAC/B,UAAIjC,KAAU;AACd,iBAAWkC,MAAQD,GAAME,SACvBnC,CAAAA,MAAWkC,GAAKlC;AAElB,aAAOb,EAAUa,EAAAA;IAAQ,GAQkCyB,EAAAA,IAAKA;;;;;IC/JhEW,IACAC,IACAC,GACAC,IACAC,IACAC,IAMIC,GAUAC,IAOAC,GAIAC,GAsGAC,GA6KOC,GAkDAC,GAGPC,GAqDgBC;;;;;;AA9ZtB,KAAA,EAAMd,IACJA,IAAEC,gBACFA,IAAcC,0BACdA,GAAwBC,qBACxBA,IAAmBC,uBACnBA,IAAqBC,gBACrBA,OACEU;AAPJ,IAYMT,IAASU;AAZf,IAsBMT,KAAgBD,EACnBC;AAvBH,IA6BMC,IAAiCD,KAClCA,GAAaU,cACd;AA/BJ,IAiCMR,IAEFH,EAAOY;AAnCX,IAuIMR,IAA4B,CAChCS,IACAC,OACMD;AA1IR,IAoTaR,IAA8C,EACzD,YAAYU,IAAgBC,IAAAA;AAC1B,cAAQA,IAAAA;QACN,KAAKC;AACHF,UAAAA,KAAQA,KAAQb,IAAiC;AACjD;QACF,KAAKO;QACL,KAAKS;AAGHH,UAAAA,KAAiB,QAATA,KAAgBA,KAAQI,KAAKC,UAAUL,EAAAA;MAAAA;AAGnD,aAAOA;IACR,GAED,cAAcA,IAAsBC,IAAAA;AAClC,UAAIK,KAAqBN;AACzB,cAAQC,IAAAA;QACN,KAAKC;AACHI,UAAAA,KAAsB,SAAVN;AACZ;QACF,KAAKO;AACHD,UAAAA,KAAsB,SAAVN,KAAiB,OAAOO,OAAOP,EAAAA;AAC3C;QACF,KAAKN;QACL,KAAKS;AAIH,cAAA;AAEEG,YAAAA,KAAYF,KAAKI,MAAMR,EAAAA;UACxB,SAAQS,IAAAA;AACPH,YAAAA,KAAY;UACb;MAAA;AAGL,aAAOA;IACR,EAAA;AA3VH,IAsWaf,IAAuB,CAACS,IAAgBU,OAAAA,CAClD/B,GAAGqB,IAAOU,EAAAA;AAvWb,IAyWMlB,IAAkD,EACtDmB,WAAAA,MACAV,MAAMW,QACNC,WAAWvB,GACXwB,SAAAA,OACAC,YAAAA,OACAC,YAAYzB,EAAAA;AAsBb0B,WAA8BC,aAA9BD,OAA8BC,WAAaD,OAAO,UAAA,IAcnDhC,EAAOkC,wBAAPlC,EAAOkC,sBAAwB,oBAAIC;AAAAA,IAWb3B,IAXa2B,cAoBzBC,YAAAA;MAqFR,OAAA,eAAsBC,IAAAA;AACpBC,aAAKC,KAAAA,IACJD,KAAKE,MAALF,KAAKE,IAAkB,CAAA,IAAIC,KAAKJ,EAAAA;MAClC;MAuGD,WAAA,qBAAWK;AAOT,eALAJ,KAAKK,SAAAA,GAMHL,KAAKM,QAA4B,CAAA,GAAIN,KAAKM,KAAyBC,KAAAA,CAAAA;MAEtE;MA6BD,OAAA,eACEC,IACAC,KAA+BxC,GAAAA;AAc/B,YAXIwC,GAAQC,UACTD,GAAsDrB,YAAAA,QAEzDY,KAAKC,KAAAA,GAGDD,KAAKW,UAAUC,eAAeJ,EAAAA,OAChCC,KAAUtC,OAAO0C,OAAOJ,EAAAA,GAChBK,UAAAA,OAEVd,KAAKe,kBAAkBC,IAAIR,IAAMC,EAAAA,GAAAA,CAC5BA,GAAQQ,YAAY;AACvB,gBAAMC,KAIFxB,OAAAA,GACEyB,KAAanB,KAAKoB,sBAAsBZ,IAAMU,IAAKT,EAAAA;AAAAA,qBACrDU,MACF9D,GAAe2C,KAAKW,WAAWH,IAAMW,EAAAA;QAExC;MACF;MA6BS,OAAA,sBACRX,IACAU,IACAT,IAAAA;AAEA,cAAA,EAAMY,KAACA,IAAGL,KAAEA,GAAAA,IAAO1D,EAAyB0C,KAAKW,WAAWH,EAAAA,KAAS,EACnE,MAAAa;AACE,iBAAOrB,KAAKkB,EAAAA;QACb,GACD,IAA2BI,IAAAA;AACxBtB,eAAqDkB,EAAAA,IAAOI;QAC9D,EAAA;AAmBH,eAAO,EACLD,KAAAA,IACA,IAA2B5C,IAAAA;AACzB,gBAAM8C,KAAWF,IAAKG,KAAKxB,IAAAA;AAC3BgB,UAAAA,IAAKQ,KAAKxB,MAAMvB,EAAAA,GAChBuB,KAAKyB,cAAcjB,IAAMe,IAAUd,EAAAA;QACpC,GACDiB,cAAAA,MACAC,YAAAA,KAAY;MAEf;MAgBD,OAAA,mBAA0BnB,IAAAA;AACxB,eAAOR,KAAKe,kBAAkBM,IAAIb,EAAAA,KAASvC;MAC5C;MAgBO,OAAA,OAAOgC;AACb,YACED,KAAKY,eAAe9C,EAA0B,mBAAA,CAAA,EAG9C;AAGF,cAAM8D,KAAYnE,GAAeuC,IAAAA;AACjC4B,QAAAA,GAAUvB,SAAAA,GAAAA,WAKNuB,GAAU1B,MACZF,KAAKE,IAAgB,CAAA,GAAI0B,GAAU1B,CAAAA,IAGrCF,KAAKe,oBAAoB,IAAIc,IAAID,GAAUb,iBAAAA;MAC5C;MAaS,OAAA,WAAOV;AACf,YAAIL,KAAKY,eAAe9C,EAA0B,WAAA,CAAA,EAChD;AAMF,YAJAkC,KAAK8B,YAAAA,MACL9B,KAAKC,KAAAA,GAGDD,KAAKY,eAAe9C,EAA0B,YAAA,CAAA,GAAsB;AACtE,gBAAMiE,KAAQ/B,KAAKgC,YACbC,KAAW,CAAA,GACZ1E,GAAoBwE,EAAAA,GAAAA,GACpBvE,GAAsBuE,EAAAA,CAAAA;AAE3B,qBAAWG,MAAKD,GACdjC,MAAKmC,eAAeD,IAAGH,GAAMG,EAAAA,CAAAA;QAEhC;AAGD,cAAMvC,KAAWK,KAAKN,OAAOC,QAAAA;AAC7B,YAAiB,SAAbA,IAAmB;AACrB,gBAAMqC,KAAapC,oBAAoByB,IAAI1B,EAAAA;AAC3C,cAAA,WAAIqC,GACF,YAAK,CAAOE,IAAGzB,EAAAA,KAAYuB,GACzBhC,MAAKe,kBAAkBC,IAAIkB,IAAGzB,EAAAA;QAGnC;AAGDT,aAAKM,OAA2B,oBAAIuB;AACpC,mBAAK,CAAOK,IAAGzB,EAAAA,KAAYT,KAAKe,mBAAmB;AACjD,gBAAMqB,KAAOpC,KAAKqC,KAA2BH,IAAGzB,EAAAA;AAAAA,qBAC5C2B,MACFpC,KAAKM,KAAyBU,IAAIoB,IAAMF,EAAAA;QAE3C;AAEDlC,aAAKsC,gBAAgBtC,KAAKuC,eAAevC,KAAKwC,MAAAA;MAkB/C;MA4BS,OAAA,eACRA,IAAAA;AAEA,cAAMF,KAAgB,CAAA;AACtB,YAAI1D,MAAM6D,QAAQD,EAAAA,GAAS;AAIzB,gBAAMxB,KAAM,IAAI0B,IAAKF,GAA0BG,KAAKC,IAAAA,CAAAA,EAAUC,QAAAA,CAAAA;AAE9D,qBAAWC,MAAK9B,GACdsB,CAAAA,GAAcS,QAAQC,EAAmBF,EAAAA,CAAAA;QAE5C,MAAA,YAAUN,MACTF,GAAcnC,KAAK6C,EAAmBR,EAAAA,CAAAA;AAExC,eAAOF;MACR;MAaO,OAAA,KACN9B,IACAC,IAAAA;AAEA,cAAMrB,KAAYqB,GAAQrB;AAC1B,eAAA,UAAOA,KAAAA,SAEkB,YAAA,OAAdA,KACLA,KACgB,YAAA,OAAToB,KACLA,GAAKyC,YAAAA,IAAAA;MAEd;MAiDD,cAAAC;AACEC,cAAAA,GA9WMnD,KAAoBoD,OAAAA,QAuU5BpD,KAAeqD,kBAAAA,OAOfrD,KAAUsD,aAAAA,OAwBFtD,KAAoBuD,OAAuB,MASjDvD,KAAKwD,KAAAA;MACN;MAMO,OAAAA;AACNxD,aAAKyD,OAAkB,IAAIC,QACxBC,CAAAA,OAAS3D,KAAK4D,iBAAiBD,EAAAA,GAElC3D,KAAK6D,OAAsB,oBAAIhC,OAG/B7B,KAAK8D,KAAAA,GAGL9D,KAAKyB,cAAAA,GACJzB,KAAKkD,YAAuChD,GAAe6D,QAASC,CAAAA,OACnEA,GAAEhE,IAAAA,CAAAA;MAEL;MAWD,cAAciE,IAAAA;AAAAA,SACXjE,KAAKkE,SAALlE,KAAKkE,OAAkB,oBAAIxB,QAAOyB,IAAIF,EAAAA,GAAAA,WAKnCjE,KAAKoE,cAA4BpE,KAAKqE,eACxCJ,GAAWK,gBAAAA;MAEd;MAMD,iBAAiBL,IAAAA;AACfjE,aAAKkE,MAAeK,OAAON,EAAAA;MAC5B;MAQO,OAAAH;AACN,cAAMU,KAAqB,oBAAI3C,OACzBd,KAAqBf,KAAKkD,YAC7BnC;AACH,mBAAWmB,MAAKnB,GAAkBR,KAAAA,EAC5BP,MAAKY,eAAesB,EAAAA,MACtBsC,GAAmBxD,IAAIkB,IAAGlC,KAAKkC,EAAAA,CAAAA,GAAAA,OACxBlC,KAAKkC,EAAAA;AAGZsC,QAAAA,GAAmBC,OAAO,MAC5BzE,KAAKoD,OAAuBoB;MAE/B;MAWS,mBAAAE;AACR,cAAMN,KACJpE,KAAK2E,cACL3E,KAAK4E,aACF5E,KAAKkD,YAAuC2B,iBAAAA;AAMjD,eAJAC,EACEV,IACCpE,KAAKkD,YAAuCZ,aAAAA,GAExC8B;MACR;MAOD,oBAAAW;AAEG/E,aAA4CoE,eAA5CpE,KAA4CoE,aAC3CpE,KAAK0E,iBAAAA,IACP1E,KAAK4D,eAAAA,IAAe,GACpB5D,KAAKkE,MAAeH,QAASiB,CAAAA,OAAMA,GAAEV,gBAAAA,CAAAA;MACtC;MAQS,eAAeW,IAAAA;MAA6B;MAQtD,uBAAAC;AACElF,aAAKkE,MAAeH,QAASiB,CAAAA,OAAMA,GAAEG,mBAAAA,CAAAA;MACtC;MAcD,yBACE3E,IACA4E,IACA3G,IAAAA;AAEAuB,aAAKqF,KAAsB7E,IAAM/B,EAAAA;MAClC;MAEO,KAAsB+B,IAAmB/B,IAAAA;AAC/C,cAGMgC,KAFJT,KAAKkD,YACLnC,kBAC6BM,IAAIb,EAAAA,GAC7B4B,KACJpC,KAAKkD,YACLb,KAA2B7B,IAAMC,EAAAA;AACnC,YAAA,WAAI2B,MAAAA,SAAsB3B,GAAQlB,SAAkB;AAClD,gBAKM+F,MAAAA,WAJH7E,GAAQnB,WAAyCiG,cAE7C9E,GAAQnB,YACTvB,GACsBwH,YAAa9G,IAAOgC,GAAQ/B,IAAAA;AAwBxDsB,eAAKuD,OAAuB/C,IACX,QAAb8E,KACFtF,KAAKwF,gBAAgBpD,EAAAA,IAErBpC,KAAKyF,aAAarD,IAAMkD,EAAAA,GAG1BtF,KAAKuD,OAAuB;QAC7B;MACF;MAGD,KAAsB/C,IAAc/B,IAAAA;AAClC,cAAMiH,KAAO1F,KAAKkD,aAGZyC,KAAYD,GAAKpF,KAA0Ce,IAAIb,EAAAA;AAGrE,YAAA,WAAImF,MAA0B3F,KAAKuD,SAAyBoC,IAAU;AACpE,gBAAMlF,KAAUiF,GAAKE,mBAAmBD,EAAAA,GAClCrG,KACyB,cAAA,OAAtBmB,GAAQnB,YACX,EAACuG,eAAepF,GAAQnB,UAAAA,IAAAA,WACxBmB,GAAQnB,WAAWuG,gBACjBpF,GAAQnB,YACRvB;AAERiC,eAAKuD,OAAuBoC;AAC5B,gBAAMG,KAAiBxG,GAAUuG,cAAepH,IAAOgC,GAAQ/B,IAAAA;AAC/DsB,eAAK2F,EAAAA,IACHG,MACA9F,KAAK+F,MAAiB1E,IAAIsE,EAAAA,KAEzBG,IAEH9F,KAAKuD,OAAuB;QAC7B;MACF;MAgBD,cACE/C,IACAe,IACAd,IAAAA;AAGA,YAAA,WAAID,IAAoB;AAOtB,gBAAMkF,KAAO1F,KAAKkD,aACZ8C,KAAWhG,KAAKQ,EAAAA;AActB,cAbAC,YAAYiF,GAAKE,mBAAmBpF,EAAAA,IAAAA,GAEjCC,GAAQhB,cAAczB,GAAUgI,IAAUzE,EAAAA,KAO1Cd,GAAQjB,cACPiB,GAAQlB,WACRyG,OAAahG,KAAK+F,MAAiB1E,IAAIb,EAAAA,KAAAA,CACtCR,KAAKiG,aAAaP,GAAKrD,KAA2B7B,IAAMC,EAAAA,CAAAA,GAK3D;AAHAT,eAAKkG,EAAiB1F,IAAMe,IAAUd,EAAAA;QAKzC;AAAA,kBACGT,KAAKqD,oBACPrD,KAAKyD,OAAkBzD,KAAKmG,KAAAA;MAE/B;MAKD,EACE3F,IACAe,IAAAA,EACA/B,YAACA,IAAUD,SAAEA,IAAOuB,SAAEA,GAAAA,GACtBsF,IAAAA;AAII5G,QAAAA,MAAAA,EAAgBQ,KAAK+F,SAAL/F,KAAK+F,OAAoB,oBAAIlE,QAAOwE,IAAI7F,EAAAA,MAC1DR,KAAK+F,KAAgB/E,IACnBR,IACA4F,MAAmB7E,MAAYvB,KAAKQ,EAAAA,CAAAA,GAAAA,SAIlCM,MAAAA,WAAoBsF,QAMrBpG,KAAK6D,KAAoBwC,IAAI7F,EAAAA,MAG3BR,KAAKsD,cAAe9D,OACvB+B,KAAAA,SAEFvB,KAAK6D,KAAoB7C,IAAIR,IAAMe,EAAAA,IAAAA,SAMjChC,MAAoBS,KAAKuD,SAAyB/C,OACnDR,KAAKsG,SAALtG,KAAKsG,OAA2B,oBAAI5D,QAAoByB,IAAI3D,EAAAA;MAEhE;MAKO,MAAA,OAAM2F;AACZnG,aAAKqD,kBAAAA;AACL,YAAA;AAAA,gBAGQrD,KAAKyD;QACZ,SAAQvE,IAAAA;AAKPwE,kBAAQ6C,OAAOrH,EAAAA;QAChB;AACD,cAAMsH,KAASxG,KAAKyG,eAAAA;AAOpB,eAHc,QAAVD,MAAAA,MACIA,IAAAA,CAEAxG,KAAKqD;MACd;MAmBS,iBAAAoD;AAiBR,eAhBezG,KAAK0G,cAAAA;MAiBrB;MAYS,gBAAAA;AAIR,YAAA,CAAK1G,KAAKqD,gBACR;AAGF,YAAA,CAAKrD,KAAKsD,YAAY;AA2BpB,cAxBCtD,KAA4CoE,eAA5CpE,KAA4CoE,aAC3CpE,KAAK0E,iBAAAA,IAuBH1E,KAAKoD,MAAsB;AAG7B,uBAAK,CAAOlB,IAAGzD,EAAAA,KAAUuB,KAAKoD,KAC5BpD,MAAKkC,EAAAA,IAAmBzD;AAE1BuB,iBAAKoD,OAAAA;UACN;AAUD,gBAAMrC,KAAqBf,KAAKkD,YAC7BnC;AACH,cAAIA,GAAkB0D,OAAO,EAC3B,YAAK,CAAOvC,IAAGzB,EAAAA,KAAYM,IAAmB;AAC5C,kBAAA,EAAMD,SAACA,GAAAA,IAAWL,IACZhC,KAAQuB,KAAKkC,EAAAA;AAAAA,qBAEjBpB,MACCd,KAAK6D,KAAoBwC,IAAInE,EAAAA,KAAAA,WAC9BzD,MAEAuB,KAAKkG,EAAiBhE,IAAAA,QAAczB,IAAShC,EAAAA;UAEhD;QAEJ;AACD,YAAIkI,KAAAA;AACJ,cAAMC,KAAoB5G,KAAK6D;AAC/B,YAAA;AACE8C,UAAAA,KAAe3G,KAAK2G,aAAaC,EAAAA,GAC7BD,MACF3G,KAAK6G,WAAWD,EAAAA,GAChB5G,KAAKkE,MAAeH,QAASiB,CAAAA,OAAMA,GAAE8B,aAAAA,CAAAA,GACrC9G,KAAK+G,OAAOH,EAAAA,KAEZ5G,KAAKgH,KAAAA;QAER,SAAQ9H,IAAAA;AAMP,gBAHAyH,KAAAA,OAEA3G,KAAKgH,KAAAA,GACC9H;QACP;AAEGyH,QAAAA,MACF3G,KAAKiH,KAAYL,EAAAA;MAEpB;MAuBS,WAAWM,IAAAA;MAA4C;MAIjE,KAAYN,IAAAA;AACV5G,aAAKkE,MAAeH,QAASiB,CAAAA,OAAMA,GAAEmC,cAAAA,CAAAA,GAChCnH,KAAKsD,eACRtD,KAAKsD,aAAAA,MACLtD,KAAKoH,aAAaR,EAAAA,IAEpB5G,KAAKqH,QAAQT,EAAAA;MAiBd;MAEO,OAAAI;AACNhH,aAAK6D,OAAsB,oBAAIhC,OAC/B7B,KAAKqD,kBAAAA;MACN;MAkBD,IAAA,iBAAIiE;AACF,eAAOtH,KAAKuH,kBAAAA;MACb;MAyBS,oBAAAA;AACR,eAAOvH,KAAKyD;MACb;MAUS,aAAayD,IAAAA;AACrB,eAAA;MACD;MAWS,OAAOA,IAAAA;AAIflH,aAAKsG,SAALtG,KAAKsG,OAA2BtG,KAAKsG,KAAuBvC,QAAS7B,CAAAA,OACnElC,KAAKwH,KAAsBtF,IAAGlC,KAAKkC,EAAAA,CAAAA,CAAAA,IAErClC,KAAKgH,KAAAA;MACN;MAYS,QAAQE,IAAAA;MAAsC;MAkB9C,aAAaA,IAAAA;MAAsC;IAAA;AAniCtDhJ,MAAaoE,gBAA6B,CAAA,GAiT1CpE,EAAA2G,oBAAoC,EAAC4C,MAAM,OAAA,GAuvBnDvJ,EACCJ,EAA0B,mBAAA,CAAA,IACxB,oBAAI+D,OACP3D,EACCJ,EAA0B,WAAA,CAAA,IACxB,oBAAI+D,OAGRhE,IAAkB,EAACK,iBAAAA,EAAAA,CAAAA,IAuClBR,EAAOgK,4BAAPhK,EAAOgK,0BAA4B,CAAA,IAAIvH,KAAK,OAAA;;;;;AC39B7C,SAASwH,EACPC,IACAC,IAAAA;AAOA,MAAA,CAAKC,GAAQF,EAAAA,KAAAA,CAASA,GAAIG,eAAe,KAAA,EAiBvC,OAAUC,MAhBI,gCAAA;AAkBhB,SAAA,WAAOC,KACHA,GAAOC,WAAWL,EAAAA,IACjBA;AACP;AAqWA,SAASM,GACPC,IACAC,IACAC,KAA0BF,IAC1BG,IAAAA;AAIA,MAAIF,OAAUG,EACZ,QAAOH;AAET,MAAII,KAAAA,WACFF,KACKD,GAAyBI,OAAeH,EAAAA,IACxCD,GAA+CK;AACtD,QAAMC,KAA2BC,GAAYR,EAAAA,IAAAA,SAGxCA,GAA2C;AAyBhD,SAxBII,IAAkBK,gBAAgBF,OAEpCH,IAAuD,OAAA,KAAI,GAAA,WACvDG,KACFH,KAAAA,UAEAA,KAAmB,IAAIG,GAAyBR,EAAAA,GAChDK,GAAiBM,KAAaX,IAAME,IAAQC,EAAAA,IAAAA,WAE1CA,MACAD,GAAyBI,SAAzBJ,GAAyBI,OAAiB,CAAA,IAAIH,EAAAA,IAC9CE,KAEDH,GAAiCK,OAAcF,KAAAA,WAGhDA,OACFJ,KAAQF,GACNC,IACAK,GAAiBO,KAAUZ,IAAOC,GAA0BY,MAAAA,GAC5DR,IACAF,EAAAA,IAGGF;AACT;IA3oCMa,IA4OAC,IAUAlB,IAgFAmB,IAMAC,IAGAC,IAIAC,IAEAC,IAUAC,IAIAZ,IAEAf,IACA4B,IAKAC,IAkBAC,IAKAC,GAIAC,GAwBAC,GASAC,IACAC,GAOAC,GAyGAC,IA+COC,GA0BAC,IA0BAC,GAMA9B,GAqBA+B,GASPC,GAqCAC,GAoEAC,GA+JAC,GA2OAC,GAkJAC,GAodAC,GAkKAC,GA6BAC,GAmCAC,GA0FAC,GAiFAC,GA2COC;;;;AAhrEb,IAAMlC,KAASmC;AAAf,IA4OMlC,KAAgBD,GAAyCC;AA5O/D,IAsPMlB,KAASkB,KACXA,GAAamC,aAAa,YAAY,EACpCpD,YAAaqD,CAAAA,OAAMA,GAAAA,CAAAA,IAAAA;AAxPzB,IAsUMnC,KAAuB;AAtU7B,IA4UMC,KAAS,OAAOmC,KAAKC,OAAAA,EAASC,QAAQ,CAAA,EAAGC,MAAM,CAAA,CAAA;AA5UrD,IA+UMrC,KAAc,MAAMD;AA/U1B,IAmVME,KAAa,IAAID,EAAAA;AAnVvB,IAqVME,KAOAoC;AA5VN,IA+VMnC,KAAe,MAAMD,GAAEqC,cAAc,EAAA;AA/V3C,IAmWMhD,KAAeR,CAAAA,OACT,SAAVA,MAAmC,YAAA,OAATA,MAAqC,cAAA,OAATA;AApWxD,IAqWMP,KAAUgE,MAAMhE;AArWtB,IAsWM4B,KAAcrB,CAAAA,OAClBP,GAAQO,EAAAA,KAEqC,cAAA,OAArCA,KAAgB0D,OAAOC,QAAAA;AAzWjC,IA2WMrC,KAAa;AA3WnB,IA6XMC,KAAe;AA7XrB,IAkYMC,IAAkB;AAlYxB,IAsYMC,IAAmB;AAtYzB,IA8ZMC,IAAkBkC,OACtB,KAAKtC,EAAAA,qBAAgCA,EAAAA,KAAeA,EAAAA;2BACpD,GAAA;AAhaF,IAuaMK,KAA0B;AAvahC,IAwaMC,IAA0B;AAxahC,IA+aMC,IAAiB;AA/avB,IAwhBMC,KACmB+B,CAAAA,OACvB,CAACC,OAAkClD,QAwB1B,EAELmD,YAAgBF,IAChBC,SAAAA,IACAlD,QAAAA,GAAAA;AAtjBN,IAukBamB,IAAOD,GArJA,CAAA;AAlbpB,IAimBaE,KAAMF,GA9KA,CAAA;AAnbnB,IA2nBaG,IAASH,GAvMA,CAAA;AApbtB,IAioBa3B,IAAWuD,OAAOM,IAAI,cAAA;AAjoBnC,IAspBa9B,IAAUwB,OAAOM,IAAI,aAAA;AAtpBlC,IA+pBM7B,IAAgB,oBAAI8B;AA/pB1B,IAosBM7B,IAASjB,GAAE+C,iBACf/C,IACA,GAAA;AAkEF,IAAMkB,IAAkB,CACtByB,IACAD,OAAAA;AAQA,YAAMM,KAAIL,GAAQM,SAAS,GAIrBC,KAA2B,CAAA;AACjC,UAMIC,IANAvC,KApWa,MAqWf8B,KAAsB,UApWJ,MAoWcA,KAAyB,WAAW,IASlEU,KAAQhD;AAEZ,eAASiD,KAAI,GAAGA,KAAIL,IAAGK,MAAK;AAC1B,cAAMtB,KAAIY,GAAQU,EAAAA;AAMlB,YACIC,IAEAC,IAHAC,KAAAA,IAEAC,KAAY;AAKhB,eAAOA,KAAY1B,GAAEkB,WAEnBG,GAAMK,YAAYA,IAClBF,KAAQH,GAAMM,KAAK3B,EAAAA,GACL,SAAVwB,MAGJE,CAAAA,KAAYL,GAAMK,WACdL,OAAUhD,KACiB,UAAzBmD,GA5bU,CAAA,IA6bZH,KAAQ/C,IAAAA,WACCkD,GA9bG,CAAA,IAgcZH,KAAQ9C,IAAAA,WACCiD,GAhcF,CAAA,KAicH7C,EAAeiD,KAAKJ,GAjcjB,CAAA,CAAA,MAocLJ,KAAsBV,OAAO,OAAKc,GApc7B,CAAA,GAocgD,GAAA,IAEvDH,KAAQ7C,KAAAA,WACCgD,GAtcM,CAAA,MA6cfH,KAAQ7C,KAED6C,OAAU7C,IACS,QAAxBgD,GA9aS,CAAA,KAibXH,KAAQD,MAAmB/C,IAG3BoD,KAAAA,MAAoB,WACXD,GApbI,CAAA,IAsbbC,KAAAA,MAEAA,KAAmBJ,GAAMK,YAAYF,GAvbrB,CAAA,EAub8CN,QAC9DK,KAAWC,GAzbE,CAAA,GA0bbH,KAAAA,WACEG,GAzbO,CAAA,IA0bHhD,IACsB,QAAtBgD,GA3bG,CAAA,IA4bD9C,IACAD,MAGV4C,OAAU3C,KACV2C,OAAU5C,KAEV4C,KAAQ7C,IACC6C,OAAU/C,KAAmB+C,OAAU9C,IAChD8C,KAAQhD,MAIRgD,KAAQ7C,GACR4C,KAAAA;AA8BJ,cAAMS,KACJR,OAAU7C,KAAeoC,GAAQU,KAAI,CAAA,EAAGQ,WAAW,IAAA,IAAQ,MAAM;AACnEjD,QAAAA,MACEwC,OAAUhD,KACN2B,KAAIhC,KACJyD,MAAoB,KACjBN,GAAUY,KAAKR,EAAAA,GAChBvB,GAAEI,MAAM,GAAGqB,EAAAA,IACT5D,KACAmC,GAAEI,MAAMqB,EAAAA,IACV3D,KACA+D,MACA7B,KAAIlC,MAAAA,OAAU2D,KAA0BH,KAAIO;MACrD;AAQD,aAAO,CAACzF,EAAwBwE,IAL9B/B,MACC+B,GAAQK,EAAAA,KAAM,UA3eA,MA4edN,KAAsB,WA3eL,MA2egBA,KAAyB,YAAY,GAAA,GAGnBQ,EAAAA;IAAU;AAKlE,IAAM/B,IAAN,MAAMA,GAAAA;MAMJ,YAAA7B,EAEEqD,SAACA,IAASC,YAAgBF,GAAAA,GAC1BqB,IAAAA;AAEA,YAAIC;AAPNC,aAAKC,QAAwB,CAAA;AAQ3B,YAAIC,KAAY,GACZC,KAAgB;AACpB,cAAMC,KAAY1B,GAAQM,SAAS,GAC7BiB,KAAQD,KAAKC,OAAAA,CAGZtD,IAAMsC,EAAAA,IAAahC,EAAgByB,IAASD,EAAAA;AAKnD,YAJAuB,KAAKK,KAAKnD,GAASoD,cAAc3D,IAAMmD,EAAAA,GACvC9C,EAAOuD,cAAcP,KAAKK,GAAGG,SAxgBd,MA2gBX/B,MA1gBc,MA0gBSA,IAAwB;AACjD,gBAAMgC,KAAUT,KAAKK,GAAGG,QAAQE;AAChCD,UAAAA,GAAQE,YAAAA,GAAeF,GAAQG,UAAAA;QAChC;AAGD,eAAsC,UAA9Bb,KAAO/C,EAAO6D,SAAAA,MAAwBZ,GAAMjB,SAASoB,MAAW;AACtE,cAAsB,MAAlBL,GAAKe,UAAgB;AAuBvB,gBAAKf,GAAiBgB,cAAAA,EACpB,YAAWC,MAASjB,GAAiBkB,kBAAAA,EACnC,KAAID,GAAKE,SAASvF,EAAAA,GAAuB;AACvC,oBAAMwF,KAAWlC,GAAUkB,IAAAA,GAErBiB,KADSrB,GAAiBsB,aAAaL,EAAAA,EACvBM,MAAM1F,EAAAA,GACtB2F,KAAI,eAAe9B,KAAK0B,EAAAA;AAC9BlB,cAAAA,GAAMJ,KAAK,EACTpB,MA1iBO,GA2iBP+C,OAAOtB,IACPc,MAAMO,GAAE,CAAA,GACR7C,SAAS0C,IACTK,MACW,QAATF,GAAE,CAAA,IACEjE,IACS,QAATiE,GAAE,CAAA,IACAhE,IACS,QAATgE,GAAE,CAAA,IACA/D,IACAH,EAAAA,CAAAA,GAEX0C,GAAiB2B,gBAAgBV,EAAAA;YACnC,MAAUA,CAAAA,GAAKpB,WAAWhE,EAAAA,MACzBqE,GAAMJ,KAAK,EACTpB,MArjBK,GAsjBL+C,OAAOtB,GAAAA,CAAAA,GAERH,GAAiB2B,gBAAgBV,EAAAA;AAMxC,gBAAIvE,EAAeiD,KAAMK,GAAiB4B,OAAAA,GAAU;AAIlD,oBAAMjD,KAAWqB,GAAiB6B,YAAaN,MAAM1F,EAAAA,GAC/C4D,KAAYd,GAAQM,SAAS;AACnC,kBAAIQ,KAAY,GAAG;AAChBO,gBAAAA,GAAiB6B,cAAclG,KAC3BA,GAAamG,cACd;AAGJ,yBAASzC,KAAI,GAAGA,KAAII,IAAWJ,KAC5BW,CAAAA,GAAiB+B,OAAOpD,GAAQU,EAAAA,GAAIpD,GAAAA,CAAAA,GAErCgB,EAAO6D,SAAAA,GACPZ,GAAMJ,KAAK,EAACpB,MAllBP,GAklByB+C,OAAAA,EAAStB,GAAAA,CAAAA;AAKxCH,gBAAAA,GAAiB+B,OAAOpD,GAAQc,EAAAA,GAAYxD,GAAAA,CAAAA;cAC9C;YACF;UACF,WAA4B,MAAlB+D,GAAKe,SAEd,KADcf,GAAiBgC,SAClBlG,GACXoE,CAAAA,GAAMJ,KAAK,EAACpB,MA7lBH,GA6lBqB+C,OAAOtB,GAAAA,CAAAA;eAChC;AACL,gBAAId,KAAAA;AACJ,mBAAA,QAAQA,KAAKW,GAAiBgC,KAAKC,QAAQpG,IAAQwD,KAAI,CAAA,KAGrDa,CAAAA,GAAMJ,KAAK,EAACpB,MA9lBH,GA8lBuB+C,OAAOtB,GAAAA,CAAAA,GAEvCd,MAAKxD,GAAOoD,SAAS;UAExB;AAEHkB,UAAAA;QACD;MAkCF;MAID,OAAA,cAAqBvD,IAAmBsF,IAAAA;AACtC,cAAM5B,KAAKtE,GAAEuE,cAAc,UAAA;AAE3B,eADAD,GAAG6B,YAAYvF,IACR0D;MACR;IAAA;AAmEH,IAAMlD,IAAN,MAAMA;MASJ,YAAYgF,IAAoBtH,IAAAA;AAPhCmF,aAAOoC,OAA4B,CAAA,GAKnCpC,KAAwBqC,OAAAA,QAGtBrC,KAAKsC,OAAaH,IAClBnC,KAAKuC,OAAW1H;MACjB;MAGD,IAAA,aAAI2H;AACF,eAAOxC,KAAKuC,KAASC;MACtB;MAGD,IAAA,OAAIC;AACF,eAAOzC,KAAKuC,KAASE;MACtB;MAID,EAAO3C,IAAAA;AACL,cAAA,EACEO,IAAAA,EAAIG,SAACA,GAAAA,GACLP,OAAOA,GAAAA,IACLD,KAAKsC,MACHI,MAAY5C,IAAS6C,iBAAiB5G,IAAG6G,WAAWpC,IAAAA,IAAS;AACnExD,UAAOuD,cAAcmC;AAErB,YAAI3C,KAAO/C,EAAO6D,SAAAA,GACdX,KAAY,GACZ2C,KAAY,GACZC,KAAe7C,GAAM,CAAA;AAEzB,eAAA,WAAO6C,MAA4B;AACjC,cAAI5C,OAAc4C,GAAatB,OAAO;AACpC,gBAAI7G;AAhwBO,kBAiwBPmI,GAAarE,OACf9D,KAAO,IAAIyC,EACT2C,IACAA,GAAKgD,aACL/C,MACAF,EAAAA,IAvwBW,MAywBJgD,GAAarE,OACtB9D,KAAO,IAAImI,GAAarB,KACtB1B,IACA+C,GAAa9B,MACb8B,GAAapE,SACbsB,MACAF,EAAAA,IA1wBS,MA4wBFgD,GAAarE,SACtB9D,KAAO,IAAI8C,EAAYsC,IAAqBC,MAAMF,EAAAA,IAEpDE,KAAKoC,KAAQvC,KAAKlF,EAAAA,GAClBmI,KAAe7C,GAAAA,EAAQ4C,EAAAA;UACxB;AACG3C,UAAAA,OAAc4C,IAActB,UAC9BzB,KAAO/C,EAAO6D,SAAAA,GACdX;QAEH;AAKD,eADAlD,EAAOuD,cAAcxE,IACd2G;MACR;MAED,EAAQlH,IAAAA;AACN,YAAI4D,KAAI;AACR,mBAAWzE,MAAQqF,KAAKoC,KAAAA,YAClBzH,OAAAA,WAUGA,GAAuB+D,WACzB/D,GAAuBqI,KAAWxH,IAAQb,IAAuByE,EAAAA,GAIlEA,MAAMzE,GAAuB+D,QAASM,SAAS,KAE/CrE,GAAKqI,KAAWxH,GAAO4D,EAAAA,CAAAA,IAG3BA;MAEH;IAAA;AA8CH,IAAMhC,IAAN,MAAMA,GAAAA;MAwBJ,IAAA,OAAIqF;AAIF,eAAOzC,KAAKuC,MAAUE,QAAiBzC,KAAKiD;MAC7C;MAeD,YACEC,IACAC,IACAtI,IACAiF,IAAAA;AA/COE,aAAIvB,OA12BI,GA42BjBuB,KAAgBoD,OAAYtG,GA+B5BkD,KAAwBqC,OAAAA,QAgBtBrC,KAAKqD,OAAcH,IACnBlD,KAAKsD,OAAYH,IACjBnD,KAAKuC,OAAW1H,IAChBmF,KAAKF,UAAUA,IAIfE,KAAKiD,OAAgBnD,IAASyD,eAAAA;MAK/B;MAoBD,IAAA,aAAIf;AACF,YAAIA,KAAwBxC,KAAKqD,KAAab;AAC9C,cAAM3H,KAASmF,KAAKuC;AAUpB,eAAA,WARE1H,MACyB,OAAzB2H,IAAY1B,aAKZ0B,KAAc3H,GAAwC2H,aAEjDA;MACR;MAMD,IAAA,YAAIU;AACF,eAAOlD,KAAKqD;MACb;MAMD,IAAA,UAAIF;AACF,eAAOnD,KAAKsD;MACb;MAED,KAAW1I,IAAgB4I,KAAmCxD,MAAAA;AAM5DpF,QAAAA,KAAQF,GAAiBsF,MAAMpF,IAAO4I,EAAAA,GAClCpI,GAAYR,EAAAA,IAIVA,OAAUkC,KAAoB,QAATlC,MAA2B,OAAVA,MACpCoF,KAAKoD,SAAqBtG,KAS5BkD,KAAKyD,KAAAA,GAEPzD,KAAKoD,OAAmBtG,KACflC,OAAUoF,KAAKoD,QAAoBxI,OAAUG,KACtDiF,KAAK0D,EAAY9I,EAAAA,IAAAA,WAGTA,GAAqC,aAC/CoF,KAAK2D,EAAsB/I,EAAAA,IAAAA,WACjBA,GAAekG,WAgBzBd,KAAK4D,EAAYhJ,EAAAA,IACRqB,GAAWrB,EAAAA,IACpBoF,KAAK6D,EAAgBjJ,EAAAA,IAGrBoF,KAAK0D,EAAY9I,EAAAA;MAEpB;MAEO,EAAwBmF,IAAAA;AAC9B,eAAiBC,KAAKqD,KAAab,WAAasB,aAC9C/D,IACAC,KAAKsD,IAAAA;MAER;MAEO,EAAY1I,IAAAA;AACdoF,aAAKoD,SAAqBxI,OAC5BoF,KAAKyD,KAAAA,GAoCLzD,KAAKoD,OAAmBpD,KAAK+D,EAAQnJ,EAAAA;MAExC;MAEO,EAAYA,IAAAA;AAKhBoF,aAAKoD,SAAqBtG,KAC1B1B,GAAY4E,KAAKoD,IAAAA,IAECpD,KAAKqD,KAAaN,YAcrBhB,OAAOnH,KAsBpBoF,KAAK4D,EAAY7H,GAAEiI,eAAepJ,EAAAA,CAAAA,GAUtCoF,KAAKoD,OAAmBxI;MACzB;MAEO,EACNqJ,IAAAA;AAGA,cAAA,EAAMzI,QAACA,IAAQmD,YAAgBF,GAAAA,IAAQwF,IAKjC9B,KACY,YAAA,OAAT1D,KACHuB,KAAKkE,KAAcD,EAAAA,KAAAA,WAClBxF,GAAK4B,OACH5B,GAAK4B,KAAKnD,EAASoD,cAClBpG,EAAwBuE,GAAK0F,GAAG1F,GAAK0F,EAAE,CAAA,CAAA,GACvCnE,KAAKF,OAAAA,IAETrB;AAEN,YAAKuB,KAAKoD,MAAuCd,SAAeH,GAU7DnC,MAAKoD,KAAsCgB,EAAQ5I,EAAAA;aAC/C;AACL,gBAAM6I,KAAW,IAAIlH,EAAiBgF,IAAsBnC,IAAAA,GACtD0C,KAAW2B,GAASC,EAAOtE,KAAKF,OAAAA;AAWtCuE,UAAAA,GAASD,EAAQ5I,EAAAA,GAWjBwE,KAAK4D,EAAYlB,EAAAA,GACjB1C,KAAKoD,OAAmBiB;QACzB;MACF;MAID,KAAcJ,IAAAA;AACZ,YAAI9B,KAAWpF,EAAcwH,IAAIN,GAAOvF,OAAAA;AAIxC,eAAA,WAHIyD,MACFpF,EAAcyH,IAAIP,GAAOvF,SAAUyD,KAAW,IAAIjF,EAAS+G,EAAAA,CAAAA,GAEtD9B;MACR;MAEO,EAAgBvH,IAAAA;AAWjBP,QAAAA,GAAQ2F,KAAKoD,IAAAA,MAChBpD,KAAKoD,OAAmB,CAAA,GACxBpD,KAAKyD,KAAAA;AAKP,cAAMgB,KAAYzE,KAAKoD;AACvB,YACIsB,IADA7B,KAAY;AAGhB,mBAAW8B,MAAQ/J,GACbiI,CAAAA,OAAc4B,GAAUzF,SAK1ByF,GAAU5E,KACP6E,KAAW,IAAItH,GACd4C,KAAK+D,EAAQ/H,GAAAA,CAAAA,GACbgE,KAAK+D,EAAQ/H,GAAAA,CAAAA,GACbgE,MACAA,KAAKF,OAAAA,CAAAA,IAKT4E,KAAWD,GAAU5B,EAAAA,GAEvB6B,GAAS1B,KAAW2B,EAAAA,GACpB9B;AAGEA,QAAAA,KAAY4B,GAAUzF,WAExBgB,KAAKyD,KACHiB,MAAiBA,GAASpB,KAAYP,aACtCF,EAAAA,GAGF4B,GAAUzF,SAAS6D;MAEtB;MAaD,KACE+B,KAA+B5E,KAAKqD,KAAaN,aACjD8B,IAAAA;AAGA,aADA7E,KAAK8E,OAAAA,OAA4B,MAAaD,EAAAA,GACvCD,OAAU5E,KAAKsD,QAAW;AAI/B,gBAAMyB,KAASH,GAAQ7B;AAClB6B,UAAAA,GAAQI,OAAAA,GACbJ,KAAQG;QACT;MACF;MASD,aAAaxB,IAAAA;AAAAA,mBACPvD,KAAKuC,SACPvC,KAAKiD,OAAgBM,IACrBvD,KAAK8E,OAA4BvB,EAAAA;MAOpC;IAAA;AA2BH,IAAMlG,IAAN,MAAMA;MA2BJ,IAAA,UAAIsE;AACF,eAAO3B,KAAKiF,QAAQtD;MACrB;MAGD,IAAA,OAAIc;AACF,eAAOzC,KAAKuC,KAASE;MACtB;MAED,YACEwC,IACAjE,IACAtC,IACA7D,IACAiF,IAAAA;AAxCOE,aAAIvB,OA/zCQ,GA+0CrBuB,KAAgBoD,OAA6BtG,GAM7CkD,KAAwBqC,OAAAA,QAoBtBrC,KAAKiF,UAAUA,IACfjF,KAAKgB,OAAOA,IACZhB,KAAKuC,OAAW1H,IAChBmF,KAAKF,UAAUA,IACXpB,GAAQM,SAAS,KAAoB,OAAfN,GAAQ,CAAA,KAA4B,OAAfA,GAAQ,CAAA,KACrDsB,KAAKoD,OAAuB/E,MAAMK,GAAQM,SAAS,CAAA,EAAGkG,KAAK,IAAIC,QAAAA,GAC/DnF,KAAKtB,UAAUA,MAEfsB,KAAKoD,OAAmBtG;MAK3B;MAwBD,KACElC,IACA4I,KAAmCxD,MACnCoF,IACAC,IAAAA;AAEA,cAAM3G,KAAUsB,KAAKtB;AAGrB,YAAI4G,KAAAA;AAEJ,YAAA,WAAI5G,GAEF9D,CAAAA,KAAQF,GAAiBsF,MAAMpF,IAAO4I,IAAiB,CAAA,GACvD8B,KAAAA,CACGlK,GAAYR,EAAAA,KACZA,OAAUoF,KAAKoD,QAAoBxI,OAAUG,GAC5CuK,OACFtF,KAAKoD,OAAmBxI;aAErB;AAEL,gBAAMY,KAASZ;AAGf,cAAIwE,IAAGmG;AACP,eAHA3K,KAAQ8D,GAAQ,CAAA,GAGXU,KAAI,GAAGA,KAAIV,GAAQM,SAAS,GAAGI,KAClCmG,CAAAA,KAAI7K,GAAiBsF,MAAMxE,GAAO4J,KAAchG,EAAAA,GAAIoE,IAAiBpE,EAAAA,GAEjEmG,OAAMxK,MAERwK,KAAKvF,KAAKoD,KAAoChE,EAAAA,IAEhDkG,YAAAA,CACGlK,GAAYmK,EAAAA,KAAMA,OAAOvF,KAAKoD,KAAoChE,EAAAA,IACjEmG,OAAMzI,IACRlC,KAAQkC,IACClC,OAAUkC,MACnBlC,OAAU2K,MAAK,MAAM7G,GAAQU,KAAI,CAAA,IAIlCY,KAAKoD,KAAoChE,EAAAA,IAAKmG;QAElD;AACGD,QAAAA,MAAAA,CAAWD,MACbrF,KAAKwF,EAAa5K,EAAAA;MAErB;MAGD,EAAaA,IAAAA;AACPA,QAAAA,OAAUkC,IACNkD,KAAKiF,QAAqBvD,gBAAgB1B,KAAKgB,IAAAA,IAoB/ChB,KAAKiF,QAAqBQ,aAC9BzF,KAAKgB,MACJpG,MAAS,EAAA;MAGf;IAAA;AAIH,IAAM0C,IAAN,cAA2BD,EAAAA;MAA3B,cAAAhC;AAAAA,cAAAA,GAAAA,SAAAA,GACoB2E,KAAIvB,OA/9CF;MAw/CrB;MAtBU,EAAa7D,IAAAA;AAoBnBoF,aAAKiF,QAAgBjF,KAAKgB,IAAAA,IAAQpG,OAAUkC,IAAAA,SAAsBlC;MACpE;IAAA;AAIH,IAAM2C,IAAN,cAAmCF,EAAAA;MAAnC,cAAAhC;AAAAA,cAAAA,GAAAA,SAAAA,GACoB2E,KAAIvB,OA3/CO;MA4gD9B;MAdU,EAAa7D,IAAAA;AASdoF,aAAKiF,QAAqBS,gBAC9B1F,KAAKgB,MAAAA,CAAAA,CACHpG,MAASA,OAAUkC,CAAAA;MAExB;IAAA;AAkBH,IAAMU,IAAN,cAAwBH,EAAAA;MAGtB,YACE4H,IACAjE,IACAtC,IACA7D,IACAiF,IAAAA;AAEA6F,cAAMV,IAASjE,IAAMtC,IAAS7D,IAAQiF,EAAAA,GATtBE,KAAIvB,OA7hDL;MA+iDhB;MAKQ,KACPmH,IACApC,KAAmCxD,MAAAA;AAInC,aAFA4F,KACElL,GAAiBsF,MAAM4F,IAAapC,IAAiB,CAAA,KAAM1G,OACzC/B,EAClB;AAEF,cAAM8K,KAAc7F,KAAKoD,MAInB0C,KACHF,OAAgB9I,KAAW+I,OAAgB/I,KAC3C8I,GAAyCG,YACvCF,GAAyCE,WAC3CH,GAAyCI,SACvCH,GAAyCG,QAC3CJ,GAAyCK,YACvCJ,GAAyCI,SAIxCC,KACJN,OAAgB9I,MACf+I,OAAgB/I,KAAWgJ;AAa1BA,QAAAA,MACF9F,KAAKiF,QAAQkB,oBACXnG,KAAKgB,MACLhB,MACA6F,EAAAA,GAGAK,MACFlG,KAAKiF,QAAQmB,iBACXpG,KAAKgB,MACLhB,MACA4F,EAAAA,GAGJ5F,KAAKoD,OAAmBwC;MACzB;MAED,YAAYS,IAAAA;AAC2B,sBAAA,OAA1BrG,KAAKoD,OACdpD,KAAKoD,KAAiBkD,KAAKtG,KAAKF,SAASyG,QAAQvG,KAAKiF,SAASoB,EAAAA,IAE9DrG,KAAKoD,KAAyCoD,YAAYH,EAAAA;MAE9D;IAAA;AAIH,IAAM5I,IAAN,MAAMA;MAiBJ,YACSwH,IACPpK,IACAiF,IAAAA;AAFOE,aAAOiF,UAAPA,IAjBAjF,KAAIvB,OAtnDM,GAkoDnBuB,KAAwBqC,OAAAA,QAStBrC,KAAKuC,OAAW1H,IAChBmF,KAAKF,UAAUA;MAChB;MAGD,IAAA,OAAI2C;AACF,eAAOzC,KAAKuC,KAASE;MACtB;MAED,KAAW7H,IAAAA;AAQTF,QAAAA,GAAiBsF,MAAMpF,EAAAA;MACxB;IAAA;AAqBU,IAoBP8C,IAEFjC,GAAOgL;AACX/I,QAAkBR,GAAUE,CAAAA,IAI3B3B,GAAOiL,oBAAPjL,GAAOiL,kBAAoB,CAAA,IAAI7G,KAAK,OAAA;AAoCxB,IAAAlC,IAAS,CACpB/C,IACA+L,IACA7G,OAAAA;AAUA,YAAM8G,KAAgB9G,IAAS+G,gBAAgBF;AAG/C,UAAIhM,KAAmBiM,GAAkC;AAUzD,UAAA,WAAIjM,IAAoB;AACtB,cAAMwI,KAAUrD,IAAS+G,gBAAgB;AAGxCD,QAAAA,GAAkC,aAAIjM,KAAO,IAAIyC,EAChDuJ,GAAU7C,aAAa9H,GAAAA,GAAgBmH,EAAAA,GACvCA,IAAAA,QAEArD,MAAW,CAAE,CAAA;MAEhB;AAWD,aAVAnF,GAAKqI,KAAWpI,EAAAA,GAUTD;IAAgB;;;;;ICjpEnBmM,IAmCOC,IAwHPC;;;;;;;;AAlKN,IAOMF,KAASG;AAmCT,IAAOF,KAAP,cAA0BG,EAAAA;MAAhC,cAAAC;AAAAA,cAAAA,GAAAA,SAAAA,GAOWC,KAAAC,gBAA+B,EAACC,MAAMF,KAAAA,GAEvCA,KAAWG,OAAAA;MA8FpB;MAzFoB,mBAAAC;;AACjB,cAAMC,KAAaC,MAAMF,iBAAAA;AAOzB,gBADAJ,UAAKC,eAAcM,iBAAnBP,GAAmBO,eAAiBF,GAAYG,aACzCH;MACR;MASkB,OAAOI,IAAAA;AAIxB,cAAMC,KAAQV,KAAKW,OAAAA;AACdX,aAAKY,eACRZ,KAAKC,cAAcY,cAAcb,KAAKa,cAExCP,MAAMQ,OAAOL,EAAAA,GACbT,KAAKG,OAAcQ,EAAOD,IAAOV,KAAKK,YAAYL,KAAKC,aAAAA;MACxD;MAsBQ,oBAAAc;AACPT,cAAMS,kBAAAA,GACNf,KAAKG,MAAaa,aAAAA,IAAa;MAChC;MAqBQ,uBAAAC;AACPX,cAAMW,qBAAAA,GACNjB,KAAKG,MAAaa,aAAAA,KAAa;MAChC;MASS,SAAAL;AACR,eAAOO;MACR;IAAA;AApGMvB,IAAAA,GAAgB,gBAAA,MA8GxBA,GAC2B,WAAA,IAAA,MAI5BD,GAAOyB,2BAA2B,EAACxB,YAAAA,GAAAA,CAAAA;AAGnC,IAAMC,KAEFF,GAAO0B;AACXxB,IAAAA,KAAkB,EAACD,YAAAA,GAAAA,CAAAA;AA8BoC0B,KAKtD3B,GAAO4B,uBAAP5B,GAAO4B,qBAAuB,CAAA,IAAIC,KAAK,OAAA;;;A;;;;;;;;;AC/RxC;AAAA;AAAA;AAAA;AAA8B;AAAiB;AAAwC;AAAA;AAAA;;;IC6C1EC;;;;AAAN,IAAMA,KACVC,CAAAA,OACD,CACEC,IACAC,OAAAA;AAAAA,iBAEIA,KACFA,GAAQC,eAAe,MAAA;AACrBC,uBAAeC,OACbL,IACAC,EAAAA;MACD,CAAA,IAGHG,eAAeC,OAAOL,IAASC,EAAAA;IAChC;;;;;ACgJC,SAAUK,GAASC,IAAAA;AACvB,SAAO,CACLC,IAIAC,OAO2B,YAAA,OAAlBA,KACHC,GACEH,IACAC,IAGAC,EAAAA,KAvJW,CACrBF,IACAI,IACAC,OAAAA;AAEA,UAAMC,KAAiBF,GAAME,eAAeD,EAAAA;AAO5C,WANCD,GAAMG,YAAuCC,eAAeH,IAAML,EAAAA,GAM5DM,KACHG,OAAOC,yBAAyBN,IAAOC,EAAAA,IAAAA;EAC9B,GA4IHL,IACAC,IACAC,EAAAA;AAIZ;IA5IMS,IAkBOR;;;;;AAtCb,IAoBMQ,KAAkD,EACtDC,WAAAA,MACAC,MAAMC,QACNC,WAAWC,GACXC,SAAAA,OACAC,YAAYC,EAAAA;AAzBd,IAsCahB,KAAmB,CAC9BH,KAA+BW,IAC/BS,IACAC,OAAAA;AAEA,YAAA,EAAMC,MAACA,IAAIC,UAAEA,GAAAA,IAAYF;AAazB,UAAIG,KAAaC,WAAWC,oBAAoBC,IAAIJ,EAAAA;AAUpD,UAAA,WATIC,MACFC,WAAWC,oBAAoBE,IAAIL,IAAWC,KAAa,oBAAIK,KAAAA,GAEpD,aAATP,QACFtB,KAAUS,OAAOqB,OAAO9B,EAAAA,GAChB+B,UAAAA,OAEVP,GAAWI,IAAIP,GAAQhB,MAAML,EAAAA,GAEhB,eAATsB,IAAqB;AAIvB,cAAA,EAAMjB,MAACA,GAAAA,IAAQgB;AACf,eAAO,EACL,IAA2BW,IAAAA;AACzB,gBAAMC,KACJb,GACAO,IAAIO,KAAKC,IAAAA;AACVf,UAAAA,GAA8CQ,IAAIM,KACjDC,MACAH,EAAAA,GAEFG,KAAKC,cAAc/B,IAAM4B,IAAUjC,EAAAA;QACpC,GACD,KAA4BgC,IAAAA;AAI1B,iBAAA,WAHIA,MACFG,KAAKE,EAAiBhC,IAAAA,QAAiBL,IAASgC,EAAAA,GAE3CA;QACR,EAAA;MAEJ;AAAM,UAAa,aAATV,IAAmB;AAC5B,cAAA,EAAMjB,MAACA,GAAAA,IAAQgB;AACf,eAAO,SAAiCiB,IAAAA;AACtC,gBAAML,KAAWE,KAAK9B,EAAAA;AACrBe,UAAAA,GAA8Bc,KAAKC,MAAMG,EAAAA,GAC1CH,KAAKC,cAAc/B,IAAM4B,IAAUjC,EAAAA;QACrC;MACD;AACD,YAAUuC,MAAM,qCAAmCjB,EAAAA;IAAO;;;;;ACjItD,SAAUkB,GAAMC,IAAAA;AACpB,SAAOC,GAAS,EAAA,GACXD,IAIHD,OAAAA,MACAG,WAAAA,MAAW,CAAA;AAEf;;;;;;;A;;;;;;;;;ICnBaC;;;;AAAA,IAAAA,KAAO,CAClBC,IACAC,IACAC,QAGAA,GAAWC,eAAAA,MACXD,GAAWE,aAAAA,MAIRC,QAAkDC,YACnC,YAAA,OAATL,MAMPM,OAAOC,eAAeR,IAAKC,IAAMC,EAAAA,GAE5BA;;;;;ACmCO,SAAAO,GAAMC,IAAkBC,IAAAA;AACtC,SAAA,CACEC,IACAC,IACAC,OAAAA;AAEA,UAAMC,KAAWC,CAAAA,OACCA,GAAGC,YAAYC,cAAcR,EAAAA,KAAa;AAoB5D,QAAIC,IAAO;AAOT,YAAA,EAAMQ,KAACA,IAAGC,KAAEA,GAAAA,IACe,YAAA,OAAlBP,KACHD,KACAE,OACA,MAAA;AACE,cAAMO,KAEFC,OAAAA;AAIJ,eAAO,EACL,MAAAH;AACE,iBAAQI,KAAmBF,EAAAA;QAC5B,GACD,IAAIG,IAAAA;AACDD,eAAmBF,EAAAA,IAAOG;QAC5B,EAAA;MAEJ,GAfD;AAgBN,aAAOC,GAAKb,IAAeC,IAAe,EACxC,MAAAM;AACE,YAAIO,KAAYP,GAAKQ,KAAKJ,IAAAA;AAO1B,eAAA,WANIG,OACFA,KAASX,GAAQQ,IAAAA,IACF,SAAXG,MAAmBH,KAAKK,eAC1BR,GAAKO,KAAKJ,MAAMG,EAAAA,IAGbA;MACR,EAAA,CAAA;IAEJ;AAGC,WAAOD,GAAKb,IAAeC,IAAe,EACxC,MAAAM;AACE,aAAOJ,GAAQQ,IAAAA;IAChB,EAAA,CAAA;EAGN;AACH;;;;;;;A;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjKA;AAAA;AAAA;AAAA;AAAgE;AAA0D;AAAuD;AAA+D;AAAuD;AAA2D;AAA6D;AAAyE;AAAA;AAAA;;;ACAxe,IAOM,UAGA,WAEO;AAZb;AAAA;AAAA;AAOA,IAAM,WAAW;AAGjB,IAAM,YAAY,SAAS,aAAa,cAAc,MAAM;AAErD,IAAM,cAAN,MAAkB;AAAA,MAIvB,aAAa,MAAM,UAAkB,UAAqC;AACxE,YAAI,UAAU;AAEZ,gBAAM,OAAO,MAAM,KAAK,eAAe;AACvC,gBAAM,QAAQ,KAAK;AAAA,YACjB,CAACM,OACCA,GAAE,UAAU,YAAY,MAAM,SAAS,YAAY,KACnD,OAAOA,GAAE,QAAQ,MAAM,OAAO,QAAQ;AAAA,UAC1C;AAEA,gBAAM,IAAI,QAAQ,CAACC,OAAM,WAAWA,IAAG,GAAG,CAAC;AAE3C,cAAI,CAAC,OAAO;AACV,kBAAM,IAAI,MAAM,8CAA8C;AAAA,UAChE;AAEA,gBAAM,QAAQ,QAAQ,MAAM,QAAQ,IAAI,KAAK,IAAI,CAAC;AAClD,gBAAM,OAAO;AAAA,YACX,UAAU,MAAM;AAAA,YAChB,WAAW,MAAM,aAAa;AAAA,UAChC;AAEA,uBAAa,QAAQ,KAAK,KAAK,KAAK;AACpC,uBAAa,QAAQ,KAAK,MAAM,KAAK,UAAU,IAAI,CAAC;AACpD,iBAAO,EAAE,GAAG,MAAM,MAAM;AAAA,QAC1B,OAAO;AAEL,gBAAM,MAAM,MAAM,MAAM,cAAc;AAAA,YACpC,QAAQ;AAAA,YACR,SAAS,EAAE,gBAAgB,mBAAmB;AAAA,YAC9C,MAAM,KAAK,UAAU,EAAE,UAAU,SAAS,CAAC;AAAA,UAC7C,CAAC;AAED,cAAI,CAAC,IAAI,IAAI;AACX,gBAAI,MAAM;AACV,gBAAI;AACF,oBAAMC,KAAI,MAAM,IAAI,KAAK;AACzB,kBAAIA,IAAG,QAAS,OAAMA,GAAE;AAAA,YAC1B,QAAQ;AAAA,YAAC;AACT,kBAAM,IAAI,MAAM,GAAG;AAAA,UACrB;AAEA,gBAAM,OAAQ,MAAM,IAAI,KAAK;AAM7B,uBAAa,QAAQ,KAAK,KAAK,KAAK,KAAK;AACzC,uBAAa;AAAA,YACX,KAAK;AAAA,YACL,KAAK,UAAU;AAAA,cACb,UAAU,KAAK;AAAA,cACf,WAAW,KAAK,aAAa;AAAA,YAC/B,CAAC;AAAA,UACH;AAEA,iBAAO;AAAA,YACL,UAAU,KAAK;AAAA,YACf,WAAW,KAAK,aAAa;AAAA,YAC7B,OAAO,KAAK;AAAA,UACd;AAAA,QACF;AAAA,MACF;AAAA,MAEA,OAAO,SAAS;AACd,qBAAa,WAAW,KAAK,GAAG;AAChC,qBAAa,WAAW,KAAK,IAAI;AAAA,MACnC;AAAA,MAEA,OAAO,WAA0B;AAC/B,eAAO,aAAa,QAAQ,KAAK,GAAG;AAAA,MACtC;AAAA,MAEA,OAAO,UAA0D;AAC/D,cAAM,MAAM,aAAa,QAAQ,KAAK,IAAI;AAC1C,YAAI,CAAC,IAAK,QAAO;AACjB,YAAI;AACF,gBAAMA,KAAI,KAAK,MAAM,GAAG;AACxB,iBAAO,EAAE,UAAUA,GAAE,YAAY,SAAS,WAAWA,GAAE,aAAa,GAAG;AAAA,QACzE,QAAQ;AACN,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MAEA,OAAO,aAAsB;AAC3B,eAAO,CAAC,CAAC,KAAK,SAAS;AAAA,MACzB;AAAA;AAAA,MAGA,aAAqB,iBAEnB;AAEA,cAAM,MAAO;AAGb,cAAM,OACJ,QAAQ,gBAAgB,gBAAgB,QAAQ,eAAe,KAAK;AAKtE,cAAM,aAAa;AAAA,UACjB,GAAG,IAAI;AAAA,UACP,GAAG,IAAI;AAAA,QACT;AAEA,YAAI,UAAe;AACnB,mBAAW,OAAO,YAAY;AAC5B,kBAAQ,IAAI,mBAAmB,GAAG,KAAK;AACvC,cAAI;AACF,kBAAM,MAAM,MAAM,MAAM,KAAK,EAAE,OAAO,WAAW,CAAC;AAClD,gBAAI,CAAC,IAAI,GAAI,OAAM,IAAI,MAAM,QAAQ,IAAI,MAAM,EAAE;AACjD,kBAAM,OAAQ,MAAM,IAAI,KAAK;AAC7B,mBAAO,MAAM,QAAQ,KAAK,KAAK,IAAK,KAAK,QAAkB,CAAC;AAAA,UAC9D,SAASC,IAAG;AACV,sBAAUA;AAAA,UACZ;AAAA,QACF;AACA,cAAM,IAAI;AAAA,UACR,mCAAmC,SAAS,WAAW,EAAE;AAAA,QAC3D;AAAA,MACF;AAAA,IACF;AA/HE,IADW,YACI,MAAM;AACrB,IAFW,YAEI,OAAO;AAAA;AAAA;;;ACdxB;AAAA;AAAA;AAAA;AAAA,IAMa;AANb;AAAA;AAAA;AACA;AACA;AACA;AAGO,IAAM,YAAN,cAAwBC,GAAW;AAAA,MAAnC;AAAA;AACI,aAAQ,WAAW;AACnB,aAAQ,WAAW;AACnB,aAAQ,UAAU;AAClB,aAAQ,QAAQ;AAAA;AAAA,MAOzB,eAAe;AACb,aAAK,WAAW;AAChB,aAAK,WAAW;AAAA,MAClB;AAAA,MACA,mBAAmB;AACjB,eAAO;AAAA,MACT;AAAA;AAAA,MAEA,MAAc,SAASC,IAAU;AAC/B,QAAAA,GAAE,eAAe;AACjB,aAAK,QAAQ;AACb,aAAK,UAAU;AACf,YAAI;AACF,kBAAQ,IAAI,SAAS,KAAK,UAAU,KAAK,QAAQ;AACjD,gBAAM,OAAO,MAAM,YAAY,MAAM,KAAK,SAAS,KAAK,GAAG,KAAK,QAAQ;AAExE,eAAK;AAAA,YACH,IAAI,YAAY,gBAAgB;AAAA,cAC9B,QAAQ,EAAE,KAAK;AAAA,cACf,SAAS;AAAA,cACT,UAAU;AAAA,YACZ,CAAC;AAAA,UACH;AAEA,eAAK;AAAA,YACH,IAAI,YAAY,eAAe;AAAA,cAC7B,QAAQ,EAAE,MAAM,IAAI;AAAA,cACpB,SAAS;AAAA,cACT,UAAU;AAAA,YACZ,CAAC;AAAA,UACH;AAAA,QACF,SAAS,KAAU;AACjB,eAAK,QAAQ,KAAK,WAAW;AAAA,QAC/B,UAAE;AACA,eAAK,UAAU;AAAA,QACjB;AAAA,MACF;AAAA,MAEA,SAAS;AACP,eAAO;AAAA;AAAA;AAAA;AAAA,oBAIS,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA,YAIrB,KAAK,QACH;AAAA;AAAA;AAAA,kBAGI,KAAK,KAAK;AAAA,wBAEd,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAMG,KAAK,QAAQ;AAAA,qBACb,CAACA,OAAY,KAAK,WAAWA,GAAE,OAAO,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAQ5C,KAAK,QAAQ;AAAA,qBACb,CAACA,OAAY,KAAK,WAAWA,GAAE,OAAO,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKzC,KAAK,WAAW,CAAC,KAAK,YAAY,CAAC,KAAK,QAAQ;AAAA;AAAA;AAAA,cAG1D,KAAK,UAAU,oBAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKjD;AAAA,IACF;AAxFE,IANW,UAMJ,SAAS;AAAA;AAAA;AAAA;AAAA;AALC;AAAA,MAAhBC,GAAM;AAAA,OADI,UACM;AACA;AAAA,MAAhBA,GAAM;AAAA,OAFI,UAEM;AACA;AAAA,MAAhBA,GAAM;AAAA,OAHI,UAGM;AACA;AAAA,MAAhBA,GAAM;AAAA,OAJI,UAIM;AAJN,gBAAN;AAAA,MADNC,GAAc,YAAY;AAAA,OACd;AAAA;AAAA;;;ACNb,IAIa;AAJb;AAAA;AAAA;AAAA;AACA;AAGO,IAAM,sBAAN,cAAkCC,GAAW;AAAA,MAA7C;AAAA;AAKI,aAAQ,aAAsB;AAAA;AAAA,MAJvC,mBAAmB;AACjB,eAAO;AAAA,MACT;AAAA,MAIA,cAAc;AACZ,aAAK,aAAa,CAAC,KAAK;AAAA,MAE1B;AAAA,MAEA,SAAS;AACP,cAAM,cAAc,KAAK,aAAa,UAAU;AAChD,cAAM,aAAa,KAAK,aACpB,gCACA;AAEJ,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDA0B0C,UAAU;AAAA,iBAC9C,WAAW;AAAA;AAAA;AAAA;AAAA,uBAIL,KAAK,WAAW;AAAA;AAAA,gBAEvB,KAAK,aAAa,YAAY,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMtD;AAAA,IACF;AArDmB;AAAA,MAAhBC,GAAM;AAAA,OALI,oBAKM;AALN,0BAAN;AAAA,MADNC,GAAc,sBAAsB;AAAA,OACxB;AAAA;AAAA;;;ACJb,IAIa;AAJb;AAAA;AAAA;AAAA;AACA;AAGO,IAAM,sBAAN,cAAkCC,GAAW;AAAA,MAClD,mBAAmB;AACjB,eAAO;AAAA,MACT;AAAA,MAEA,SAAS;AACP,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAoCT;AAAA,IACF;AA3Ca,0BAAN;AAAA,MADNC,GAAc,sBAAsB;AAAA,OACxB;AAAA;AAAA;;;ACJb,IAIa;AAJb;AAAA;AAAA;AAAA;AACA;AAGO,IAAM,sBAAN,cAAkCC,GAAW;AAAA,MAClD,mBAAmB;AACjB,eAAO;AAAA,MACT;AAAA,MAEA,SAAS;AACP,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAoCT;AAAA,IACF;AA3Ca,0BAAN;AAAA,MADNC,GAAc,sBAAsB;AAAA,OACxB;AAAA;AAAA;;;ACJb;AAAA;AAAA;AAAA;AAAA,IASa;AATb;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAGO,IAAM,gBAAN,cAA4BC,GAAW;AAAA,MAC5C,mBAAmB;AACjB,eAAO;AAAA,MACT;AAAA,MAEA,SAAS;AACP,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOT;AAAA,IACF;AAda,oBAAN;AAAA,MADNC,GAAc,gBAAgB;AAAA,OAClB;AAAA;AAAA;;;ACTb;AAAA;AAAA;AAAA;AAAA,IAIa;AAJb;AAAA;AAAA;AAAA;AACA;AAGO,IAAM,cAAN,cAA0BC,GAAW;AAAA,MAC1C,mBAAmB;AACjB,eAAO;AAAA,MACT;AAAA,MAEA,SAAS;AACP,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAoCK,KAAK;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,gBACC,KAAK;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,gBACC,KAAK;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMb;AAAA,MAEA,UACE,OACA,MACA,IACA,SACA,QACA;AACA,cAAM,cAAc,OAAO,SAAS,QAAQ,IACxC,iBACA;AACJ,eAAO;AAAA;AAAA,gCAEqB,KAAK;AAAA,gCACL,IAAI;AAAA,gCACJ,EAAE;AAAA,gCACF,OAAO;AAAA,2CACI,WAAW,KAAK,MAAM;AAAA;AAAA;AAAA,MAG/D;AAAA,IACF;AA1Fa,kBAAN;AAAA,MADNC,GAAc,cAAc;AAAA,OAChB;AAAA;AAAA;;;ACJb;AAAA;AAAA;AAAA;AAAA,IAIa;AAJb;AAAA;AAAA;AAAA;AACA;AAGO,IAAM,YAAN,cAAwBC,GAAW;AAAA,MACxC,mBAAmB;AACjB,eAAO;AAAA,MACT;AAAA,MAEA,SAAS;AACP,ejHa,gBAAN;AAAA,MADNC,GAAc,YAAY;AAAA,OACd;AAAA;AAAA;;;ACJb;AAAA;AAAA;AAAA;AAAA,IAIa;AAJb;AAAA;AAAA;AAAA;AACA;AAGO,IAAM,eAAN,cAA2BC,GAAW;AAAA,MAC3C,mBAAmB;AACjB,eAAO;AAAA,MACT;AAAA,MAEA,SAAS;AACP,eAAO;AAAA,MACT;AAAA,IACF;AARa,mBAAN;AAAA,MADNC,GAAc,gBAAgB;AAAA,OAClB;AAAA;AAAA;;;ACHb;AACA;;;ACDA;AACA;;;ACFA;AACA;AAGO,IAAM,SAAN,cAAqBC,GAAW;AAAA,EAAhC;AAAA;AACuB,uBAAc;AACjC,SAAQ,WAAW;AAAA;AAAA,EAE5B,mBAAmB;AACjB,WAAO;AAAA,EACT;AAAA,EAEQ,SAAS,MAAsB;AACrC,WAAO,KAAK,YAAY,SAAS,IAAI,IACjC,kDACA;AAAA,EACN;AAAA,EAEQ,UAAUC,IAAU;AAC1B,IAAAA,GAAE,eAAe;AACjB,UAAM,SAASA,GAAE;AACjB,UAAM,OAAO,OAAO,aAAa,MAAM;AACvC,SAAK,WAAW;AAChB,QAAI,QAAQ,SAAS,KAAK,aAAa;AACrC,WAAK;AAAA,QACH,IAAI,YAAY,eAAe;AAAA,UAC7B,QAAQ,EAAE,KAAK;AAAA,UACf,SAAS;AAAA,UACT,UAAU;AAAA,QACZ,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAAA,EAEQ,aAAa;AACnB,SAAK,WAAW,CAAC,KAAK;AAAA,EACxB;AAAA,EAEA,SAAS;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,+BAKoB,KAAK,SAAS,UAAU,KAAK,SAAS,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBASnD,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAMU,KAAK,YAAY,CAAC;AAAA;AAAA;AAAA,UAGtD,KAAK,WACH;AAAA;AAAA,kBAEM,KAAK,YAAY,CAAC;AAAA;AAAA,gBAGxB,EAAE;AAAA;AAAA;AAAA,EAGZ;AAAA,EAEQ,cAAc;AACpB,WAAO;AAAA;AAAA;AAAA,iBAGM,KAAK,SAAS;AAAA,gBACf,KAAK,SAAS,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKzB,KAAK,SAAS;AAAA,gBACf,KAAK,SAAS,SAAS,CAAC;AAAA;AAAA;AAAA,gCAGR,KAAK,SAAS,UAAU,KAAK,SAAS,OAAO,CAAC;AAAA;AAAA;AAAA;AAAA,EAI5E;AACF;AAvF8B;AAAA,EAA3BC,GAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GADf,OACiB;AACX;AAAA,EAAhBC,GAAM;AAAA,GAFI,OAEM;AAFN,SAAN;AAAA,EADNC,GAAc,SAAS;AAAA,GACX;;;ACJb;AACA;AAGO,IAAM,WAAN,cAAuBC,GAAW;AAAA,EAAlC;AAAA;AACuB,oBAAW;AACX,qBAAY;AACI,sBAAa;AAEhD,SAAQ,OAAO;AAkBxB,SAAQ,UAAU,CAACC,OAAc;AAC/B,MAAAA,IAAG,gBAAgB;AACnB,WAAK,OAAO,CAAC,KAAK;AAAA,IACpB;AAEA,SAAQ,kBAAkB,CAACA,OAAa;AACtC,UAAI,CAAC,KAAK,KAAM;AAChB,YAAM,OAAOA,GAAE,aAAa;AAC5B,UAAI,CAAC,KAAK,SAAS,IAAI,EAAG,MAAK,OAAO;AAAA,IACxC;AAEA,SAAQ,aAAa,CAACA,OAAqB;AACzC,UAAI,CAAC,KAAK,KAAM;AAChB,UAAIA,GAAE,QAAQ,SAAU,MAAK,OAAO;AAAA,IACtC;AAEA,SAAQ,aAAa,MAAM;AACzB,WAAK,OAAO;AACZ,WAAK;AAAA,QACH,IAAI,YAAY,iBAAiB,EAAE,SAAS,MAAM,UAAU,KAAK,CAAC;AAAA,MACpE;AAAA,IACF;AAEA,SAAQ,YAAY,MAAM;AACxB,WAAK,OAAO;AACZ,WAAK;AAAA,QACH,IAAI,YAAY,gBAAgB,EAAE,SAAS,MAAM,UAAU,KAAK,CAAC;AAAA,MACnE;AAAA,IACF;AAEA,SAAQ,WAAW,MAAM;AACvB,WAAK,OAAO;AACZ,WAAK;AAAA,QACH,IAAI,YAAY,eAAe,EAAE,SAAS,MAAM,UAAU,KAAK,CAAC;AAAA,MAClE;AAAA,IACF;AAAA;AAAA,EAnDA,mBAAmB;AACjB,WAAO;AAAA,EACT;AAAA,EAEA,oBAA0B;AACxB,UAAM,kBAAkB;AACxB,WAAO,iBAAiB,SAAS,KAAK,iBAAiB,IAAI;AAC3D,WAAO,iBAAiB,WAAW,KAAK,YAAY,IAAI;AAAA,EAC1D;AAAA,EAEA,uBAA6B;AAC3B,WAAO,oBAAoB,SAAS,KAAK,iBAAiB,IAAI;AAC9D,WAAO,oBAAoB,WAAW,KAAK,YAAY,IAAI;AAC3D,UAAM,qBAAqB;AAAA,EAC7B;AAAA,EAuCA,SAAS;AACP,UAAM,SAAS,KAAK,YAChB;AAAA,iBACS,KAAK,SAAS;AAAA;AAAA;AAAA,cAIvB;AAAA;AAAA;AAAA;AAAA;AAMJ,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKQ,KAAK,OAAO;AAAA;AAAA,0BAEL,KAAK,OAAO,SAAS,OAAO;AAAA;AAAA,YAE1C,MAAM;AAAA;AAAA,eAEH,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAiBlB,KAAK,OACH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKM,KAAK,aACH;AAAA;AAAA;AAAA,iCAGa,KAAK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAOf,KAAK,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,wBAM3B;AAAA;AAAA;AAAA,iCAGa,KAAK,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKzB;AAAA;AAAA,gBAGT,CAAO;AAAA;AAAA;AAAA,EAGjB;AACF;AA1I8B;AAAA,EAA3BC,GAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GADf,SACiB;AACA;AAAA,EAA3BA,GAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GAFf,SAEiB;AACgB;AAAA,EAA3CA,GAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAH/B,SAGiC;AAE3B;AAAA,EAAhBC,GAAM;AAAA,GALI,SAKM;AALN,WAAN;AAAA,EADNC,GAAc,WAAW;AAAA,GACb;;;AFGN,IAAM,YAAN,cAAwBC,GAAW;AAAA,EAAnC;AAAA;AACuB,uBAAsB,OAAO,SAAS;AAGtC,oBAAW;AACX,qBAAY;AACX,sBAAa;AAAA;AAAA;AAAA,EAG1C,mBAAmB;AACjB,WAAO;AAAA,EACT;AAAA,EAEQ,cAAcC,IAAgB;AAEpC,SAAK;AAAA,MACH,IAAI,YAAY,eAAe;AAAA,QAC7B,QAAQA,GAAE;AAAA,QACV,SAAS;AAAA,QACT,UAAU;AAAA,MACZ,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEQ,SAAS,MAAwD;AACvE,SAAK;AAAA,MACH,IAAI,YAAY,MAAM,EAAE,SAAS,MAAM,UAAU,KAAK,CAAC;AAAA,IACzD;AAAA,EACF;AAAA,EAEA,SAAS;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAQgB,KAAK,WAAW;AAAA,2BAChB,KAAK,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,wBAKrB,KAAK,QAAQ;AAAA,yBACZ,KAAK,SAAS;AAAA,0BACb,KAAK,UAAU;AAAA,2BACd,MAAM,KAAK,SAAS,aAAa,CAAC;AAAA,4BACjC,MAAM,KAAK,SAAS,cAAc,CAAC;AAAA,6BAClC,MAAM,KAAK,SAAS,eAAe,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAK/D;AACF;AAvD8B;AAAA,EAA3BC,GAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GADf,UACiB;AAGA;AAAA,EAA3BA,GAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GAJf,UAIiB;AACA;AAAA,EAA3BA,GAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GALf,UAKiB;AACC;AAAA,EAA5BA,GAAS,EAAE,MAAM,QAAQ,CAAC;AAAA,GANhB,UAMkB;AANlB,YAAN;AAAA,EADNC,GAAc,YAAY;AAAA,GACd;;;AGPb;AACA;AAGO,IAAM,YAAN,cAAwBC,GAAW;AAAA,EACxC,mBAAmB;AACjB,WAAO;AAAA,EACT;AAAA,EAEA,SAAS;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAQK,oBAAI,KAAK,GAAE,YAAY,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAetC;AACF;AA9Ba,YAAN;AAAA,EADNC,GAAc,YAAY;AAAA,GACd;;;ACHb;AACA;;;ACkBA,SAAS,MAAM,KAAW;AACxB,MAAM,SAAqB,CAAA;AAC3B,MAAIC,KAAI;AAER,SAAOA,KAAI,IAAI,QAAQ;AACrB,QAAM,OAAO,IAAIA,EAAC;AAElB,QAAI,SAAS,OAAO,SAAS,OAAO,SAAS,KAAK;AAChD,aAAO,KAAK,EAAE,MAAM,YAAY,OAAOA,IAAG,OAAO,IAAIA,IAAG,EAAC,CAAE;AAC3D;;AAGF,QAAI,SAAS,MAAM;AACjB,aAAO,KAAK,EAAE,MAAM,gBAAgB,OAAOA,MAAK,OAAO,IAAIA,IAAG,EAAC,CAAE;AACjE;;AAGF,QAAI,SAAS,KAAK;AAChB,aAAO,KAAK,EAAE,MAAM,QAAQ,OAAOA,IAAG,OAAO,IAAIA,IAAG,EAAC,CAAE;AACvD;;AAGF,QAAI,SAAS,KAAK;AAChB,aAAO,KAAK,EAAE,MAAM,SAAS,OAAOA,IAAG,OAAO,IAAIA,IAAG,EAAC,CAAE;AACxD;;AAGF,QAAI,SAAS,KAAK;AAChB,UAAI,OAAO;AACX,UAAIC,KAAID,KAAI;AAEZ,aAAOC,KAAI,IAAI,QAAQ;AACrB,YAAM,OAAO,IAAI,WAAWA,EAAC;AAE7B;;UAEG,QAAQ,MAAM,QAAQ;UAEtB,QAAQ,MAAM,QAAQ;UAEtB,QAAQ,MAAM,QAAQ;UAEvB,SAAS;UACT;AACA,kBAAQ,IAAIA,IAAG;AACf;;AAGF;;AAGF,UAAI,CAAC;AAAM,cAAM,IAAI,UAAU,6BAAA,OAA6BD,EAAC,CAAE;AAE/D,aAAO,KAAK,EAAE,MAAM,QAAQ,OAAOA,IAAG,OAAO,KAAI,CAAE;AACnD,MAAAA,KAAIC;AACJ;;AAGF,QAAI,SAAS,KAAK;AAChB,UAAI,QAAQ;AACZ,UAAI,UAAU;AACd,UAAIA,KAAID,KAAI;AAEZ,UAAI,IAAIC,EAAC,MAAM,KAAK;AAClB,cAAM,IAAI,UAAU,oCAAA,OAAoCA,EAAC,CAAE;;AAG7D,aAAOA,KAAI,IAAI,QAAQ;AACrB,YAAI,IAAIA,EAAC,MAAM,MAAM;AACnB,qBAAW,IAAIA,IAAG,IAAI,IAAIA,IAAG;AAC7B;;AAGF,YAAI,IAAIA,EAAC,MAAM,KAAK;AAClB;AACA,cAAI,UAAU,GAAG;AACf,YAAAA;AACA;;mBAEO,IAAIA,EAAC,MAAM,KAAK;AACzB;AACA,cAAI,IAAIA,KAAI,CAAC,MAAM,KAAK;AACtB,kBAAM,IAAI,UAAU,uCAAA,OAAuCA,EAAC,CAAE;;;AAIlE,mBAAW,IAAIA,IAAG;;AAGpB,UAAI;AAAO,cAAM,IAAI,UAAU,yBAAA,OAAyBD,EAAC,CAAE;AAC3D,UAAI,CAAC;AAAS,cAAM,IAAI,UAAU,sBAAA,OAAsBA,EAAC,CAAE;AAE3D,aAAO,KAAK,EAAE,MAAM,WAAW,OAAOA,IAAG,OAAO,QAAO,CAAE;AACzD,MAAAA,KAAIC;AACJ;;AAGF,WAAO,KAAK,EAAE,MAAM,QAAQ,OAAOD,IAAG,OAAO,IAAIA,IAAG,EAAC,CAAE;;AAGzD,SAAO,KAAK,EAAE,MAAM,OAAO,OAAOA,IAAG,OAAO,GAAE,CAAE;AAEhD,SAAO;AACT;AAgBM,SAAU,MAAM,KAAa,SAA0B;AAA1B,MAAA,YAAA,QAAA;AAAA,cAAA,CAAA;EAA0B;AAC3D,MAAM,SAAS,MAAM,GAAG;AAChB,MAAA,KAAuC,QAAO,UAA9C,WAAQ,OAAA,SAAG,OAAI,IAAE,KAAsB,QAAO,WAA7B,YAAS,OAAA,SAAG,QAAK;AAC1C,MAAM,SAAkB,CAAA;AACxB,MAAI,MAAM;AACV,MAAIA,KAAI;AACR,MAAI,OAAO;AAEX,MAAM,aAAa,SAAC,MAAsB;AACxC,QAAIA,KAAI,OAAO,UAAU,OAAOA,EAAC,EAAE,SAAS;AAAM,aAAO,OAAOA,IAAG,EAAE;EACvE;AAEA,MAAM,cAAc,SAAC,MAAsB;AACzC,QAAME,SAAQ,WAAW,IAAI;AAC7B,QAAIA,WAAU;AAAW,aAAOA;AAC1B,QAAAC,MAA4B,OAAOH,EAAC,GAA5B,WAAQG,IAAA,MAAE,QAAKA,IAAA;AAC7B,UAAM,IAAI,UAAU,cAAA,OAAc,UAAQ,MAAA,EAAA,OAAO,OAAK,aAAA,EAAA,OAAc,IAAI,CAAE;EAC5E;AAEA,MAAM,cAAc,WAAA;AAClB,QAAIC,UAAS;AACb,QAAIF;AACJ,WAAQA,SAAQ,WAAW,MAAM,KAAK,WAAW,cAAc,GAAI;AACjE,MAAAE,WAAUF;;AAEZ,WAAOE;EACT;AAEA,MAAM,SAAS,SAACF,QAAa;AAC3B,aAAmB,KAAA,GAAA,cAAA,WAAA,KAAA,YAAA,QAAA,MAAS;AAAvB,UAAMG,QAAI,YAAA,EAAA;AAAe,UAAIH,OAAM,QAAQG,KAAI,IAAI;AAAI,eAAO;;AACnE,WAAO;EACT;AAEA,MAAM,cAAc,SAACC,SAAc;AACjC,QAAM,OAAO,OAAO,OAAO,SAAS,CAAC;AACrC,QAAM,WAAWA,YAAW,QAAQ,OAAO,SAAS,WAAW,OAAO;AAEtE,QAAI,QAAQ,CAAC,UAAU;AACrB,YAAM,IAAI,UACR,8DAAA,OAA+D,KAAa,MAAI,GAAA,CAAG;;AAIvF,QAAI,CAAC,YAAY,OAAO,QAAQ;AAAG,aAAO,KAAA,OAAK,aAAa,SAAS,GAAC,KAAA;AACtE,WAAO,SAAA,OAAS,aAAa,QAAQ,GAAC,KAAA,EAAA,OAAM,aAAa,SAAS,GAAC,MAAA;EACrE;AAEA,SAAON,KAAI,OAAO,QAAQ;AACxB,QAAM,OAAO,WAAW,MAAM;AAC9B,QAAM,OAAO,WAAW,MAAM;AAC9B,QAAM,UAAU,WAAW,SAAS;AAEpC,QAAI,QAAQ,SAAS;AACnB,UAAI,SAAS,QAAQ;AAErB,UAAI,SAAS,QAAQ,MAAM,MAAM,IAAI;AACnC,gBAAQ;AACR,iBAAS;;AAGX,UAAI,MAAM;AACR,eAAO,KAAK,IAAI;AAChB,eAAO;;AAGT,aAAO,KAAK;QACV,MAAM,QAAQ;QACd;QACA,QAAQ;QACR,SAAS,WAAW,YAAY,MAAM;QACtC,UAAU,WAAW,UAAU,KAAK;OACrC;AACD;;AAGF,QAAM,QAAQ,QAAQ,WAAW,cAAc;AAC/C,QAAI,OAAO;AACT,cAAQ;AACR;;AAGF,QAAI,MAAM;AACR,aAAO,KAAK,IAAI;AAChB,aAAO;;AAGT,QAAM,OAAO,WAAW,MAAM;AAC9B,QAAI,MAAM;AACR,UAAM,SAAS,YAAW;AAC1B,UAAM,SAAO,WAAW,MAAM,KAAK;AACnC,UAAM,YAAU,WAAW,SAAS,KAAK;AACzC,UAAM,SAAS,YAAW;AAE1B,kBAAY,OAAO;AAEnB,aAAO,KAAK;QACV,MAAM,WAAS,YAAU,QAAQ;QACjC,SAAS,UAAQ,CAAC,YAAU,YAAY,MAAM,IAAI;QAClD;QACA;QACA,UAAU,WAAW,UAAU,KAAK;OACrC;AACD;;AAGF,gBAAY,KAAK;;AAGnB,SAAO;AACT;AAoBM,SAAU,QACd,KACA,SAAgD;AAEhD,SAAO,iBAAoB,MAAM,KAAK,OAAO,GAAG,OAAO;AACzD;AAOM,SAAU,iBACd,QACA,SAAqC;AAArC,MAAA,YAAA,QAAA;AAAA,cAAA,CAAA;EAAqC;AAErC,MAAM,UAAU,MAAM,OAAO;AACrB,MAAA,KAA+C,QAAO,QAAtD,SAAM,OAAA,SAAG,SAACO,IAAS;AAAK,WAAAA;EAAA,IAAC,IAAE,KAAoB,QAAO,UAA3B,WAAQ,OAAA,SAAG,OAAI;AAGlD,MAAM,UAAU,OAAO,IAAI,SAAC,OAAK;AAC/B,QAAI,OAAO,UAAU,UAAU;AAC7B,aAAO,IAAI,OAAO,OAAA,OAAO,MAAM,SAAO,IAAA,GAAM,OAAO;;EAEvD,CAAC;AAED,SAAO,SAAC,MAA4C;AAClD,QAAI,OAAO;AAEX,aAASP,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK;AACtC,UAAM,QAAQ,OAAOA,EAAC;AAEtB,UAAI,OAAO,UAAU,UAAU;AAC7B,gBAAQ;AACR;;AAGF,UAAM,QAAQ,OAAO,KAAK,MAAM,IAAI,IAAI;AACxC,UAAM,WAAW,MAAM,aAAa,OAAO,MAAM,aAAa;AAC9D,UAAM,SAAS,MAAM,aAAa,OAAO,MAAM,aAAa;AAE5D,UAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,YAAI,CAAC,QAAQ;AACX,gBAAM,IAAI,UACR,aAAA,OAAa,MAAM,MAAI,mCAAA,CAAmC;;AAI9D,YAAI,MAAM,WAAW,GAAG;AACtB,cAAI;AAAU;AAEd,gBAAM,IAAI,UAAU,aAAA,OAAa,MAAM,MAAI,mBAAA,CAAmB;;AAGhE,iBAASC,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,cAAM,UAAU,OAAO,MAAMA,EAAC,GAAG,KAAK;AAEtC,cAAI,YAAY,CAAE,QAAQD,EAAC,EAAa,KAAK,OAAO,GAAG;AACrD,kBAAM,IAAI,UACR,iBAAA,OAAiB,MAAM,MAAI,cAAA,EAAA,OAAe,MAAM,SAAO,cAAA,EAAA,OAAe,SAAO,GAAA,CAAG;;AAIpF,kBAAQ,MAAM,SAAS,UAAU,MAAM;;AAGzC;;AAGF,UAAI,OAAO,UAAU,YAAY,OAAO,UAAU,UAAU;AAC1D,YAAM,UAAU,OAAO,OAAO,KAAK,GAAG,KAAK;AAE3C,YAAI,YAAY,CAAE,QAAQA,EAAC,EAAa,KAAK,OAAO,GAAG;AACrD,gBAAM,IAAI,UACR,aAAA,OAAa,MAAM,MAAI,cAAA,EAAA,OAAe,MAAM,SAAO,cAAA,EAAA,OAAe,SAAO,GAAA,CAAG;;AAIhF,gBAAQ,MAAM,SAAS,UAAU,MAAM;AACvC;;AAGF,UAAI;AAAU;AAEd,UAAM,gBAAgB,SAAS,aAAa;AAC5C,YAAM,IAAI,UAAU,aAAA,OAAa,MAAM,MAAI,UAAA,EAAA,OAAW,aAAa,CAAE;;AAGvE,WAAO;EACT;AACF;AAgFA,SAAS,aAAa,KAAW;AAC/B,SAAO,IAAI,QAAQ,6BAA6B,MAAM;AACxD;AAKA,SAAS,MAAM,SAAiC;AAC9C,SAAO,WAAW,QAAQ,YAAY,KAAK;AAC7C;AAqBA,SAAS,eAAe,MAAc,MAAY;AAChD,MAAI,CAAC;AAAM,WAAO;AAElB,MAAM,cAAc;AAEpB,MAAI,QAAQ;AACZ,MAAI,aAAa,YAAY,KAAK,KAAK,MAAM;AAC7C,SAAO,YAAY;AACjB,SAAK,KAAK;;MAER,MAAM,WAAW,CAAC,KAAK;MACvB,QAAQ;MACR,QAAQ;MACR,UAAU;MACV,SAAS;KACV;AACD,iBAAa,YAAY,KAAK,KAAK,MAAM;;AAG3C,SAAO;AACT;AAKA,SAAS,cACP,OACA,MACA,SAA8C;AAE9C,MAAM,QAAQ,MAAM,IAAI,SAAC,MAAI;AAAK,WAAA,aAAa,MAAM,MAAM,OAAO,EAAE;EAAlC,CAAwC;AAC1E,SAAO,IAAI,OAAO,MAAA,OAAM,MAAM,KAAK,GAAG,GAAC,GAAA,GAAK,MAAM,OAAO,CAAC;AAC5D;AAKA,SAAS,eACP,MACA,MACA,SAA8C;AAE9C,SAAO,eAAe,MAAM,MAAM,OAAO,GAAG,MAAM,OAAO;AAC3D;AAoCM,SAAU,eACd,QACA,MACA,SAAmC;AAAnC,MAAA,YAAA,QAAA;AAAA,cAAA,CAAA;EAAmC;AAGjC,MAAA,KAME,QAAO,QANT,SAAM,OAAA,SAAG,QAAK,IACd,KAKE,QAAO,OALT,QAAK,OAAA,SAAG,OAAI,IACZ,KAIE,QAAO,KAJT,MAAG,OAAA,SAAG,OAAI,IACV,KAGE,QAAO,QAHT,SAAM,OAAA,SAAG,SAACQ,IAAS;AAAK,WAAAA;EAAA,IAAC,IACzB,KAEE,QAAO,WAFT,YAAS,OAAA,SAAG,QAAK,IACjB,KACE,QAAO,UADT,WAAQ,OAAA,SAAG,KAAE;AAEf,MAAM,aAAa,IAAA,OAAI,aAAa,QAAQ,GAAC,KAAA;AAC7C,MAAM,cAAc,IAAA,OAAI,aAAa,SAAS,GAAC,GAAA;AAC/C,MAAI,QAAQ,QAAQ,MAAM;AAG1B,WAAoB,KAAA,GAAA,WAAA,QAAA,KAAA,SAAA,QAAA,MAAQ;AAAvB,QAAM,QAAK,SAAA,EAAA;AACd,QAAI,OAAO,UAAU,UAAU;AAC7B,eAAS,aAAa,OAAO,KAAK,CAAC;WAC9B;AACL,UAAM,SAAS,aAAa,OAAO,MAAM,MAAM,CAAC;AAChD,UAAM,SAAS,aAAa,OAAO,MAAM,MAAM,CAAC;AAEhD,UAAI,MAAM,SAAS;AACjB,YAAI;AAAM,eAAK,KAAK,KAAK;AAEzB,YAAI,UAAU,QAAQ;AACpB,cAAI,MAAM,aAAa,OAAO,MAAM,aAAa,KAAK;AACpD,gBAAM,MAAM,MAAM,aAAa,MAAM,MAAM;AAC3C,qBAAS,MAAA,OAAM,QAAM,MAAA,EAAA,OAAO,MAAM,SAAO,MAAA,EAAA,OAAO,MAAM,EAAA,OAAG,QAAM,KAAA,EAAA,OAAM,MAAM,SAAO,MAAA,EAAA,OAAO,QAAM,GAAA,EAAA,OAAI,GAAG;iBACjG;AACL,qBAAS,MAAA,OAAM,QAAM,GAAA,EAAA,OAAI,MAAM,SAAO,GAAA,EAAA,OAAI,QAAM,GAAA,EAAA,OAAI,MAAM,QAAQ;;eAE/D;AACL,cAAI,MAAM,aAAa,OAAO,MAAM,aAAa,KAAK;AACpD,kBAAM,IAAI,UACR,mBAAA,OAAmB,MAAM,MAAI,+BAAA,CAA+B;;AAIhE,mBAAS,IAAA,OAAI,MAAM,SAAO,GAAA,EAAA,OAAI,MAAM,QAAQ;;aAEzC;AACL,iBAAS,MAAA,OAAM,MAAM,EAAA,OAAG,QAAM,GAAA,EAAA,OAAI,MAAM,QAAQ;;;;AAKtD,MAAI,KAAK;AACP,QAAI,CAAC;AAAQ,eAAS,GAAA,OAAG,aAAW,GAAA;AAEpC,aAAS,CAAC,QAAQ,WAAW,MAAM,MAAA,OAAM,YAAU,GAAA;SAC9C;AACL,QAAM,WAAW,OAAO,OAAO,SAAS,CAAC;AACzC,QAAM,iBACJ,OAAO,aAAa,WAChB,YAAY,QAAQ,SAAS,SAAS,SAAS,CAAC,CAAC,IAAI,KACrD,aAAa;AAEnB,QAAI,CAAC,QAAQ;AACX,eAAS,MAAA,OAAM,aAAW,KAAA,EAAA,OAAM,YAAU,KAAA;;AAG5C,QAAI,CAAC,gBAAgB;AACnB,eAAS,MAAA,OAAM,aAAW,GAAA,EAAA,OAAI,YAAU,GAAA;;;AAI5C,SAAO,IAAI,OAAO,OAAO,MAAM,OAAO,CAAC;AACzC;AAcM,SAAU,aACd,MACA,MACA,SAA8C;AAE9C,MAAI,gBAAgB;AAAQ,WAAO,eAAe,MAAM,IAAI;AAC5D,MAAI,MAAM,QAAQ,IAAI;AAAG,WAAO,cAAc,MAAM,MAAM,OAAO;AACjE,SAAO,eAAe,MAAM,MAAM,OAAO;AAC3C;;;AC9nBO,SAAS,SAASC,IAAyB;AAEhD,SAAO,OAAOA,OAAM,YAAY,CAAC,CAACA;AACpC;AAGO,SAAS,WAAWC,IAA2B;AACpD,SAAO,OAAOA,OAAM;AACtB;AAEO,SAAS,SAASC,IAAyB;AAChD,SAAO,OAAOA,OAAM;AACtB;AAEO,SAAS,QAAW,QAA0B,CAAC,GAAiB;AACrE,SAAO,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAC9C;AAEO,SAAS,IAAI,KAAqB;AACvC,SAAO,mBAAmB,GAAG;AAC/B;AAEO,IAAM,gBAAN,cAAyE,MAAM;EAIpF,YAAY,SAAgC;AAC1C,UAAM,IAAI,mBAAmB,QAAQ,QAAQ,GAAG,CAAC;AAJ1C;AACA;AAIP,SAAK,UAAU;AACf,SAAK,OAAO;EACd;AACF;AAEO,IAAM,iBAAiB,OAAO,gBAAgB;AAG9C,SAAS,iBACd,SACwB;AACxB,SAAO,IAAI,cAAc,OAAO;AAClC;AAEO,SAAS,YAAY,MAA2C;AACrE,UAAQ,MAAM,QAAQ,IAAI,IAAI,KAAK,CAAC,IAAI,SAAS;AACnD;AAEO,SAAS,aAA0D,OAA2C;AACnH,SAAO,YAAY,OAAO,IAAI;AAChC;AAEO,SAAS,eACd,UAC2C;AAC3C,SAAO,MAAM,QAAuC,QAAQ,KAAK,SAAS,SAAS,IAAI,WAAW;AACpG;;;ACzBA,IAAM,QAAQ,oBAAI,IAAqB;AAEvC,MAAM,IAAI,UAAU;EAClB,MAAM,CAAC;EACP,SAAS;AACX,CAAC;AAED,SAAS,YAAY,KAAqB;AACxC,MAAI;AACF,WAAO,mBAAmB,GAAG;EAC/B,QAAQ;AACN,WAAO;EACT;AACF;AAGA,SAAS,UACP,WACA,MACA,QAAiB,OACjB,aAA6B,CAAC,GAC9B,cACc;AACd,QAAM,WAAW,GAAG,SAAS,IAAI,OAAO,KAAK,CAAC;AAC9C,QAAM,QAAQ,YAAY,IAAI;AAC9B,MAAI,SAAS,MAAM,IAAI,QAAQ;AAE/B,MAAI,CAAC,QAAQ;AACX,UAAM,OAAc,CAAC;AACrB,aAAS;MACP;MACA,SAAS,aAAa,WAAW,MAAM;QACrC,KAAK;QACL,QAAQ,cAAc;MACxB,CAAC;IACH;AACA,UAAM,IAAI,UAAU,MAAM;EAC5B;AAEA,QAAMC,KAA+B,OAAO,QAAQ,KAAK,KAAK;AAC9D,MAAI,CAACA,IAAG;AACN,WAAO;EACT;AAEA,QAAM,SAAkC,EAAE,GAAG,aAAa;AAE1D,WAASC,KAAI,GAAGA,KAAID,GAAE,QAAQC,MAAK;AACjC,UAAM,MAAM,OAAO,KAAKA,KAAI,CAAC;AAC7B,UAAM,OAAO,IAAI;AACjB,UAAM,QAAQD,GAAEC,EAAC;AACjB,QAAI,UAAU,UAAa,CAAC,OAAO,OAAO,QAAQ,IAAI,GAAG;AACvD,UAAI,IAAI,aAAa,OAAO,IAAI,aAAa,KAAK;AAGhD,eAAO,IAAI,IAAI,QAAQ,MAAM,MAAM,QAAQ,EAAE,IAAI,WAAW,IAAI,CAAC;MACnE,OAAO;AACL,eAAO,IAAI,IAAI,QAAQ,YAAY,KAAK,IAAI;MAC9C;IACF;EACF;AAEA,SAAO;IACL,MAAM,CAAC,GAAG,YAAY,GAAG,OAAO,IAAI;IACpC;IACA,MAAMD,GAAE,CAAC;EACX;AACF;AAEA,IAAO,oBAAQ;;;AC5Bf,SAAS,WACP,OACA,UACA,oBACA,YACA,cAC0E;AAC1E,MAAI;AACJ,MAAI;AACJ,MAAI,aAAa;AACjB,MAAI,YAAY,aAAa,KAAK;AAClC,MAAI,UAAU,WAAW,GAAG,GAAG;AAC7B,QAAI,oBAAoB;AACtB,kBAAY,UAAU,UAAU,CAAC;IACnC;AAEA,yBAAqB;EACvB;AAEA,SAAO;IACL,KAAK,aAAkF;AACrF,UAAI,UAAU,aAAa;AACzB,eAAO,EAAE,MAAM,MAAM,OAAO,OAAU;MACxC;AAEA,YAAM,eAAN,MAAM,aAAe,eAAe,MAAM,QAAQ;AAClD,YAAM,WAAW,MAAM,cAAc,CAAC;AACtC,YAAM,QAAQ,CAAC,MAAM,cAAc,CAAC,MAAM;AAE1C,UAAI,CAAC,OAAO;AACV,gBAAQ,kBAAU,WAAW,UAAU,OAAO,YAAY,YAAY;AAEtE,YAAI,OAAO;AACT,iBAAO;YACL,OAAO;cACL,MAAM,MAAM;cACZ,QAAQ,MAAM;cACd,MAAM,MAAM;cACZ;YACF;UACF;QACF;MACF;AAEA,UAAI,SAAS,SAAS,SAAS,GAAG;AAChC,eAAO,aAAa,SAAS,QAAQ;AACnC,cAAI,CAAC,cAAc;AACjB,kBAAM,aAAa,SAAS,UAAU;AACtC,uBAAW,SAAS;AAEpB,gBAAI,gBAAgB,MAAM,KAAK;AAC/B,gBAAI,gBAAgB,KAAK,SAAS,OAAO,aAAa,MAAM,KAAK;AAC/D,+BAAiB;YACnB;AAEA,2BAAe;cACb;cACA,SAAS,UAAU,aAAa;cAChC;cACA,MAAM;cACN,MAAM;YACR;UACF;AAEA,gBAAM,aAAa,aAAa,KAAK,WAAW;AAChD,cAAI,CAAC,WAAW,MAAM;AACpB,mBAAO;cACL,MAAM;cACN,OAAO,WAAW;YACpB;UACF;AAEA,yBAAe;AACf,wBAAc;QAChB;MACF;AAEA,aAAO,EAAE,MAAM,MAAM,OAAO,OAAU;IACxC;EACF;AACF;AAEA,IAAO,qBAAQ;;;AC7IA,SAAR,aACL,SACuD;AACvD,MAAI,WAAW,QAAQ,MAAM,MAAM,GAAG;AAEpC,WAAO,QAAQ,MAAM,OAAO,OAAO;EACrC;AACA,SAAO;AACT;;;ACGA,SAAS,kBACP,OACA,aACA;AACA,MAAI,SAAS;AACb,SAAO,QAAQ;AACb,aAAS,OAAO;AAChB,QAAI,WAAW,aAAa;AAC1B,aAAO;IACT;EACF;AACA,SAAO;AACT;AAEA,SAAS,eAA4D,OAAgD;AACnH,SACE,CAAC,CAAC,SACF,OAAO,UAAU,YACjB,UAAU,SACV,YAAY,SACZ,YAAY,SACZ,WAAW;AAEf;AAMO,IAAM,kBAAN,cAAuG,MAAM;EAIlH,YAAY,SAAgC,SAAkC;AAC5E,QAAI,eAAe,SAAS,QAAQ,QAAQ;AAC5C,UAAM,YAAY,aAAa,QAAQ,KAAK;AAC5C,QAAI,WAAW;AACb,sBAAgB,qCAAqC,SAAS;IAChE;AACA,UAAM,cAAc,OAAO;AATpB;AACA;AASP,SAAK,OAAO,SAAS;AACrB,SAAK,UAAU;EACjB;EAEA,OAAa;AACX,YAAQ,KAAK,KAAK,OAAO;EAC3B;AACF;AAEA,SAAS,oBACP,SACA,OACA;AACA,QAAM,EAAE,MAAM,MAAM,IAAI;AAExB,MAAI,SAAS,CAAC,MAAM,aAAa;AAC/B,UAAM,OAAO,EAAE,MAAM,MAAM;AAC3B,QAAI,MAAM,UAAU,QAAQ,OAAO;AACjC,eAASE,KAAI,QAAQ,MAAM,SAAS,GAAGA,MAAK,GAAGA,MAAK;AAClD,YAAI,QAAQ,MAAMA,EAAC,EAAE,UAAU,MAAM,QAAQ;AAC3C;QACF;AAEA,gBAAQ,MAAM,IAAI;MACpB;IACF;AACA,YAAQ,OAAO,KAAK,IAAI;EAC1B;AACF;AAlFA;AAiGA,IAAO,WAAP,MAAiH;EAc/G,YACE,QACA,EAAE,UAAU,IAAI,SAAS,cAAc,cAAAC,gBAAe,aAAoB,IAA8B,CAAC,GACzG;AAVO;;;;;;;AACT;AACS;AACA;AACA;AAOP,QAAI,OAAO,MAAM,MAAM,QAAQ;AAC7B,YAAM,IAAI,UAAU,gBAAgB;IACtC;AAEA,SAAK,UAAU;AACf,SAAK,eAAe;AACpB,SAAK,eAAeA;AAEpB,QAAI,MAAM,QAAQ,MAAM,GAAG;AAIzB,yBAAK,OAAQ;QACX,YAAY;QACZ,aAAa;QACb,QAAQ,MAAM;QACd,MAAM;MACR;IACF,OAAO;AACL,yBAAK,OAAQ,EAAE,GAAG,QAAQ,QAAQ,OAAU;IAC9C;AAEA,uBAAK,UAAW;MACd,GAAG;MACH,MAAM;;MAEN,MAAM,OAAO;AACX,eAAO;MACT;MACA,QAAQ,CAAC;MACT,UAAU;MACV,UAAU;MACV,OAAO,mBAAK;MACZ,QAAQ;MACR,OAAO,CAAC;IACV;EACF;EAEA,IAAI,OAAuB;AACzB,WAAO,mBAAK;EACd;EAEA,IAAI,UAAiC;AACnC,WAAO,mBAAK;EACd;;;;;;;;EASA,IAAc,qBAA6B;AACzC,WAAO,KAAK,UAAU,IAAI,IAAI,KAAK,SAAS,SAAS,WAAW,SAAS,GAAG,EAAE,KAAK,QAAQ,WAAW,EAAE,IAAI;EAC9G;;;;;;;;EASA,YAA2C;AACzC,WAAO,CAAC,GAAI,mBAAK,OAAM,cAAc,CAAC,CAAE;EAC1C;;;;;;EAOA,eAAqB;AACnB,uBAAK,OAAM,aAAa,CAAC;EAC3B;;;;;;;;;;;;;;;;;EAkBA,MAAM,QAAQ,mBAA6F;AACzG,UAAM,OAAO;AACb,UAAM,UAAiC;MACrC,GAAG,mBAAK;MACR,GAAI,SAAS,iBAAiB,IAAI,EAAE,UAAU,kBAAkB,IAAI;;MAEpE;IACF;AACA,UAAM,QAAQ;MACZ,mBAAK;MACL,KAAK,oBAAoB,QAAQ,QAAQ,KAAK,QAAQ;MACtD,CAAC,CAAC,KAAK;IACT;AACA,UAAM,UAAU,KAAK;AACrB,QAAI,UAAqE;AACzE,QAAI,cAAyE;AAC7E,QAAI,iBAAiB;AAErB,mBAAe,KACb,SAAkB,OAClB,SAAqC,SAAS,OAAO,OACrD,YAC8C;AAC9C,YAAM,cAAc,eAAe,OAAO,SAAS,OAAO,QAAQ;AAClE,gBAAU,eAAe,MAAM,KAAK,WAAW;AAC/C,oBAAc;AAEd,UAAI,CAAC,QAAQ;AACX,YAAI,CAAC,CAAC,QAAQ,QAAQ,CAAC,kBAAkB,QAAQ,MAAM,OAAO,MAAM,GAAG;AACrE,wBAAc;AACd,iBAAO;QACT;MACF;AAEA,UAAI,QAAQ,MAAM;AAChB,cAAM,iBAAiB,OAAO;MAChC;AAEA,uBAAiB;QACf,GAAG;QACH,QAAQ,QAAQ,MAAM;QACtB,OAAO,QAAQ,MAAM;QACrB,OAAO,eAAe,OAAO,MAAM;MACrC;AACA,0BAAoB,gBAAgB,QAAQ,KAAK;AAEjD,YAAM,aAAa,MAAM,QAAQ,cAAc;AAE/C,UAAI,eAAe,QAAQ,eAAe,UAAa,eAAe,gBAAgB;AACpF,uBAAe,SAAS,eAAwB,UAAU,IAAI,WAAW,SAAS;AAClF,2BAAK,UAAW;AAChB,eAAO;MACT;AACA,aAAO,MAAM,KAAK,QAAQ,QAAQ,UAAU;IAC9C;AAEA,QAAI;AACF,aAAO,MAAM,KAAK,MAAM,mBAAK,MAAuB;IACtD,SAAS,OAAgB;AACvB,YAAM,SACJ,iBAAiB,gBACb,QACA,IAAI,gBAAgB,gBAAmC,EAAE,MAAM,KAAK,OAAO,MAAM,CAAC;AAExF,UAAI,KAAK,cAAc;AACrB,uBAAe,SAAS,KAAK,aAAa,MAAM;AAChD,eAAO;MACT;AACA,YAAM;IACR;EACF;;;;;;;EAQA,UAAU,QAA8D;AACtE,uBAAK,OAAM,aAAa,CAAC,GAAG,QAAQ,MAAM,CAAC;EAC7C;;;;;;;;;EAUU,oBAAoB,UAAsC;AAClE,QAAI,CAAC,KAAK,SAAS;AAEjB,aAAO;IACT;AAEA,UAAM,OAAO,KAAK;AAElB,UAAM,MAAM,SAAS,WAAW,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE,SAAS,WAAW,KAAK,QAAQ;AACtF,UAAM,gBAAgB,IAAI,IAAI,KAAK,IAAI,EAAE;AACzC,QAAI,cAAc,WAAW,IAAI,GAAG;AAClC,aAAO,cAAc,MAAM,KAAK,MAAM;IACxC;AAEA,WAAO;EACT;;;;;;;;EASU,UAAU,QAAuF;AACzG,uBAAK,OAAM,aAAa,CAAC,GAAI,mBAAK,OAAM,cAAc,CAAC,GAAI,GAAG,QAAQ,MAAM,CAAC;AAC7E,WAAO,KAAK,UAAU;EACxB;AACF;AA7NE;AAGS;;;ACpGX,SAAS,YACP,cACA,OACA,QACA,kBACM;AACN,QAAM,OAAO,MAAM,QAAQ,mBAAmB,KAAK;AACnD,MAAI,MAAM;AACR,QAAI,aAAa,IAAI,IAAI,GAAG;AAC1B,mBAAa,IAAI,IAAI,GAAG,KAAK,KAAK;IACpC,OAAO;AACL,mBAAa,IAAI,MAAM,CAAC,KAAK,CAAC;IAChC;EACF;AAEA,MAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,eAAW,cAAc,QAAQ;AAC/B,iBAAW,SAAS;AACpB,kBAAY,cAAc,YAAY,WAAW,cAAc,WAAW,UAAU,gBAAgB;IACtG;EACF;AACF;AAEA,SAAS,eACP,cACA,WAC4B;AAC5B,QAAM,SAAS,aAAa,IAAI,SAAS;AAEzC,MAAI,QAAQ;AACV,QAAI,OAAO,SAAS,GAAG;AACrB,YAAM,IAAI,MAAM,8BAA8B,SAAS,+CAAoD;IAC7G;AAEA,WAAO,OAAO,CAAC;EACjB;AAEA,SAAO;AACT;AAyBA,SAAS,aACP,UACA,UAAuC,CAAC,GAC1B;AACd,MAAI,EAAE,oBAAoB,WAAW;AACnC,UAAM,IAAI,UAAU,qCAAqC;EAC3D;AAEA,QAAMC,SAAQ,oBAAI,IAA8B;AAChD,QAAM,eAAe,oBAAI,IAAmC;AAE5D,SAAO,CAAC,WAAW,WAAW;AAC5B,QAAI,QAAQ,eAAe,cAAc,SAAS;AAClD,QAAI,CAAC,OAAO;AACV,mBAAa,MAAM;AACnB,kBAAY,cAAc,SAAS,MAAM,SAAS,KAAK,YAAY,QAAQ,gBAAgB;AAE3F,cAAQ,eAAe,cAAc,SAAS;AAC9C,UAAI,CAAC,OAAO;AACV,cAAM,IAAI,MAAM,UAAU,SAAS,aAAa;MAClD;IACF;AAEA,QAAI,SAAuC,MAAM,WAAWA,OAAM,IAAI,MAAM,QAAQ,IAAI;AACxF,QAAI,CAAC,QAAQ;AACX,UAAI,WAAW,aAAa,KAAK;AACjC,UAAI,KAAK,MAAM;AACf,aAAO,IAAI;AACT,cAAM,OAAO,aAAa,EAAE;AAC5B,YAAI,MAAM;AACR,qBAAW,GAAG,KAAK,QAAQ,QAAQ,EAAE,CAAC,IAAI,SAAS,QAAQ,QAAQ,EAAE,CAAC;QACxE;AACA,aAAK,GAAG;MACV;AACA,YAAM,SAAS,MAAM,QAAQ;AAC7B,YAAM,OAA6B,uBAAO,OAAO,IAAI;AACrD,iBAAW,QAAQ,QAAQ;AACzB,YAAI,CAAC,SAAS,IAAI,GAAG;AACnB,eAAK,KAAK,IAAI,IAAI;QACpB;MACF;AACA,eAAS,EAAE,MAAM,OAAO;AACxB,MAAAA,OAAM,IAAI,UAAU,MAAM;AAC1B,YAAM,WAAW;IACnB;AAEA,UAAM,SAAS,iBAAiB,OAAO,QAAQ,EAAE,QAAQ,oBAAoB,GAAG,QAAQ,CAAC;AACzF,QAAI,MAAM,OAAO,MAAM,KAAK;AAE5B,QAAI,QAAQ,wBAAwB,QAAQ;AAC1C,YAAM,cAAuC,CAAC;AAC9C,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AACjD,YAAI,EAAE,OAAO,OAAO,SAAS,OAAO;AAClC,sBAAY,GAAG,IAAI;QACrB;MACF;AACA,YAAM,QAAQ,QAAQ,qBAAqB,WAAwB;AACnE,UAAI,OAAO;AACT,eAAO,MAAM,WAAW,GAAG,IAAI,QAAQ,IAAI,KAAK;MAClD;IACF;AAEA,WAAO;EACT;AACF;AAEA,IAAO,uBAAQ;;;AClJf,IAAM,uBACJ;AAEF,IAAM,cAAc,OAAO,UAAU,OAAO,OAAO,QAAQ,OAAO,OAAO,KAAK;AAE9E,SAAS,aAAa;AACpB,WAAS,OAAO;AAId,WAAO;AAAA,EACT;AACA,SAAO,gBAAgB,IAAI;AAC7B;AAEA,SAAS,oBAAoB;AAC3B,MAAI;AACF,QAAI,wBAAwB,GAAG;AAC7B,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,YAAY,GAAG;AAClB,aAAO;AAAA,IACT;AAEA,QAAI,aAAa;AACf,aAAO,CAAC,qBAAqB;AAAA,IAC/B;AAEA,WAAO,CAAC,WAAW;AAAA,EACrB,SAASC,IAAG;AAEV,WAAO;AAAA,EACT;AACF;AAEA,SAAS,0BAA0B;AACjC,SAAO,aAAa,QAAQ,8BAA8B;AAC5D;AAEA,SAAS,cAAc;AACrB,SAAQ,CAAC,aAAY,WAAW,EAAE,QAAQ,OAAO,SAAS,QAAQ,KAAK;AACzE;AAEA,SAAS,uBAAuB;AAC9B,MAAI,aAAa;AACf,UAAM,qBAAqB,OAAO,KAAK,WAAW,EAC/C,IAAI,SAAO,YAAY,GAAG,CAAC,EAC3B,OAAO,YAAU,OAAO,cAAc;AACzC,QAAI,mBAAmB,SAAS,GAAG;AACjC,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAEA,SAAS,gBAAgB,UAAU,MAAM;AACvC,MAAI,OAAO,aAAa,YAAY;AAClC;AAAA,EACF;AAEA,QAAM,QAAQ,qBAAqB,KAAK,SAAS,SAAS,CAAC;AAC3D,MAAI,OAAO;AACT,QAAI;AAEF,iBAAW,IAAI,SAAS,MAAM,CAAC,CAAC;AAAA,IAClC,SAASA,IAAG;AAEV,cAAQ,IAAI,8DAA8DA,EAAC;AAAA,IAC7E;AAAA,EACF;AAEA,SAAO,SAAS,IAAI;AACtB;AAIA,OAAO,QAAQ,IAAI,OAAO,QAAQ,KAAK,CAAC;AAcjC,IAAM,uBAAuB,SAAS,UAAU,MAAM;AAC3D,MAAI,OAAO,OAAO,iBAAiB;AACjC,WAAO,gBAAgB,UAAU,IAAI;AAAA,EACvC;AACF;AAEA,IAAI,OAAO,OAAO,oBAAoB,QAAW;AAC/C,SAAO,OAAO,kBAAkB,kBAAkB;AACpD;;;AClFA,SAAS,0BAA0B;AAgenC;AAEO,IAAM,kBAAkB,WAAW;AACxC,MAAI,OAAO,yBAAyB,YAAY;AAC9C,WAAO,qBAAqB,uBAAuB;AAAA,EACrD;AACF;;;ACvfO,SAAS,aAAa,SAAS,YAAa,OAAO,WAAP,OAAO,SAAW,CAAC,IAAI;AACxE,YAAU,kBAAV,UAAU,gBAAkB,CAAC;AAC7B,YAAU,cAAc,KAAK;IAC3B,IAAI,UAAU,GAAG,gBAAQ,IAAI,OAAO,KAAK;IACzC,SAAS;EACX,CAAC;AACH;ACFA,aAAa;AAEb,gBAAgB;;;ACNhB,IAAM,cAAc,CAAC,SAAkB;AACrC,QAAM,OAAO,iBAAiB,IAAI,EAAE,iBAAiB,gBAAgB;AACrE,SAAO,QAAQ,SAAS;AAC1B;AAEA,IAAM,mBAAmB,CAAC,MAAe,OAAmB;AAC1D,QAAM,WAAW,MAAM;AACrB,SAAK,oBAAoB,gBAAgB,QAAQ;AACjD,OAAG;EACL;AACA,OAAK,iBAAiB,gBAAgB,QAAQ;AAChD;AAEA,eAAe,QAAQ,MAAe,WAAkC;AACtE,OAAK,UAAU,IAAI,SAAS;AAE5B,SAAO,MAAM,IAAI,QAAQ,CAAC,YAAwB;AAChD,QAAI,YAAY,IAAI,GAAG;AACrB,YAAM,OAAO,KAAK,sBAAsB;AACxC,YAAM,OAAO,WAAW,KAAK,SAAS,KAAK,GAAG,cAAc,KAAK,QAAQ,KAAK,IAAI;AAClF,WAAK,aAAa,SAAS,uBAAuB,IAAI,EAAE;AACxD,uBAAiB,MAAM,MAAM;AAC3B,aAAK,UAAU,OAAO,SAAS;AAC/B,aAAK,gBAAgB,OAAO;AAC5B,gBAAQ;MACV,CAAC;IACH,OAAO;AACL,WAAK,UAAU,OAAO,SAAS;AAC/B,cAAQ;IACV;EACF,CAAC;AACH;AAEA,IAAO,kBAAQ;;;ACjBR,SAAS,YAAsD,OAA2B;AAC/F,MAAI,CAAC,SAAS,CAAC,SAAS,MAAM,IAAI,GAAG;AACnC,UAAM,IAAI;MACR,IAAI,kGAAkG;IACxG;EACF;AAEA,MACE,CAAC,WAAW,MAAM,MAAM,KACxB,CAAC,MAAM,QAAQ,MAAM,QAAQ,KAC7B,CAAC,WAAW,MAAM,QAAQ,KAC1B,CAAC,SAAS,MAAM,SAAS,KACzB,CAAC,SAAS,MAAM,QAAQ,GACxB;AACA,UAAM,IAAI;MACR;QACE,0BAA0B,MAAM,IAAI;MAEtC;IACF;EACF;AAEA,MAAI,MAAM,UAAU;AAClB,KAAC,UAAU,WAAW,EAAE,QAAQ,CAAC,mBAAmB;AAClD,UAAI,kBAAkB,OAAO;AAC3B,gBAAQ;UACN;YACE,iBAAiB,OAAO,MAAM,IAAI,CAAC,8BAA8B,cAAc,2FACA,cAAc;UAC/F;QACF;MACF;IACF,CAAC;EACH;AACF;AAEO,SAAS,aACd,QACM;AACN,UAAQ,MAAM,EAAE,QAAQ,CAAC,UAAU,YAAY,KAAK,CAAC;AACvD;AAEO,SAAS,uBAAiE;EAC/E,MAAMC;EACN,GAAG;AACL,GAAyD;AACvD,SAAO;AACT;AAEO,SAAS,qBACd,UACA,QACQ;AAER,QAAM,OAAO,OAAO;AACpB,SAAO,OAAO,IAAI,IAAI,SAAS,QAAQ,QAAQ,EAAE,GAAG,IAAI,EAAE,WAAW;AACvE;AAEO,SAAS,eAAe,WAA8D;AAC3F,SAAO,UACJ,IAAI,CAAC,aAAa,SAAS,IAAI,EAC/B,OAAO,CAACC,IAAGC,OAAM;AAChB,QAAIA,GAAE,QAAQ;AACZ,aAAO,GAAGD,GAAE,QAAQ,QAAQ,EAAE,CAAC,IAAIC,GAAE,QAAQ,QAAQ,EAAE,CAAC;IAC1D;AACA,WAAOD;EACT,GAAG,EAAE;AACT;AAEO,SAASE,cAAuD,OAA+C;AACpH,SAAO,eAAe,MAAM,IAAI,CAAC,cAAc,UAAU,KAAK,CAAC;AACjE;AAqBO,SAAS,eACd,EAAE,QAAQ,CAAC,GAAG,OAAO,IAAI,SAAS,CAAC,GAAG,WAAW,IAAI,cAAc,UAAU,SAAS,GAAG,GACzF,OACsB;AACtB,QAAM,SAAS,MAAM,IAAI,CAAC,SAAS,KAAK,KAAK;AAC7C,SAAO;IACL,SAAS,UAAU,WAAW;IAC9B,QAAQ,CAAC,aAAa,CAAC,MACrB,WAAW,qBAAqB,QAAQA,cAAa,KAAK,CAAC,EAAE,EAAE,GAAG,QAAQ,GAAG,WAAW,CAAsC,GAAG,QAAQ,IAAI;IAC/I;IACA;IACA;IACA;IACA,OAAO,UAAU,MAAM,QAAQ,MAAM,IAAI,OAAO,GAAG,EAAE,IAAI,WAAc;IACvE;IACA;IACA,cAAc,IAAI,gBAAgB,MAAM;EAC1C;AACF;AAEO,SAAS,eACd,SACA,UACgB;AAChB,QAAM,SAAS,EAAE,GAAG,QAAQ,OAAO;AACnC,SAAO;IACL,UAAU;MACR,MAAM,QAAQ;MACd;MACA;IACF;EACF;AACF;AAEO,SAAS,cACd,SACA,SACG;AACH,UAAQ,WAAW,eAAe,OAAO;AAEzC,MAAI,QAAQ,OAAO;AACjB,UAAM,QAAQ,QAAQ,MAAM,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE,QAAQ,QAAQ,KAAK;AAC3E,YAAQ,MAAM,KAAK,EAAE,UAAU;EACjC;AAEA,SAAO;AACT;AAEO,SAAS,UACd,UACA,YACG,MACY;AACf,MAAI,OAAO,aAAa,YAAY;AAClC,WAAO,SAAS,MAAM,SAAS,IAAI;EACrC;AAEA,SAAO;AACT;AAEO,SAAS,MAId,IAAa,QAAuB,MAA6D;AACjG,SAAO,CAAC,WAAyB;AAC/B,QAAI,UAAU,SAAS,MAAM,MAAM,YAAY,UAAU,cAAc,SAAS;AAC9E,aAAO;IACT;AAEA,WAAO,UAAU,MAAM,EAAE,GAAG,KAAM,GAAG,IAAI;EAC3C;AACF;AAEO,SAAS,mBACd,aACA,OACM;AACN,MAAI,CAAC,MAAM,QAAQ,WAAW,KAAK,CAAC,SAAS,WAAW,GAAG;AACzD,UAAM,IAAI;MACR;QACE,4CAA4C,OAAO,MAAM,IAAI,CAAC,uCAAuC;UACnG;QACF,CAAC;MACH;IACF;EACF;AAEA,QAAM,WAAW,QAAQ,WAAW;AACpC,WAAS,QAAQ,CAAC,UAAU,YAAY,KAAK,CAAC;AAC9C,QAAM,aAAa;AACrB;AAEO,SAAS,gBAAgB,MAAc,QAA0B;AACtE,SAAO,CAAC,OAAO,cAAc,IAAI,YAAY,iBAAiB,IAAI,IAAI,EAAE,YAAY,SAAS,MAAM,OAAO,CAAC,CAAC;AAC9G;AAEO,SAAS,SAAS,OAAwB;AAC/C,MAAI,OAAO,UAAU,UAAU;AAC7B,WAAO,OAAO,KAAK;EACrB;AAEA,QAAM,CAAC,aAAa,SAAS,IAAI,YAAY,KAAK,OAAO,KAAK,CAAC,KAAK,CAAC;AACrE,MAAI,eAAe,YAAY,eAAe,SAAS;AACrD,WAAO,GAAG,UAAU,IAAI,KAAK,UAAU,KAAK,CAAC;EAC/C;AACA,SAAO;AACT;;;ACnNA,SAAS,gBAAgB,QAA2B;AAGlD,QAAM,EAAE,MAAM,SAAS,IAAI;AAC3B,QAAM,cAAc,aAAa,WAAW,SAAS;AACrD,QAAM,eAAe,aAAa,YAAY,SAAS;AACvD,QAAM,OACJ,eAAe,eACX,OAAO,WACP,OAAO;AACb,SAAO,GAAG,QAAQ,KAAK,IAAI;AAC7B;AAEA,SAAS,sBAAsBC,IAAoC;AACjE,MAAI,EAAEA,cAAa,UAAU;AAC3B,WAAO;EACT;AAEA,SAAOA,GAAE,SAAS,YAAY;AAChC;AAUA,SAAS,+BAA+B,OAAgC;AAEtE,MAAI,MAAM,kBAAkB;AAC1B;EACF;AAGA,MAAI,MAAM,WAAW,GAAG;AACtB;EACF;AAGA,MAAI,MAAM,YAAY,MAAM,WAAW,MAAM,UAAU,MAAM,SAAS;AACpE;EACF;AAGA,MAAI,kBAAkB,MAAM;AAC5B,QAAM,OAAO,iBAAiB,aAAa,MAAM,aAAa,IAAM,MAAqB,QAAQ,CAAC;AAKlG,WAASC,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AACpC,UAAM,SAAS,KAAKA,EAAC;AACrB,QAAI,cAAc,UAAW,OAAmB,SAAS,YAAY,MAAM,KAAK;AAC9E,wBAAkB;AAClB;IACF;EACF;AAEA,SAAO,mBAAmB,2BAA2B,QAAQ,sBAAsB,eAAe,MAAM,KAAK;AAC3G,sBAAkB,gBAAgB;EACpC;AAGA,MAAI,CAAC,mBAAmB,sBAAsB,eAAe,MAAM,KAAK;AACtE;EACF;AAEA,QAAM,SAAS;AAGf,MAAI,OAAO,UAAU,OAAO,OAAO,YAAY,MAAM,SAAS;AAC5D;EACF;AAGA,MAAI,OAAO,aAAa,UAAU,GAAG;AACnC;EACF;AAGA,MAAI,OAAO,aAAa,eAAe,GAAG;AACxC;EACF;AAGA,MAAI,OAAO,aAAa,OAAO,SAAS,YAAY,OAAO,SAAS,IAAI;AACtE;EACF;AAIA,QAAM,SAAS,OAAO,UAAU,gBAAgB,MAAM;AACtD,MAAI,WAAW,OAAO,SAAS,QAAQ;AACrC;EACF;AAGA,QAAM,EAAE,MAAM,UAAU,OAAO,IAAI;AACnC,MAAI,gBAAgB,MAAM,EAAE,MAAM,UAAU,OAAO,CAAC,KAAK,iBAAiB,YAAY;AACpF,UAAM,eAAe;AAGrB,QAAI,MAAM,SAAS,SAAS;AAC1B,aAAO,SAAS,GAAG,CAAC;IACtB;EACF;AACF;AASA,IAAM,QAA2B;EAC/B,WAAW;AACT,WAAO,SAAS,iBAAiB,SAAS,8BAA8B;EAC1E;EAEA,aAAa;AACX,WAAO,SAAS,oBAAoB,SAAS,8BAA8B;EAC7E;AACF;AAEA,IAAO,gBAAQ;;;AChIf,SAAS,kCAAkC,OAAsB;AAC/D,MAAI,MAAM,UAAU,wBAAwB;AAC1C;EACF;AACA,QAAM,EAAE,MAAM,UAAU,OAAO,IAAI,OAAO;AAC1C,kBAAgB,MAAM,EAAE,MAAM,UAAU,OAAO,CAAC;AAClD;AAMA,IAAM,WAA8B;EAClC,WAAW;AACT,WAAO,iBAAiB,YAAY,iCAAiC;EACvE;EAEA,aAAa;AACX,WAAO,oBAAoB,YAAY,iCAAiC;EAC1E;AACF;AAEA,IAAO,mBAAQ;;;ACrBf,IAAI,WAAyC,CAAC;AAE9C,IAAM,mBAAmB;EACvB;EACA;AACF;AAIO,SAAS,sBAAsB,cAA4C,CAAC,GAAS;AAC1F,WAAS,QAAQ,CAAC,YAAY,QAAQ,WAAW,CAAC;AAElD,cAAY,QAAQ,CAAC,YAAY,QAAQ,SAAS,CAAC;AAEnD,aAAW;AACb;;;AC6BA,IAAM,qBAAqB;AAE3B,SAAS,UAAyB;AAChC,SAAO,EAAE,QAAQ,KAAK;AACxB;AAEA,IAAM,cAA4B;EAChC,YAAY;EACZ,QAAQ,CAAC;EACT,OAAO;IACL,aAAa;IACb,UAAU,CAAC;IACX,MAAM;IACN,SAAS;AACP,aAAO;IACT;EACF;EACA,UAAU;;EAEV,MAAM,OAAO;AACX,WAAO;EACT;AACF;AArEA;AAoGO,IAAM,SAAN,cAA2F,SAIhG;;;;;;;;;;;;;EAyCA,YAAY,QAA4C,SAA+B;AACrF,UAAM,cAAc,SAAS,KAAK,cAAc,MAAM;AACtD,UAAM,WAAW,aAAa,aAAa,MAAM;AACjD,UAAM,CAAC,GAAG;MACR,SAAS,WAAW,IAAI,IAAI,UAAU,SAAS,GAAG,EAAE,KAAK,QAAQ,WAAW,EAAE,IAAI;MAClF,GAAG;MACH,cAAc,OAAO,YAAY,MAAM,sBAAK,oCAAL,WAAmB;IAC5D,CAAC;AApDE;AAWL;;;;;;oCAAW,eAAe,EAAE,UAAU,KAAK,CAAC;AAO5C;;;;;iCAAuC,QAAQ,QAAQ,KAAK,QAAQ;AAE3D,uCAAiB,oBAAI,QAAiB;AACtC,yCAAmB,oBAAI,QAAiB;AACxC,gDAA0B,sBAAK,yCAAmB,KAAK,IAAI;AAEpE,6CAAuB;AACvB;AACQ;AAER;AAEA,0CAAsC;AACtC,6CAAyC;AAuBvC,0BAAsB,OAAO,OAAO,gBAAgB,CAAC;AAErD,SAAK,UAAU,MAAM;AACrB,SAAK,UAAU;EACjB;;;;;;;;;;;;;EA0EA,UAAU,QAAkD;AAC1D,QAAI,QAAQ;AACV,4BAAK,oCAAL,WAAmB;IACrB;AACA,uBAAK,SAAU;EACjB;;;;;;EAOA,YAA2D;AACzD,WAAO,mBAAK;EACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFA,MAAe,UACb,QACA,aAAa,OACkB;AAC/B,SAAK,oBAAoB;AACzB,uBAAK,aAAc;AACnB,iBAAa,MAAM;AACnB,UAAM,UAAU,MAAM;AACtB,QAAI,CAAC,YAAY;AACf,4BAAK,yCAAL;IACF;AACA,WAAO,MAAM,KAAK;EACpB;EAEmB,UAAU,QAA8E;AACzG,iBAAa,MAAM;AACnB,WAAO,MAAM,UAAU,MAAM;EAC/B;;;;;;;;;;;;;;;;;;;;EAqBA,MAAM,OACJ,mBACA,sBAA+B,OACA;AAC/B,uBAAK,sBAAL,mBAAK,wBAAwB;AAC7B,UAAM,WAAW,mBAAK;AACtB,UAAM,UAAU;MACd,GAAI;MACJ,GAAI,SAAS,iBAAiB,IAAI,EAAE,MAAM,IAAI,QAAQ,IAAI,UAAU,kBAAkB,IAAI;MAC1F,YAAY;IACd;AAEA,SAAK,QAAQ,sBAAK,gCAAL,WAAe,SAAS;AACrC,WAAO,MAAM,KAAK;EACpB;;;;;;;EAwgBA,YAAkB;AAChB,WAAO,iBAAiB,oBAAoB,mBAAK,wBAAuB;EAC1E;;;;;EAMA,cAAoB;AAClB,WAAO,oBAAoB,oBAAoB,mBAAK,wBAAuB;EAC7E;;;;;;;;;;;;;;;;;EA+BA,OAAO,eAAeC,WAA8C;AAClE,0BAAsBA,SAAQ;EAChC;;;;;;;;;;;;;;;;;EAkBA,WAAW,MAAc,QAAgC;AACvD,QAAI,CAAC,mBAAK,cAAa;AACrB,yBAAK,aAAc,qBAAa,MAAM;QACpC,iBAAiB,OAA2B;AAC1C,iBAAO,eAAe,SAAS,OAAO,MAAM,cAAc,WACrD,MAA0C,YAC3C;QACN;MACF,CAAC;IACH;AACA,WAAO,qBAAqB,mBAAK,aAAL,WAAiB,MAAM,UAAU,SAAY,IAAI;EAC/E;;;;;;;;;;;EAYA,WAAW,MAAc,QAAgC;AACvD,WAAO;MACL,QAAQ,IAAI,EAAG,UAAgE,MAAS;MACxF;IACF;EACF;;;;;;;;;;;EAYA,OAAO,GAAG,MAAwC;AAChD,UAAM,EAAE,UAAU,QAAQ,KAAK,IAAI,SAAS,IAAI,IAC5C,IAAI,IAAI,MAAM,UAAU,IACxB;AACJ,WAAO,gBAAgB,MAAM,EAAE,UAAU,QAAQ,KAAK,CAAC;EACzD;AACF;AAt3BW;AACA;AACA;AAET;AACA;AAGA;AAEA;AACA;AA/BK;AA4DC,kBAAA,eAAc,SAAyE;AAC3F,QAAM,EAAE,MAAM,IAAI;AAElB,MAAI,WAAW,MAAM,QAAQ,GAAG;AAC9B,QAAI,WAAW,MAAM,MAAM,SAAS,uBAAuB,OAAO,CAAC;AAInE,QAAI,CAAC,WAAW,MAAM,QAAQ,GAAG;AAE/B,OAAC,EAAE,SAAS,IAAI;IAClB;AACA,uBAAmB,UAAU,KAAK;EACpC;AAEA,QAAM,WAAqB;IACzB,WAAW,CAAC,cAAsB;AAChC,YAAM,UAAU,SAAS,cAAc,SAAS;AAChD,yBAAK,kBAAiB,IAAI,OAAO;AACjC,aAAO;IACT;IACA;IACA,UAAU,CAAC,SAAS,eAAe,SAAS,IAAI;EAClD;AAEA,SAAO,MAAM,QAAQ,QAAQ,EAC1B,KAAK,YAAY;AAChB,QAAI,sBAAK,sCAAL,WAAqB,UAAU;AAEjC,aAAO,MAAM,UAAU,MAAM,QAAQ,OAAO,SAAS,QAAQ;IAC/D;EACF,CAAC,EACA,KAAK,CAAC,WAAW;AAChB,QAAI,UAAU,SAAS,OAAO,WAAW,YAAY,OAAO,WAAW,WAAW;AAIhF,UACE,kBAAkB,eAClB,WAAW,kBACV,SAAS,MAAM,KAAK,cAAc,QACnC;AACA,eAAO;MACT;IACF;AAEA,QAAI,SAAS,MAAM,QAAQ,GAAG;AAC5B,aAAO,SAAS,SAAS,MAAM,QAAQ;IACzC;EACF,CAAC,EACA,KAAK,CAAC,WAAW;AAChB,QAAI,UAAU,MAAM;AAClB,aAAO;IACT;AACA,QAAI,SAAS,MAAM,SAAS,GAAG;AAC7B,aAAO,SAAS,UAAU,MAAM,SAAS;IAC3C;EACF,CAAC;AACL;AAmKM,cAAA,eAAU,SAA6B,qBAA8B;AACzE,QAAM,EAAE,YAAY,SAAS,IAAI;AACjC,MAAI;AAEF,UAAM,MAAM,MAAM,KAAK,QAAQ,OAAO;AAMtC,UAAM,mBAAmB,MAAM,sBAAK,yCAAL,WAAwB;AAEvD,QAAI,CAAC,sBAAK,sCAAL,WAAqB,mBAAmB;AAC3C,aAAO,KAAK;IACd;AAEA,UAAM,kBAAkB,KAAK;AAG7B,QAAI,qBAAqB,iBAAiB;AAGxC,4BAAK,4CAAL,WAA2B,iBAAiB;AAC5C,aAAO,KAAK;IACd;AAEA,SAAK,WAAW,eAAe,gBAAgB;AAE/C,QAAI,qBAAqB;AAGvB,4BAAK,4CAAL,WAA2B,kBAAkB,aAAa;IAC5D;AAEA,oBAAgB,oBAAoB;MAClC,QAAQ;MACR,UAAU,KAAK;IACjB,CAAC;AAGD,QAAI,iBAAiB,cAAc;AACjC,4BAAK,6CAAL,WAA4B,kBAAkB;AAC9C,WAAK,oBAAoB;AACzB,aAAO,KAAK;IACd;AAEA,0BAAK,2CAAL,WAA0B,kBAAkB;AAC5C,UAAM,gBAAgB,sBAAK,uCAAL,WAAsB;AAE5C,0BAAK,gDAAL,WAA+B;AAC/B,0BAAK,gDAAL,WAA+B,kBAAkB;AAEjD,UAAM;AAEN,QAAI,sBAAK,sCAAL,WAAqB,mBAAmB;AAI1C,4BAAK,iDAAL;AAEA,WAAK,oBAAoB;AACzB,aAAO,KAAK;IACd;EACF,SAAS,OAAgB;AACvB,QAAI,aAAa,mBAAK,uBAAsB;AAC1C,UAAI,qBAAqB;AACvB,8BAAK,4CAAL,WAA2B,KAAK;MAClC;AAEA,iBAAW,SAAS,mBAAK,UAAS,YAAY,CAAC,GAAG;AAChD,cAAM,OAAO;MACf;AAEA,WAAK,WAAW,eAAe,OAAO,OAAO,SAAS,EAAE,UAAU,KAAK,CAAC,CAAC;AACzE,sBAAgB,SAAS;QACvB,QAAQ;QACR;QACA,GAAG;MACL,CAAC;AACD,YAAM;IACR;EACF;AAEA,SAAO,KAAK;AACd;AAaM,uBAAA,eACJ,qCACA,yBAA6C,qCAChB;AAC7B,QAAM,wBAAwB,MAAM,sBAAK,6DAAL,WAA4C;AAEhF,QAAM,oBAAoB,0BAA0B;AACpD,QAAM,qCAAqC,oBACvC,wBACA;AAEJ,QAAM,cAAc,qBAAqB,eAAe,sBAAsB,SAAS,CAAC,CAAC,GAAG,IAAI;AAChG,QAAM,UAAU,gBAAgB,sBAAsB;AAGtD,QAAM,uBAAuB,OAC3B,SACA,SAAkC,QAAQ,OAC1C,eAC8B;AAC9B,UAAMC,eAAc,MAAM,QAAQ,KAAK,OAAO,QAAQ,UAAU;AAEhE,QAAIA,iBAAgB,QAAQA,iBAAgB,gBAAgB;AAE1D,UAAI,SAAS;AAEX,eAAO;MACT,WAAW,OAAO,UAAU,MAAM;AAEhC,eAAO,MAAM,qBAAqB,SAAS,OAAO,QAAQA,YAAW;MACvE;AACA,aAAOA;IACT;AAEA,WAAOA;EACT;AAEA,QAAM,cAAc,MAAM,qBAAqB,qBAAqB;AAEpE,MAAI,eAAe,QAAQ,gBAAgB,gBAAgB;AACzD,UAAM;MACJ;IACF;EACF;AAEA,SAAO,gBAAgB,wBACnB,MAAM,sBAAK,yCAAL,WAAwB,oCAAoC,eAClE,MAAM,sBAAK,kDAAL,WAAiC;AAC7C;AAEM,2CAAA,eAAuC,SAA0D;AACrG,QAAM,EAAE,OAAO,IAAI;AACnB,MAAI,kBAAkB,aAAa;AACjC,kBAAc,SAAS,MAAqC;AAC5D,WAAO;EACT,WAAW,UAAU,cAAc,QAAQ;AACzC,UAAM,MAAM,MAAM,sBAAK,gCAAL,WAAe,OAAO,UAAU,QAAQ,iBAAiB,QAAQ;AACnF,WAAO,MAAM,sBAAK,6DAAL,WAA4C;EAC3D;AAEA,QAAM,kBAAkB,QACpB,SACA,IAAI;IACF;MACE,6CAA6C,QAAQ,QAAQ,0DACJ,SAAS,MAAM,CAAC;IAE3E;EACF;AACN;AAEM,gCAAA,eAA4B,sBAAuE;AACvG,SAAO,MAAM,sBAAK,4CAAL,WAA2B,sBAAsB,KAAK,OAAO,mBAAmB;AAC3F,QAAI,mBAAmB,KAAK,qBAAqB,mBAAmB,sBAAsB;AACxF,aAAO;IACT;AACA,WAAO,MAAM,sBAAK,yCAAL,WAAwB;EACvC,CAAC;AACH;AAEM,0BAAA,eAAsB,YAA6D;AACvF,QAAM,kBAAmB,KAAK,qBAAqB,CAAC;AACpD,QAAM,gBAAgB,gBAAgB,SAAS,CAAC;AAChD,QAAM,WAAW,WAAW,SAAS,CAAC;AAEtC,MAAI,YAAmC,QAAQ,QAAQ,MAAS;AAChE,QAAM,WAAW,CAAC,aAAqB,eAAe,YAAY,QAAQ;AAE1E,aAAW,uBAAuB;AAClC,aAAW,eAAe;AAC1B,MAAI,cAAc,QAAQ;AACxB,aAASC,KAAI,GAAGA,KAAI,KAAK,IAAI,cAAc,QAAQ,SAAS,MAAM,GAAG,WAAW,wBAAwBA,MAAK;AAC3G,UACE,cAAcA,EAAC,EAAE,UAAU,SAASA,EAAC,EAAE,SACtC,cAAcA,EAAC,EAAE,SAAS,SAASA,EAAC,EAAE,QAAQ,cAAcA,EAAC,EAAE,YAAY,SAASA,EAAC,EAAE,WACxF,CAAC,sBAAK,yCAAL,WACC,cAAcA,EAAC,EAAE,SACjB,SAASA,EAAC,EAAE,UAEd;AACA;MACF;IACF;AAGA,eAAW;IAET,SAAS,WAAW,cAAc,UAClC,WAAW,yBAAyB,SAAS;IAE7C,sBAAK,yCAAL,WAAwB,WAAW,QAAQ,gBAAgB;AAE7D,QAAI,WAAW,cAAc;AAE3B,eAASA,KAAI,SAAS,SAAS,GAAGA,MAAK,GAAGA,MAAK;AAC7C,oBAAY,sBAAK,iDAAL,WAAgC,WAAW,YAAY,EAAE,QAAQ,GAAG,cAAcA,EAAC;MACjG;AAEA,eAASA,KAAI,GAAGA,KAAI,SAAS,QAAQA,MAAK;AACxC,oBAAY,sBAAK,iDAAL,WACV,WACA,YACA;UACE;UACA;QACF,GACA,SAASA,EAAC;AAEZ,sBAAcA,EAAC,EAAE,QAAS,WAAW,eAAe,YAAY,cAAcA,EAAC,EAAE,KAAK;MACxF;IACF,OAAO;AAEL,eAASA,KAAI,cAAc,SAAS,GAAGA,MAAK,WAAW,sBAAsBA,MAAK;AAChF,oBAAY,sBAAK,iDAAL,WAAgC,WAAW,YAAY,EAAE,QAAQ,GAAG,cAAcA,EAAC;MACjG;IACF;EACF;AAEA,MAAI,CAAC,WAAW,cAAc;AAC5B,aAASA,KAAI,GAAGA,KAAI,SAAS,QAAQA,MAAK;AACxC,UAAIA,KAAI,WAAW,sBAAsB;AACvC,YAAIA,KAAI,cAAc,UAAU,cAAcA,EAAC,EAAE,SAAS;AACxD,wBAAcA,EAAC,EAAE,QAAS,WAAW,eAAe,YAAY,cAAcA,EAAC,EAAE,KAAK;QACxF;MACF,OAAO;AACL,oBAAY,sBAAK,iDAAL,WACV,WACA,YACA;UACE;UACA;QACF,GACA,SAASA,EAAC;AAEZ,YAAI,SAASA,EAAC,EAAE,SAAS;AACvB,mBAASA,EAAC,EAAE,QAAS,WAAW,eAAe,YAAY,SAASA,EAAC,EAAE,KAAK;QAC9E;MACF;IACF;EACF;AACA,SAAO,MAAM,UAAU,KAAK,OAAO,oBAAkC;AACnE,QAAI,mBAAmB,SAAS,eAAe,GAAG;AAChD,UAAI,YAAY,mBAAmB,KAAK,mBAAmB;AACzD,aAAK,kBAAkB,aAAa,WAAW;AAC/C,eAAO,KAAK;MACd;AACA,UAAI,cAAc,iBAAiB;AACjC,eAAO,MAAM,sBAAK,gCAAL,WAAe,gBAAgB,UAAU,WAAW,iBAAiB,WAAW;MAC/F;IACF;AACA,WAAO;EACT,CAAC;AACH;AAEM,+BAAA,eACJ,WACA,YACA,UACA,cACuB;AACvB,QAAMC,YAAW,eAAe,UAAU;AAE1C,MAAI,SAAuB,MAAM;AAEjC,MAAI,sBAAK,sCAAL,WAAqB,aAAa;AACpC,UAAM,sBAAsB,MAAM,iBAAiB,aAAa,SAASA,WAAU,UAAU,IAAI;AACjG,aAAS,oBAAoB,MAAM;EACrC;AAEA,MAAI,EAAE,SAAS,MAAM,KAAK,cAAc,SAAS;AAC/C,WAAO;EACT;AACF;AAEM,+BAAA,eACJ,WACA,YACA,UACA,cACuB;AACvB,QAAMA,YAAW,eAAe,YAAY,aAAa,KAAK;AAC9D,QAAM,SAAS,MAAM;AAErB,MAAI,sBAAK,sCAAL,WAAqB,aAAa;AACpC,UAAM,sBAAsB,MAAM,iBAAiB,aAAa,SAASA,WAAU,UAAU,IAAI;AACjG,WAAO,oBAAoB,MAAM;EACnC;AACF;AAEA,uBAAA,SAAmB,SAAmB,cAAiC;AACrE,MAAI,mBAAmB,WAAW,wBAAwB,SAAS;AACjE,WAAO,mBAAK,kBAAiB,IAAI,OAAO,KAAK,mBAAK,kBAAiB,IAAI,YAAY,IAC/E,QAAQ,cAAc,aAAa,YACnC,YAAY;EAClB;AACA,SAAO;AACT;AAEA,oBAAA,SAAgB,SAA+C;AAC7D,SAAO,QAAQ,eAAe,mBAAK;AACrC;AAMM,cAAA,eACJ,cACA,UAAkB,GAClB,WAAmB,GACgC;AACnD,MAAI,UAAU,oBAAoB;AAChC,UAAM,IAAI,MAAM,IAAI,qCAAqC,aAAa,IAAI,EAAE,CAAC;EAC/E;AAEA,SAAO,MAAM,KAAK,QAAQ;IACxB,GAAI;IACJ,UAAU,KAAK,WAAW,aAAa,UAAU,aAAa,MAAM;IACpE,cAAc,aAAa;IAC3B,iBAAiB,UAAU;IAC3B,YAAY;EACd,CAAC;AACH;AAEA,kBAAA,SAAc,SAAwD,mBAAK,UAAe;AACxF,MAAI,EAAE,kBAAkB,WAAW,kBAAkB,mBAAmB;AACtE,UAAM,IAAI;MACR,IAAI,gFAAgF,MAAM,GAAG;IAC/F;EACF;AACF;;AAGA,0BAAA,SAAsB,EAAE,UAAU,SAAS,IAAI,OAAO,GAAG,GAAmB,SAAyB;AACnG,MAAI,OAAO,SAAS,aAAa,YAAY,OAAO,SAAS,WAAW,UAAU,OAAO,SAAS,SAAS,MAAM;AAC/G,UAAM,cAAc,UAAU,iBAAiB;AAC/C,WAAO,QAAQ,WAAW,EAAE,MAAM,SAAS,OAAO,WAAW,SAAS,IAAI;AAC1E,WAAO,cAAc,IAAI,cAAc,YAAY,EAAE,OAAO,uBAAuB,CAAC,CAAC;EACvF;AACF;AAEA,2BAAA,SACE,SACA,iBAC+C;AAG/C,MAAI,sBAAsB,mBAAK;AAC/B,WAASD,KAAI,GAAGA,MAAK,QAAQ,wBAAwB,IAAIA,MAAK;AAC5D,UAAM,mBAAmB,iBAAiB,QAAQA,EAAC,EAAE;AACrD,QAAI,kBAAkB;AACpB,UAAI,iBAAiB,eAAe,qBAAqB;AACtD,gBAAQ,MAAOA,EAAC,EAAgC,UAAU;AAC3D,8BAAsB;MACxB,OAAO;AACL;MACF;IACF;EACF;AACA,SAAO;AACT;AAEA,yBAAA,SAAqB,SAA6B,iBAA4C;AAC5F,wBAAK,oCAAL;AAIA,wBAAK,8CAAL;AAGA,QAAM,sBAAsB,sBAAK,6CAAL,WAA4B,SAAS;AAKjE,qBAAK,mBAAoB,CAAC;AAC1B,qBAAK,sBAAuB,MAAM,KAAK,qBAAqB,YAAY,CAAC,CAAC,EAAE;;IAE1E,CAACE,OACC,mBAAK,gBAAe,IAAIA,EAAC;IAEzBA,OAAM,QAAQ;EAClB;AAMA,MAAI,gBAAgB;AACpB,WAASF,KAAI,QAAQ,wBAAwB,GAAGA,MAAK,QAAQ,OAAO,UAAU,IAAIA,MAAK;AACrF,UAAM,eAAe,QAAQ,MAAOA,EAAC,EAAE;AACvC,QAAI,cAAc;AAChB,qBAAe,YAAY,YAAY;AACvC,yBAAK,gBAAe,IAAI,YAAY;AACpC,UAAI,kBAAkB,qBAAqB;AACzC,2BAAK,mBAAkB,KAAK,YAAY;MAC1C;AACA,sBAAgB;IAClB;EACF;AACF;AAEA,+BAAA,WAAmC;AACjC,MAAI,mBAAK,uBAAsB;AAC7B,eAAW,WAAW,mBAAK,uBAAsB;AAC/C,cAAQ,OAAO;IACjB;EACF;AACA,qBAAK,sBAAuB;AAC5B,qBAAK,mBAAoB;AAC3B;AAEA,4BAAA,WAAgC;AAC9B,MAAI,mBAAK,yBAAwB,mBAAK,oBAAmB;AACvD,eAAW,WAAW,mBAAK,oBAAmB;AAC5C,cAAQ,OAAO;IACjB;AACA,uBAAK,sBAAuB;AAC5B,uBAAK,mBAAoB;EAC3B;AACF;AAEA,8BAAA,SAA0B,gBAAoC,eAA0C;AACtG,MAAI,CAAC,eAAe,SAAS,eAAe,wBAAwB,MAAM;AACxE;EACF;AAGA,WAASA,KAAI,cAAc,MAAM,SAAS,GAAGA,MAAK,eAAe,sBAAsBA,MAAK;AAC1F,QAAI,CAAC,sBAAK,sCAAL,WAAqB,iBAAiB;AACzC;IACF;AACA,UAAM,mBAAmB,cAAc,MAAMA,EAAC,EAAE;AAChD,QAAI,CAAC,kBAAkB;AACrB;IACF;AACA,QAAI;AACF,YAAMC,YAAW,eAAe,cAAc;AAE9C,gBAAU,iBAAiB,cAAc,kBAAkBA,WAAU,CAAC,GAAoB,IAAI;IAChG,UAAA;AACE,UAAI,mBAAK,uBAAsB,SAAS,gBAAgB,GAAG;AACzD,mBAAW,SAAS,iBAAiB,UAAU;AAC7C,gBAAM,OAAO;QACf;MACF;IACF;EACF;AACF;AAEA,8BAAA,SAA0B,gBAA0C;AAClE,MAAI,CAAC,eAAe,SAAS,eAAe,wBAAwB,MAAM;AACxE;EACF;AAGA,WAASD,KAAI,eAAe,sBAAsBA,KAAI,eAAe,MAAM,QAAQA,MAAK;AACtF,QAAI,CAAC,sBAAK,sCAAL,WAAqB,iBAAiB;AACzC;IACF;AACA,UAAM,mBAAmB,eAAe,MAAMA,EAAC,EAAE;AACjD,QAAI,kBAAkB;AACpB,YAAMC,YAAW,eAAe,gBAAgB,eAAe,MAAMD,EAAC,EAAE,KAAK;AAE7E,gBAAU,iBAAiB,cAAc,kBAAkBC,WAAU,CAAC,GAAG,IAAI;IAC/E;EACF;AACF;AAEM,qBAAA,eAAiB,SAA0D;AAC/E,QAAM,OAAO,mBAAK,wBAAuB,CAAC;AAC1C,QAAM,KAAK,mBAAK,qBAAoB,CAAC;AACrC,QAAM,WAAW,CAAC;AAElB,QAAM,EAAE,QAAQ,CAAC,EAAE,IAAI;AACvB,MAAI;AACJ,WAASD,KAAI,MAAM,SAAS,GAAGA,MAAK,GAAGA,MAAK;AAC1C,QAAI,MAAMA,EAAC,EAAE,MAAM,SAAS;AAC1B,eAAS,MAAMA,EAAC,EAAE,MAAM;AACxB;IACF;EACF;AAEA,MAAI,QAAQ,MAAM,QAAQ;AACxB,UAAM,QAAQ,SAAS,MAAM,KAAK,OAAO,QAAQ,OAAO,QAAQ;AAChE,UAAM,QAAQ,SAAS,MAAM,KAAK,OAAO,QAAQ,OAAO,QAAQ;AAChE,aAAS,KAAK,gBAAQ,MAAM,KAAK,CAAC;AAClC,aAAS,KAAK,gBAAQ,IAAI,KAAK,CAAC;EAClC;AAEA,QAAM,QAAQ,IAAI,QAAQ;AAE1B,SAAO;AACT;AAoBA,uBAAA,SAAmB,OAAqB;AACtC,QAAM,EAAE,UAAU,QAAQ,KAAK,IAC7B,iBAAiB,cAAe,MAAM,SAA4B,OAAO;AAE3E,MAAI,SAAS,KAAK,oBAAoB,QAAQ,CAAC,GAAG;AAChD,QAAI,OAAO,gBAAgB;AACzB,YAAM,eAAe;IACvB;AAEA,SAAK,KAAK,OAAO,EAAE,UAAU,QAAQ,KAAK,GAAG,IAAI;EACnD;AACF;;;AC35BF;AACA;;;ACDA;AACA;AAGO,IAAM,cAAN,cAA0BG,GAAW;AAAA,EAArC;AAAA;AACO,iBAAQ;AACR,gBAAO;AACP,iBAAQ;AACR,uBAAc;AAAA;AAAA,EAE1B,mBAAmB;AACjB,WAAO;AAAA,EACT;AAAA,EAEA,SAAS;AACP,UAAM,QAAgC;AAAA,MACpC,OAAO;AAAA,MACP,MAAM;AAAA,MACN,QAAQ;AAAA,IACV;AAEA,UAAM,UAAU,MAAM,KAAK,KAAK,KAAK,MAAM;AAE3C,WAAO;AAAA,iDACsC,OAAO;AAAA;AAAA,kBAEtC,KAAK,IAAI,WAAW,KAAK,KAAK;AAAA;AAAA,2CAEL,KAAK,WAAW;AAAA;AAAA;AAAA,EAGzD;AACF;AA3Bc;AAAA,EAAXC,GAAS;AAAA,GADC,YACC;AACA;AAAA,EAAXA,GAAS;AAAA,GAFC,YAEC;AACA;AAAA,EAAXA,GAAS;AAAA,GAHC,YAGC;AACA;AAAA,EAAXA,GAAS;AAAA,GAJC,YAIC;AAJD,cAAN;AAAA,EADNC,GAAc,cAAc;AAAA,GAChB;;;ADEN,IAAM,WAAN,cAAuBC,GAAW;AAAA,EACvC,mBAAmB;AACjB,WAAO;AAAA,EACT;AAAA,EAEA,SAAS;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyCT;AACF;AAhDa,WAAN;AAAA,EADNC,GAAc,WAAW;AAAA,GACb;;;AlBEN,IAAM,UAAN,cAAsBC,GAAW;AAAA,EAAjC;AAAA;AAMuB,oBAAmB;AACtC,SAAQ,cAAc,OAAO,SAAS;AAuD/C,SAAQ,cAAc,MAAM;AAC1B,WAAK,cAAc,OAAO,SAAS;AACnC,WAAK;AAAA,QACH,IAAI,YAAY,iBAAiB;AAAA,UAC/B,QAAQ,EAAE,MAAM,KAAK,YAAY;AAAA,UACjC,SAAS;AAAA,UACT,UAAU;AAAA,QACZ,CAAC;AAAA,MACH;AAAA,IACF;AAGA;AAAA,SAAO,WAAW,CAAC,SAAiB;AAElC,YAAM,OACJ,KAAK,aAAa,MACd,OACA,GAAG,KAAK,QAAQ,GAAG,KAAK,QAAQ,QAAQ,EAAE,CAAC;AACjD,aAAO,GAAG,IAAI;AAAA,IAChB;AAAA;AAAA;AAAA,EA/EA,mBAAmB;AACjB,WAAO;AAAA,EACT;AAAA,EAQA,eAAe;AACb,SAAK,SAAS,IAAI,OAAO,KAAK,UAAU,EAAE,SAAS,KAAK,SAAS,CAAC;AAElE,SAAK,OAAO,UAAU;AAAA,MACpB;AAAA,QACE,MAAM;AAAA,QACN,QAAQ,YAAY;AAClB,gBAAM;AAAA,QACR;AAAA,QACA,WAAW;AAAA,MACb;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,QAAQ,YAAY;AAClB,gBAAM;AAAA,QACR;AAAA,QACA,WAAW;AAAA,MACb;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,QAAQ,YAAY;AAClB,gBAAM;AAAA,QACR;AAAA,QACA,WAAW;AAAA,MACb;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,QAAQ,YAAY;AAClB,gBAAM;AAAA,QACR;AAAA,QACA,WAAW;AAAA,MACb;AAAA,MACA,EAAE,MAAM,KAAK,WAAW,YAAY;AAAA,MACpC;AAAA,QACE,MAAM;AAAA,QACN,QAAQ,YAAY;AAClB,gBAAM;AAAA,QACR;AAAA,QACA,WAAW;AAAA,MACb;AAAA,IACF,CAAC;AAED,WAAO,iBAAiB,YAAY,KAAK,WAAW;AAAA,EACtD;AAAA,EAEA,uBAAuB;AACrB,WAAO,oBAAoB,YAAY,KAAK,WAAW;AACvD,UAAM,qBAAqB;AAAA,EAC7B;AAAA,EAuBA,SAAS;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAKT;AACF;AApF8B;AAAA,EAA3BC,GAAS,EAAE,MAAM,OAAO,CAAC;AAAA,GANf,QAMiB;AACX;AAAA,EAAhBC,GAAM;AAAA,GAPI,QAOM;AAES;AAAA,EAAzBC,GAAM,SAAS;AAAA,GATL,QASe;AATf,UAAN;AAAA,EADNC,GAAc,UAAU;AAAA,GACZ;;;ALDb;AAGO,IAAM,WAAN,cAAuBC,GAAW;AAAA,EAAlC;AAAA;AAOL;AAAA,SAAiB,WACf,OAAO,SAAS,aAAa,cAAc,MAAM;AAE1C,SAAQ,cAAc,OAAO,SAAS;AAiB/C,SAAQ,cAAc,MAAM;AAC1B,WAAK,cAAc,OAAO,SAAS;AAAA,IACrC;AAGA;AAAA,SAAQ,gBAAgB,CAACC,OAAqC;AAC5D,YAAM,UAAUA,GAAE,OAAO,KAAK,QAAQ,QAAQ,EAAE;AAChD,YAAM,SAAS,IAAI,OAAO;AAE1B,WAAK,WAAW,SAAS,MAAM;AAAA,IACjC;AAGA;AAAA,SAAQ,gBAAgB,MAAM,KAAK,WAAW,SAAS,QAAQ;AAC/D,SAAQ,iBAAiB,MAAM;AAC7B,kBAAY,OAAO;AACnB,WAAK,WAAW,SAAS,GAAG;AAC5B,WAAK,cAAc;AAAA,IACrB;AACA,SAAQ,kBAAkB,MAAM,KAAK,WAAW,SAAS,YAAY;AAGrE;AAAA,SAAQ,gBAAgB,CAACA,OACvB,KAAK,WAAW,SAASA,GAAE,OAAO,IAAI;AACxC,SAAQ,iBAAiB,MAAM,KAAK,cAAc;AAAA;AAAA;AAAA,EAjDlD,mBAAmB;AACjB,WAAO;AAAA,EACT;AAAA,EAYA,oBAAoB;AAClB,UAAM,kBAAkB;AAExB,WAAO,iBAAiB,YAAY,KAAK,WAAW;AAAA,EACtD;AAAA,EAEA,uBAAuB;AACrB,WAAO,oBAAoB,YAAY,KAAK,WAAW;AACvD,UAAM,qBAAqB;AAAA,EAC7B;AAAA,EA4BA,SAAS;AACP,WAAO;AAAA;AAAA,uBAEY,KAAK,WAAW;AAAA,oBACnB,YAAY,QAAQ,GAAG,YAAY,OAAO;AAAA,qBACzC,YAAY,QAAQ,GAAG,aAAa,EAAE;AAAA,sBACrC,YAAY,WAAW,CAAC;AAAA,uBACvB,KAAK,aAAa;AAAA,uBAClB,KAAK,aAAa;AAAA,wBACjB,KAAK,cAAc;AAAA,yBAClB,KAAK,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKzB,KAAK,QAAQ;AAAA,yBACR,CAAC,OAAsC;AACtD,WAAK,cAAc,GAAG,OAAO;AAAA,IAC/B,CAAC;AAAA,uBACc,KAAK,aAAa;AAAA,wBACjB,KAAK,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMzC;AACF;AAtEmB;AAAA,EAAhBC,GAAM;AAAA,GAVI,SAUM;AAEU;AAAA,EAA1BD,GAAM,UAAU;AAAA,GAZN,SAYgB;AAZhB,WAAN;AAAA,EADNE,GAAc,WAAW;AAAA,GACb;",
  "names": ["global", "supportsAdoptingStyleSheets", "constructionToken", "cssTagCache", "CSSResult", "unsafeCSS", "css", "adoptStyles", "getCompatibleStyle", "globalThis", "ShadowRoot", "ShadyCSS", "nativeShadow", "Document", "prototype", "CSSStyleSheet", "Symbol", "WeakMap", "cssText", "strings", "safeToken", "this", "Error", "_strings", "styleSheet", "_styleSheet", "cacheable", "length", "get", "replaceSync", "set", "toString", "value", "String", "values", "reduce", "acc", "v", "idx", "renderRoot", "styles", "adoptedStyleSheets", "map", "s", "style", "document", "createElement", "nonce", "setAttribute", "textContent", "appendChild", "sheet", "rule", "cssRules", "is", "defineProperty", "getOwnPropertyDescriptor", "getOwnPropertyNames", "getOwnPropertySymbols", "getPrototypeOf", "global", "trustedTypes", "emptyStringForBooleanAttribute", "polyfillSupport", "JSCompiler_renameProperty", "defaultConverter", "notEqual", "defaultPropertyDeclaration", "ReactiveElement", "Object", "globalThis", "emptyScript", "reactiveElementPolyfillSupport", "prop", "_obj", "value", "type", "Boolean", "Array", "JSON", "stringify", "fromValue", "Number", "parse", "e", "old", "attribute", "String", "converter", "reflect", "useDefault", "hasChanged", "Symbol", "metadata", "litPropertyMetadata", "WeakMap", "HTMLElement", "initializer", "this", "__prepare", "_initializers", "push", "observedAttributes", "finalize", "__attributeToPropertyMap", "keys", "name", "options", "state", "prototype", "hasOwnProperty", "create", "wrapped", "elementProperties", "set", "noAccessor", "key", "descriptor", "getPropertyDescriptor", "get", "v", "oldValue", "call", "requestUpdate", "configurable", "enumerable", "superCtor", "Map", "finalized", "props", "properties", "propKeys", "p", "createProperty", "attr", "__attributeNameForProperty", "elementStyles", "finalizeStyles", "styles", "isArray", "Set", "flat", "Infinity", "reverse", "s", "unshift", "getCompatibleStyle", "toLowerCase", "constructor", "super", "__instanceProperties", "isUpdatePending", "hasUpdated", "__reflectingProperty", "__initialize", "__updatePromise", "Promise", "res", "enableUpdating", "_$changedProperties", "__saveInstanceProperties", "forEach", "i", "controller", "__controllers", "add", "renderRoot", "isConnected", "hostConnected", "delete", "instanceProperties", "size", "createRenderRoot", "shadowRoot", "attachShadow", "shadowRootOptions", "adoptStyles", "connectedCallback", "c", "_requestedUpdate", "disconnectedCallback", "hostDisconnected", "_old", "_$attributeToProperty", "attrValue", "toAttribute", "removeAttribute", "setAttribute", "ctor", "propName", "getPropertyOptions", "fromAttribute", "convertedValue", "__defaultValues", "newValue", "hasAttribute", "_$changeProperty", "__enqueueUpdate", "initializeValue", "has", "__reflectingProperties", "reject", "result", "scheduleUpdate", "performUpdate", "shouldUpdate", "changedProperties", "willUpdate", "hostUpdate", "update", "__markUpdated", "_$didUpdate", "_changedProperties", "hostUpdated", "firstUpdated", "updated", "updateComplete", "getUpdateComplete", "__propertyToAttribute", "mode", "reactiveElementVersions", "trustFromTemplateString", "tsa", "stringFromTSA", "isArray", "hasOwnProperty", "Error", "policy", "createHTML", "resolveDirective", "part", "value", "parent", "attributeIndex", "noChange", "currentDirective", "__directives", "__directive", "nextDirectiveConstructor", "isPrimitive", "constructor", "_$initialize", "_$resolve", "values", "global", "trustedTypes", "boundAttributeSuffix", "marker", "markerMatch", "nodeMarker", "d", "createMarker", "isIterable", "SPACE_CHAR", "textEndRegex", "commentEndRegex", "comment2EndRegex", "tagEndRegex", "singleQuoteAttrEndRegex", "doubleQuoteAttrEndRegex", "rawTextElement", "tag", "html", "svg", "mathml", "nothing", "templateCache", "walker", "getTemplateHtml", "Template", "TemplateInstance", "ChildPart", "AttributePart", "PropertyPart", "BooleanAttributePart", "EventPart", "ElementPart", "polyfillSupport", "render", "globalThis", "createPolicy", "s", "Math", "random", "toFixed", "slice", "document", "createComment", "Array", "Symbol", "iterator", "RegExp", "type", "strings", "_$litType$", "for", "WeakMap", "createTreeWalker", "l", "length", "attrNames", "rawTextEndRegex", "regex", "i", "attrName", "match", "attrNameEndIndex", "lastIndex", "exec", "test", "end", "startsWith", "push", "options", "node", "this", "parts", "nodeIndex", "attrNameIndex", "partCount", "el", "createElement", "currentNode", "content", "wrapper", "firstChild", "replaceWith", "childNodes", "nextNode", "nodeType", "hasAttributes", "name", "getAttributeNames", "endsWith", "realName", "statics", "getAttribute", "split", "m", "index", "ctor", "removeAttribute", "tagName", "textContent", "emptyScript", "append", "data", "indexOf", "_options", "innerHTML", "template", "_$parts", "_$disconnectableChildren", "_$template", "_$parent", "parentNode", "_$isConnected", "fragment", "creationScope", "importNode", "partIndex", "templatePart", "nextSibling", "_$setValue", "__isConnected", "startNode", "endNode", "_$committedValue", "_$startNode", "_$endNode", "isConnected", "directiveParent", "_$clear", "_commitText", "_commitTemplateResult", "_commitNode", "_commitIterable", "insertBefore", "_insert", "createTextNode", "result", "_$getTemplate", "h", "_update", "instance", "_clone", "get", "set", "itemParts", "itemPart", "item", "start", "from", "_$notifyConnectionChanged", "n", "remove", "element", "fill", "String", "valueIndex", "noCommit", "change", "v", "_commitValue", "setAttribute", "toggleAttribute", "super", "newListener", "oldListener", "shouldRemoveListener", "capture", "once", "passive", "shouldAddListener", "removeEventListener", "addEventListener", "event", "call", "host", "handleEvent", "litHtmlPolyfillSupport", "litHtmlVersions", "container", "partOwnerNode", "renderBefore", "global", "LitElement", "polyfillSupport", "globalThis", "ReactiveElement", "constructor", "this", "renderOptions", "host", "__childPart", "createRenderRoot", "renderRoot", "super", "renderBefore", "firstChild", "changedProperties", "value", "render", "hasUpdated", "isConnected", "update", "connectedCallback", "setConnected", "disconnectedCallback", "noChange", "litElementHydrateSupport", "litElementPolyfillSupport", "_$changedProperties", "litElementVersions", "push", "customElement", "tagName", "classOrTarget", "context", "addInitializer", "customElements", "define", "property", "options", "protoOrTarget", "nameOrContext", "standardProperty", "proto", "name", "hasOwnProperty", "constructor", "createProperty", "Object", "getOwnPropertyDescriptor", "defaultPropertyDeclaration", "attribute", "type", "String", "converter", "defaultConverter", "reflect", "hasChanged", "notEqual", "target", "context", "kind", "metadata", "properties", "globalThis", "litPropertyMetadata", "get", "set", "Map", "create", "wrapped", "v", "oldValue", "call", "this", "requestUpdate", "_$changeProperty", "value", "Error", "state", "options", "property", "attribute", "desc", "obj", "name", "descriptor", "configurable", "enumerable", "Reflect", "decorate", "Object", "defineProperty", "query", "selector", "cache", "protoOrTarget", "nameOrContext", "descriptor", "doQuery", "el", "renderRoot", "querySelector", "get", "set", "key", "Symbol", "this", "v", "desc", "result", "call", "hasUpdated", "u", "r", "j", "e", "i", "e", "r", "t", "i", "r", "t", "i", "t", "i", "t", "i", "t", "i", "t", "i", "t", "i", "t", "i", "e", "n", "r", "t", "i", "e", "n", "r", "t", "i", "e", "n", "t", "i", "t", "i", "j", "value", "_a", "result", "char", "prefix", "x", "x", "o", "f", "s", "m", "i", "i", "resolveRoute", "cache", "e", "_", "a", "b", "getRoutePath", "e", "i", "triggers", "nextContext", "i", "location", "e", "i", "n", "t", "i", "t", "i", "n", "r", "e", "t", "i", "e", "r", "t"]
}
